import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test06501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06501");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.String str9 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 1L);
        highamHall54Integrator4.setMaxGrowth((double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        int int16 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
    }

    @Test
    public void test06502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06502");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        boolean boolean11 = stepHandler10.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06503");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler15 = null;
        highamHall54Integrator14.setStepHandler(stepHandler15);
        double double17 = highamHall54Integrator14.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler18 = null;
        highamHall54Integrator14.setStepHandler(stepHandler18);
        double double20 = highamHall54Integrator14.getMaxStep();
        double double21 = highamHall54Integrator14.getMinStep();
        double double22 = highamHall54Integrator14.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator27.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator27.getStepHandler();
        boolean boolean32 = stepHandler31.requiresDenseOutput();
        highamHall54Integrator14.setStepHandler(stepHandler31);
        boolean boolean34 = stepHandler31.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler31);
        double double36 = highamHall54Integrator4.getMaxStep();
        double double37 = highamHall54Integrator4.getCurrentStepStart();
        double double38 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
    }

    @Test
    public void test06504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06504");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) (short) 0);
        java.lang.String str18 = highamHall54Integrator4.getName();
        double double19 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test06505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06505");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!");
        java.lang.Throwable[] throwableArray26 = mathException25.getSuppressed();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray16);
        java.io.IOException iOException35 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) derivativeException34);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test06506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06506");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setSafety(52.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNull(stepHandler15);
    }

    @Test
    public void test06507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06507");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, 0.9d, (double) 5, (int) (byte) 1);
        int int17 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) (short) 0);
        double double20 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
    }

    @Test
    public void test06508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06508");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable24 = null;
        java.io.IOException iOException25 = new java.io.IOException("", throwable24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray21, (java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", objArray29);
        java.lang.String str32 = mathException31.getPattern();
        java.io.IOException iOException36 = new java.io.IOException("");
        java.io.IOException iOException37 = new java.io.IOException("hi!", (java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException38);
        mathException31.addSuppressed((java.lang.Throwable) iOException38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("java.io.IOException: hi!", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException31);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[10]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test06509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06509");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler4.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler4.evaluateStep(stepInterpolator7);
        double[] doubleArray14 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler4.stepAccepted((double) (byte) 1, doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) 1, (double) (short) 10, (int) ' ');
        double double22 = switchingFunctionsHandler0.getEventTime();
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) 0, (double) (byte) 1, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, 17.78279410038923d, (double) (byte) 1, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test06510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06510");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", throwable3);
        java.lang.Object[] objArray5 = mathException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", objArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", objArray5);
        java.lang.Throwable[] throwableArray8 = integratorException7.getSuppressed();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test06511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06511");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        java.lang.String str8 = highamHall54Integrator4.getName();
        int int9 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, 31.622776601683793d, (double) 10L, (int) (short) -1);
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test06512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06512");
        double[] doubleArray12 = new double[] { 1, (short) 100, 1.0f, 10.0d, (byte) 0, (short) 100 };
        double[] doubleArray23 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray26 = null;
        double[] doubleArray33 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray26, doubleArray33);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray23, doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler36.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler40.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler40.evaluateStep(stepInterpolator43);
        double[] doubleArray50 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler40.stepAccepted((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray50);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray23, doubleArray50);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (byte) 1, doubleArray12, doubleArray23);
        double[] doubleArray60 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        double double64 = switchingFunctionsHandler61.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler61.add(switchingFunction65, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = switchingFunctionsHandler71.evaluateStep(stepInterpolator72);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler75.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        boolean boolean79 = switchingFunctionsHandler75.evaluateStep(stepInterpolator78);
        double[] doubleArray85 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler75.stepAccepted((double) (byte) 1, doubleArray85);
        boolean boolean87 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray85);
        boolean boolean88 = switchingFunctionsHandler61.reset((double) '4', doubleArray85);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray60, doubleArray85);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, 0.0d, doubleArray12, doubleArray85);
        double[] doubleArray91 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator92 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', (double) (short) 100, doubleArray12, doubleArray91);
        double double93 = highamHall54Integrator92.getMinReduction();
        java.lang.String str94 = highamHall54Integrator92.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.2d + "'", double93 == 0.2d);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Higham-Hall 5(4)" + "'", str94, "Higham-Hall 5(4)");
    }

    @Test
    public void test06513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06513");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray12);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        java.lang.Object[] objArray19 = mathException17.getArguments();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: hi!", (java.lang.Throwable) mathException17);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) mathException17);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06514");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMaxGrowth(32.0d);
        double double17 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str18 = highamHall54Integrator4.getName();
        double double19 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        boolean boolean21 = stepHandler20.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06515");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        double double8 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize(3.1622776601683795d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        double double13 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
    }

    @Test
    public void test06516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06516");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler2.add(switchingFunction6, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler12.evaluateStep(stepInterpolator13);
        double double15 = switchingFunctionsHandler12.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler12.add(switchingFunction16, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler26.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler26.evaluateStep(stepInterpolator29);
        double[] doubleArray36 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler26.stepAccepted((double) (byte) 1, doubleArray36);
        boolean boolean38 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray36);
        boolean boolean39 = switchingFunctionsHandler12.reset((double) '4', doubleArray36);
        boolean boolean40 = switchingFunctionsHandler2.reset(3.1622776601683795d, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double double43 = switchingFunctionsHandler41.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler47.evaluateStep(stepInterpolator48);
        double double50 = switchingFunctionsHandler47.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler47.add(switchingFunction51, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler57.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler61.evaluateStep(stepInterpolator64);
        double[] doubleArray71 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler61.stepAccepted((double) (byte) 1, doubleArray71);
        boolean boolean73 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler47.reset((double) '4', doubleArray71);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler75.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        boolean boolean81 = switchingFunctionsHandler79.evaluateStep(stepInterpolator80);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = switchingFunctionsHandler79.evaluateStep(stepInterpolator82);
        double[] doubleArray89 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler79.stepAccepted((double) (byte) 1, doubleArray89);
        boolean boolean91 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray89);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator92 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray71, doubleArray89);
        boolean boolean93 = switchingFunctionsHandler41.reset((double) (-1.0f), doubleArray89);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 1, doubleArray36, doubleArray89);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction95 = null;
        highamHall54Integrator94.addSwitchingFunction(switchingFunction95, 9.924141172814958d, 31.144823004794873d, (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test06517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06517");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        double double18 = highamHall54Integrator16.getMinStep();
        double double19 = highamHall54Integrator16.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler20.handleStep(stepInterpolator21, false);
        highamHall54Integrator4.setStepHandler(stepHandler20);
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction29, (double) (short) 0, (double) 100.0f, 0);
        java.lang.String str34 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
    }

    @Test
    public void test06518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06518");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str25 = highamHall54Integrator4.getName();
        java.lang.String str26 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction27, 3.1622776601683795d, (double) ' ', (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
    }

    @Test
    public void test06519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06519");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        java.lang.String str26 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth((double) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction31, (double) 0L, 24.947901585376336d, 5);
        highamHall54Integrator4.setInitialStepSize((-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test06520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06520");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException24);
        java.lang.Object[] objArray27 = mathException24.getArguments();
        java.io.IOException iOException31 = new java.io.IOException("");
        java.io.IOException iOException32 = new java.io.IOException("hi!", (java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException33);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", objArray27, (java.lang.Throwable) iOException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException37);
        java.lang.Object[] objArray39 = mathException37.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) integratorException40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException42);
        java.lang.String str44 = mathException42.getPattern();
        java.io.IOException iOException45 = new java.io.IOException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException42);
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException45);
        java.lang.Class<?> wildcardClass47 = iOException45.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: " + "'", str44, "org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test06521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06521");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, 31.622776601683793d, (double) 100L, 100);
        highamHall54Integrator4.setInitialStepSize(0.9d);
        highamHall54Integrator4.setMinReduction(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator32.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator32.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler36 = null;
        highamHall54Integrator32.setStepHandler(stepHandler36);
        double double38 = highamHall54Integrator32.getMaxStep();
        double double39 = highamHall54Integrator32.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator44.getStepHandler();
        highamHall54Integrator32.setStepHandler(stepHandler45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler52 = null;
        highamHall54Integrator51.setStepHandler(stepHandler52);
        double double54 = highamHall54Integrator51.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler55 = null;
        highamHall54Integrator51.setStepHandler(stepHandler55);
        double double57 = highamHall54Integrator51.getMaxStep();
        double double58 = highamHall54Integrator51.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator63.getStepHandler();
        highamHall54Integrator51.setStepHandler(stepHandler64);
        highamHall54Integrator32.setStepHandler(stepHandler64);
        stepHandler64.reset();
        boolean boolean68 = stepHandler64.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler64);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        stepHandler64.handleStep(stepInterpolator70, false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1.0d) + "'", double57 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06522");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety(10.0d);
        double double16 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test06523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06523");
        java.lang.String[] strArray7 = new java.lang.String[] { "org.apache.commons.math.MathException: ", "org.apache.commons.math.MathException: ", "Higham-Hall 5(4)", "org.apache.commons.math.ode.DerivativeException" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.Object[] objArray13 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable16 = null;
        java.io.IOException iOException17 = new java.io.IOException("", throwable16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", objArray13, (java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray21 = mathException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", objArray21);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray7, (java.lang.Throwable) iOException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: org.apache.commons.math.ode.DerivativeException", strArray7);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[10]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[10]");
    }

    @Test
    public void test06524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06524");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray16);
        java.io.IOException iOException22 = new java.io.IOException("");
        java.io.IOException iOException23 = new java.io.IOException("hi!", (java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16, (java.lang.Throwable) iOException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str28 = mathException27.getPattern();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException27);
        java.lang.Throwable[] throwableArray30 = mathException29.getSuppressed();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException29);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("java.io.IOException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: java.io.IOException: hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test06525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06525");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test06526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06526");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxStep();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNull(stepHandler14);
    }

    @Test
    public void test06527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06527");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMinReduction();
        int int11 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator16.setInitialStepSize((double) 3);
        double double20 = highamHall54Integrator16.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator25.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = null;
        highamHall54Integrator33.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator33.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        highamHall54Integrator33.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator33.getMaxStep();
        double double40 = highamHall54Integrator33.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = null;
        highamHall54Integrator52.setStepHandler(stepHandler53);
        double double55 = highamHall54Integrator52.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler56 = null;
        highamHall54Integrator52.setStepHandler(stepHandler56);
        double double58 = highamHall54Integrator52.getMaxStep();
        double double59 = highamHall54Integrator52.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler65 = highamHall54Integrator64.getStepHandler();
        highamHall54Integrator52.setStepHandler(stepHandler65);
        highamHall54Integrator33.setStepHandler(stepHandler65);
        highamHall54Integrator25.setStepHandler(stepHandler65);
        highamHall54Integrator16.setStepHandler(stepHandler65);
        stepHandler65.reset();
        boolean boolean71 = stepHandler65.requiresDenseOutput();
        boolean boolean72 = stepHandler65.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler65);
        double double74 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction75, (double) (-1), 0.0d, (int) (short) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 10.0d + "'", double74 == 10.0d);
    }

    @Test
    public void test06528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06528");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str8 = mathException7.getPattern();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray10);
        java.lang.Throwable throwable16 = null;
        java.io.IOException iOException17 = new java.io.IOException("", throwable16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException18);
        java.lang.Object[] objArray22 = mathException21.getArguments();
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", throwable25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException", (java.lang.Throwable) mathException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException", objArray22, (java.lang.Throwable) integratorException28);
        java.io.IOException iOException31 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException: ");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray22, (java.lang.Throwable) iOException31);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test06529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06529");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        double double8 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
    }

    @Test
    public void test06530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06530");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) 0, 97.0d, (-1));
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = switchingFunctionsHandler0.evaluateStep(stepInterpolator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06531");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        boolean boolean15 = stepHandler14.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        stepHandler14.handleStep(stepInterpolator16, false);
        highamHall54Integrator4.setStepHandler(stepHandler14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, (double) (short) 100, (double) 0.0f, (int) '#');
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMaxGrowth();
        double double27 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        double double29 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator4.getStepHandler();
        double double31 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double32 = highamHall54Integrator4.getCurrentStepStart();
        double double33 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.9d + "'", double33 == 0.9d);
    }

    @Test
    public void test06532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06532");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException4);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException6);
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException("", throwable10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException12);
        derivativeException7.addSuppressed((java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!");
        java.lang.Throwable[] throwableArray19 = mathException18.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable27 = null;
        java.io.IOException iOException28 = new java.io.IOException("", throwable27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", objArray24, (java.lang.Throwable) derivativeException30);
        java.lang.Object[] objArray32 = mathException31.getArguments();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", objArray32);
        derivativeException20.addSuppressed((java.lang.Throwable) mathException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray36 = derivativeException20.getSuppressed();
        java.io.IOException iOException37 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException20);
        derivativeException7.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.Object[] objArray42 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable45 = null;
        java.io.IOException iOException46 = new java.io.IOException("", throwable45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", objArray42, (java.lang.Throwable) derivativeException48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException49);
        derivativeException7.addSuppressed((java.lang.Throwable) mathException49);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[10]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10]");
    }

    @Test
    public void test06533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06533");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        double double21 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double22 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMinReduction((double) (byte) 1);
        highamHall54Integrator4.setMaxGrowth((double) 2);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        highamHall54Integrator31.addSwitchingFunction(switchingFunction46, (double) '4', 1.0d, (int) (short) -1);
        double double51 = highamHall54Integrator31.getMaxStep();
        java.lang.String str52 = highamHall54Integrator31.getName();
        double double53 = highamHall54Integrator31.getCurrentSignedStepsize();
        double double54 = highamHall54Integrator31.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler55);
        boolean boolean57 = stepHandler55.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1.0d) + "'", double51 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.9d + "'", double54 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test06534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06534");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: org.apache.commons.math.MathException", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test06535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06535");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getSafety();
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) (short) 1);
        double double14 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9d + "'", double10 == 0.9d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
    }

    @Test
    public void test06536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06536");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double26 = highamHall54Integrator4.getCurrentStepStart();
        double double27 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        boolean boolean29 = stepHandler28.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test06537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06537");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double39 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str40 = highamHall54Integrator4.getName();
        java.lang.String str41 = highamHall54Integrator4.getName();
        double double42 = highamHall54Integrator4.getMinStep();
        double double43 = highamHall54Integrator4.getMinReduction();
        double double44 = highamHall54Integrator4.getMinStep();
        java.lang.String str45 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.2d + "'", double43 == 0.2d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Higham-Hall 5(4)" + "'", str45, "Higham-Hall 5(4)");
    }

    @Test
    public void test06538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06538");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray10 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler0.stepAccepted((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler13.evaluateStep(stepInterpolator14);
        double double16 = switchingFunctionsHandler13.getEventTime();
        boolean boolean17 = switchingFunctionsHandler13.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler23.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler23.evaluateStep(stepInterpolator26);
        double[] doubleArray33 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler23.stepAccepted((double) (byte) 1, doubleArray33);
        boolean boolean35 = switchingFunctionsHandler19.reset((double) (byte) 1, doubleArray33);
        double double36 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray40 = null;
        double[] doubleArray47 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray40, doubleArray47);
        boolean boolean49 = switchingFunctionsHandler19.reset((double) 10.0f, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler13.reset((double) (byte) 10, doubleArray47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler52.evaluateStep(stepInterpolator53);
        double double55 = switchingFunctionsHandler52.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        switchingFunctionsHandler52.add(switchingFunction56, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler62.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler66.evaluateStep(stepInterpolator67);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler66.evaluateStep(stepInterpolator69);
        double[] doubleArray76 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler66.stepAccepted((double) (byte) 1, doubleArray76);
        boolean boolean78 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray76);
        boolean boolean79 = switchingFunctionsHandler52.reset((double) '4', doubleArray76);
        switchingFunctionsHandler13.stepAccepted((double) (short) 1, doubleArray76);
        boolean boolean81 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray76);
        boolean boolean82 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator83 = null;
        boolean boolean84 = switchingFunctionsHandler0.evaluateStep(stepInterpolator83);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator85 = null;
        boolean boolean86 = switchingFunctionsHandler0.evaluateStep(stepInterpolator85);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test06539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06539");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 0.0d, (double) (-1.0f), (int) (byte) 1);
        double double8 = switchingFunctionsHandler0.getEventTime();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (-1.0d), (double) ' ', (int) (byte) 0);
        boolean boolean15 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) (-1.0f), 0.0d, (int) ' ');
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06540");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        highamHall54Integrator4.setMaxGrowth((double) (byte) -1);
        double double7 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 0, (double) 2, (int) (short) 100);
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int14 = highamHall54Integrator4.getOrder();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        double double16 = highamHall54Integrator4.getMinReduction();
        java.lang.String str17 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
    }

    @Test
    public void test06541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06541");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (-1.0f), (double) '4', (int) (short) 100);
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double19 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety(100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNull(stepHandler16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test06542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06542");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) (short) 0, (double) (short) 1, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test06543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06543");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray13 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", objArray13);
        java.lang.Throwable throwable18 = null;
        java.io.IOException iOException19 = new java.io.IOException("", throwable18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException20);
        mathException15.addSuppressed((java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException20);
        java.lang.Throwable[] throwableArray26 = mathException20.getSuppressed();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test06544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06544");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) (short) 10);
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(9.848857801796104d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test06545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06545");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str15 = highamHall54Integrator4.getName();
        double double16 = highamHall54Integrator4.getMinStep();
        double double17 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test06546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06546");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, Double.NaN, (double) (-1), (double) 100.0f);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator9.getStepHandler();
        highamHall54Integrator9.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator9.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        double double22 = highamHall54Integrator18.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator18.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        stepHandler28.handleStep(stepInterpolator30, true);
        highamHall54Integrator9.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        stepHandler28.handleStep(stepInterpolator34, true);
        highamHall54Integrator4.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator4.getStepHandler();
        boolean boolean39 = stepHandler38.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06547");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler2.add(switchingFunction6, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler12.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        double[] doubleArray26 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler16.stepAccepted((double) (byte) 1, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray26);
        boolean boolean29 = switchingFunctionsHandler2.reset((double) '4', doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler34.evaluateStep(stepInterpolator37);
        double[] doubleArray44 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler34.stepAccepted((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray26, doubleArray44);
        double double48 = highamHall54Integrator47.getMinStep();
        double double49 = highamHall54Integrator47.getCurrentSignedStepsize();
        highamHall54Integrator47.setMaxGrowth(31.144823004794873d);
        int int52 = highamHall54Integrator47.getOrder();
        highamHall54Integrator47.setInitialStepSize((double) (-1.0f));
        highamHall54Integrator47.setMinReduction(3.0d);
        java.lang.String str57 = highamHall54Integrator47.getName();
        double double58 = highamHall54Integrator47.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
    }

    @Test
    public void test06548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06548");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        java.lang.String str7 = highamHall54Integrator4.getName();
        double double8 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = null;
        highamHall54Integrator13.setStepHandler(stepHandler14);
        double double16 = highamHall54Integrator13.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator13.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator13.getMaxStep();
        double double20 = highamHall54Integrator13.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator13.setStepHandler(stepHandler26);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator13.addSwitchingFunction(switchingFunction28, (double) '4', 1.0d, (int) (short) -1);
        double double33 = highamHall54Integrator13.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator38.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler42 = null;
        highamHall54Integrator38.setStepHandler(stepHandler42);
        double double44 = highamHall54Integrator38.getMaxStep();
        double double45 = highamHall54Integrator38.getMinStep();
        double double46 = highamHall54Integrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator51.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator51.getStepHandler();
        boolean boolean56 = stepHandler55.requiresDenseOutput();
        highamHall54Integrator38.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        stepHandler55.handleStep(stepInterpolator58, true);
        highamHall54Integrator13.setStepHandler(stepHandler55);
        stepHandler55.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler55.handleStep(stepInterpolator63, true);
        highamHall54Integrator4.setStepHandler(stepHandler55);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1.0d) + "'", double44 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test06549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06549");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        double double28 = highamHall54Integrator4.getMinStep();
        double double29 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize((double) (byte) -1);
        highamHall54Integrator4.setMaxGrowth((double) 100L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        highamHall54Integrator38.addSwitchingFunction(switchingFunction39, (double) 0, (double) 1L, (int) '4');
        int int44 = highamHall54Integrator38.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        highamHall54Integrator38.addSwitchingFunction(switchingFunction45, (double) (short) -1, (double) 1.0f, (int) 'a');
        double double50 = highamHall54Integrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator38.getStepHandler();
        boolean boolean52 = stepHandler51.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler51);
        double double54 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 31.144823004794873d + "'", double50 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test06550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06550");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, 31.622776601683793d, (double) 1.0f, 0);
        double double16 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
    }

    @Test
    public void test06551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06551");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str5 = mathException4.getPattern();
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException4);
        java.lang.Throwable[] throwableArray7 = mathException4.getSuppressed();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray7);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray23);
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray23, (java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray23);
        java.lang.Throwable throwable36 = null;
        java.io.IOException iOException37 = new java.io.IOException(throwable36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray23, (java.lang.Throwable) iOException37);
        java.lang.Object[] objArray39 = mathException38.getArguments();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) throwableArray7);
        java.lang.Throwable[] throwableArray43 = mathException42.getSuppressed();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test06552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06552");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray10 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler0.stepAccepted((double) (byte) 1, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler19.add(switchingFunction23, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler33.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler33.evaluateStep(stepInterpolator36);
        double[] doubleArray43 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler33.stepAccepted((double) (byte) 1, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler19.reset((double) '4', doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray18, doubleArray43);
        boolean boolean48 = switchingFunctionsHandler0.reset((double) (byte) 0, doubleArray43);
        boolean boolean49 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler0.add(switchingFunction50, 100.0d, (double) 10L, 5);
        double double55 = switchingFunctionsHandler0.getEventTime();
        boolean boolean56 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test06553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06553");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler6.evaluateStep(stepInterpolator9);
        double[] doubleArray16 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler6.stepAccepted((double) (byte) 1, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray16);
        double[] doubleArray24 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler25.add(switchingFunction29, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler25.reset((double) '4', doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray24, doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 1, doubleArray16, doubleArray24);
        highamHall54Integrator54.setInitialStepSize((double) 5);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler62 = highamHall54Integrator61.getStepHandler();
        double double63 = highamHall54Integrator61.getCurrentStepStart();
        double double64 = highamHall54Integrator61.getMaxStep();
        highamHall54Integrator61.setInitialStepSize((double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator61.getStepHandler();
        highamHall54Integrator54.setStepHandler(stepHandler67);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1.0d) + "'", double64 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler67);
    }

    @Test
    public void test06554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06554");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException27);
        java.lang.Object[] objArray29 = mathException27.getArguments();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException27);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
    }

    @Test
    public void test06555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06555");
        java.lang.Throwable throwable6 = null;
        java.io.IOException iOException7 = new java.io.IOException("", throwable6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException8);
        java.lang.Throwable[] throwableArray10 = mathException8.getSuppressed();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray21);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException("hi!", (java.lang.Throwable) iOException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray21, (java.lang.Throwable) iOException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) iOException28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray32 = iOException28.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test06556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06556");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException", (java.lang.Object[]) strArray11);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray26);
        java.io.IOException iOException32 = new java.io.IOException("");
        java.io.IOException iOException33 = new java.io.IOException("hi!", (java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray26, (java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray35 = iOException33.getSuppressed();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException33);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray11, (java.lang.Throwable) mathException36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test06557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06557");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        java.lang.Throwable throwable19 = null;
        java.io.IOException iOException20 = new java.io.IOException("", throwable19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray14, (java.lang.Throwable) mathException23);
        java.lang.Object[] objArray26 = mathException23.getArguments();
        java.io.IOException iOException30 = new java.io.IOException("");
        java.io.IOException iOException31 = new java.io.IOException("hi!", (java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException32);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", objArray26, (java.lang.Throwable) iOException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException36);
        java.lang.Object[] objArray38 = mathException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) integratorException39);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException42);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
    }

    @Test
    public void test06558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06558");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, (double) (byte) 10, (double) 1.0f, 1);
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str19 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        double double21 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator4.getStepHandler();
        double double23 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
    }

    @Test
    public void test06559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06559");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        boolean boolean15 = stepHandler14.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        stepHandler14.handleStep(stepInterpolator16, false);
        highamHall54Integrator4.setStepHandler(stepHandler14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, (double) (short) 100, (double) 0.0f, (int) '#');
        double double25 = highamHall54Integrator4.getCurrentStepStart();
        double double26 = highamHall54Integrator4.getCurrentStepStart();
        int int27 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator32.getStepHandler();
        double double34 = highamHall54Integrator32.getMinStep();
        double double35 = highamHall54Integrator32.getMaxGrowth();
        double double36 = highamHall54Integrator32.getCurrentSignedStepsize();
        double double37 = highamHall54Integrator32.getCurrentStepStart();
        highamHall54Integrator32.setMinReduction(17.78279410038923d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator44.setMinReduction((double) 10.0f);
        double double47 = highamHall54Integrator44.getCurrentSignedStepsize();
        java.lang.String str48 = highamHall54Integrator44.getName();
        java.lang.String str49 = highamHall54Integrator44.getName();
        highamHall54Integrator44.setMaxGrowth((double) 1L);
        highamHall54Integrator44.setMaxGrowth((double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator44.getStepHandler();
        highamHall54Integrator44.setMaxGrowth(0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator44.getStepHandler();
        highamHall54Integrator32.setStepHandler(stepHandler57);
        highamHall54Integrator4.setStepHandler(stepHandler57);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Higham-Hall 5(4)" + "'", str48, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Higham-Hall 5(4)" + "'", str49, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertNotNull(stepHandler57);
    }

    @Test
    public void test06560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06560");
        java.io.IOException iOException2 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Throwable) iOException10);
        iOException2.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException15 = new java.io.IOException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException14);
    }

    @Test
    public void test06561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06561");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test06562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06562");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        stepHandler8.handleStep(stepInterpolator9, false);
        boolean boolean12 = stepHandler8.requiresDenseOutput();
        stepHandler8.reset();
        stepHandler8.reset();
        stepHandler8.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06563");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getMinStep();
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getSafety();
        java.lang.String str12 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) (-1));
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
    }

    @Test
    public void test06564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06564");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", strArray13);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) derivativeException19);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test06565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06565");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 0.0d, (double) (short) 100, 1);
        double[] doubleArray15 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        double double19 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler16.add(switchingFunction20, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler26.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler30.evaluateStep(stepInterpolator33);
        double[] doubleArray40 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler30.stepAccepted((double) (byte) 1, doubleArray40);
        boolean boolean42 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray40);
        boolean boolean43 = switchingFunctionsHandler16.reset((double) '4', doubleArray40);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray15, doubleArray40);
        boolean boolean45 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray40);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler0.add(switchingFunction46, (double) 2, (double) 2, 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test06566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06566");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 1.0d, Double.NaN, 1);
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        double[] doubleArray19 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        double double23 = switchingFunctionsHandler20.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler20.add(switchingFunction24, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler34.evaluateStep(stepInterpolator37);
        double[] doubleArray44 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler34.stepAccepted((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler20.reset((double) '4', doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray19, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler49.evaluateStep(stepInterpolator50);
        double double52 = switchingFunctionsHandler49.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler49.add(switchingFunction53, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler59.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler63.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = switchingFunctionsHandler63.evaluateStep(stepInterpolator66);
        double[] doubleArray73 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler63.stepAccepted((double) (byte) 1, doubleArray73);
        boolean boolean75 = switchingFunctionsHandler59.reset((double) (byte) 1, doubleArray73);
        boolean boolean76 = switchingFunctionsHandler49.reset((double) '4', doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), (double) (-1L), doubleArray44, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((-1.0d), doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test06567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06567");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        java.lang.String str7 = mathException5.getPattern();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray21);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException("hi!", (java.lang.Throwable) iOException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray21, (java.lang.Throwable) iOException28);
        java.lang.String str30 = mathException29.getPattern();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!");
        java.lang.Throwable[] throwableArray34 = mathException33.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException33);
        java.io.IOException iOException36 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) derivativeException35);
        mathException29.addSuppressed((java.lang.Throwable) derivativeException35);
        java.lang.Object[] objArray38 = derivativeException35.getArguments();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException44);
        java.lang.Object[] objArray46 = mathException45.getArguments();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable53 = null;
        java.io.IOException iOException54 = new java.io.IOException("", throwable53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("", objArray50, (java.lang.Throwable) derivativeException56);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray46, (java.lang.Throwable) integratorException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("java.io.IOException", objArray46);
        java.lang.Object[] objArray62 = mathException61.getArguments();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", objArray38, (java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: hi!", objArray9, (java.lang.Throwable) mathException64);
        java.io.IOException iOException66 = new java.io.IOException((java.lang.Throwable) mathException64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str30, "org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[10]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
    }

    @Test
    public void test06568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06568");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test06569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06569");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) 0L);
        double double27 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        double double30 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
    }

    @Test
    public void test06570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06570");
        java.io.IOException iOException2 = new java.io.IOException("");
        java.io.IOException iOException3 = new java.io.IOException("hi!", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException("", throwable10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        java.lang.Object[] objArray16 = mathException14.getArguments();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray16);
        iOException3.addSuppressed((java.lang.Throwable) mathException17);
        java.lang.Object[] objArray19 = mathException17.getArguments();
        java.lang.String str20 = mathException17.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException17);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) integratorException21);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
    }

    @Test
    public void test06571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06571");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) 1.0f, (double) 0, 10);
        java.lang.String str16 = highamHall54Integrator4.getName();
        java.lang.String str17 = highamHall54Integrator4.getName();
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test06572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06572");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        stepHandler16.handleStep(stepInterpolator17, false);
        boolean boolean20 = stepHandler16.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler16.handleStep(stepInterpolator21, false);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06573");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler6.evaluateStep(stepInterpolator9);
        double[] doubleArray16 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler6.stepAccepted((double) (byte) 1, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray16);
        double double19 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray23 = null;
        double[] doubleArray30 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray23, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler2.reset((double) 10.0f, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler33.add(switchingFunction34, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean39 = switchingFunctionsHandler33.isEmpty();
        boolean boolean40 = switchingFunctionsHandler33.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler46.evaluateStep(stepInterpolator49);
        double[] doubleArray56 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler46.stepAccepted((double) (byte) 1, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler33.reset((double) 1L, doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0.0f, doubleArray30, doubleArray56);
        double double61 = highamHall54Integrator60.getMaxGrowth();
        double double62 = highamHall54Integrator60.getCurrentStepStart();
        int int63 = highamHall54Integrator60.getOrder();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5 + "'", int63 == 5);
    }

    @Test
    public void test06574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06574");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        java.lang.Object[] objArray12 = mathException9.getArguments();
        java.lang.Throwable[] throwableArray13 = mathException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray13);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test06575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06575");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMaxStep();
        double double19 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        highamHall54Integrator12.setStepHandler(stepHandler44);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        double double48 = highamHall54Integrator4.getCurrentStepStart();
        double double49 = highamHall54Integrator4.getMinStep();
        double double50 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) ' ');
        highamHall54Integrator4.setMaxGrowth((double) 3);
        highamHall54Integrator4.setMinReduction(0.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1.0d) + "'", double50 == (-1.0d));
    }

    @Test
    public void test06576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06576");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        highamHall54Integrator4.setSafety((double) (-1.0f));
        int int7 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (byte) 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test06577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06577");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) ' ', (double) 100.0f, 2);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test06578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06578");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getSafety();
        double double9 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
    }

    @Test
    public void test06579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06579");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray16);
        java.lang.Throwable throwable22 = null;
        java.io.IOException iOException23 = new java.io.IOException("", throwable22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16, (java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", strArray16);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16);
        java.io.IOException iOException32 = new java.io.IOException("java.io.IOException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Throwable) mathException31);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test06580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06580");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction31, 0.0d, (double) 1.0f, (int) '4');
        java.lang.String str36 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator4.getStepHandler();
        double double38 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) (short) 0, (double) (short) 1, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler44);
        java.lang.String str46 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety(31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
    }

    @Test
    public void test06581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06581");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray11);
        java.io.IOException iOException17 = new java.io.IOException("");
        java.io.IOException iOException18 = new java.io.IOException("hi!", (java.lang.Throwable) iOException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray11, (java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray20 = iOException18.getSuppressed();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray20);
        java.io.IOException iOException24 = new java.io.IOException("");
        java.io.IOException iOException25 = new java.io.IOException("hi!", (java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException25);
        mathException21.addSuppressed((java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException29);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test06582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06582");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler11.add(switchingFunction14, 0.0d, (double) (-1.0f), (int) (byte) 1);
        boolean boolean19 = switchingFunctionsHandler11.stop();
        double[] doubleArray26 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        double double30 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler27.add(switchingFunction31, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler37.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler41.evaluateStep(stepInterpolator44);
        double[] doubleArray51 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler41.stepAccepted((double) (byte) 1, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler27.reset((double) '4', doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray26, doubleArray51);
        boolean boolean56 = switchingFunctionsHandler11.reset(0.0d, doubleArray51);
        boolean boolean57 = switchingFunctionsHandler0.reset(5.0d, doubleArray51);
        double double58 = switchingFunctionsHandler0.getEventTime();
        java.lang.Class<?> wildcardClass59 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test06583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06583");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray9);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test06584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06584");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        java.lang.String str12 = mathException9.getPattern();
        java.lang.Object[] objArray13 = mathException9.getArguments();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Throwable) iOException15);
        java.lang.Class<?> wildcardClass17 = mathException16.getClass();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str12, "org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06585");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str5 = mathException4.getPattern();
        java.lang.String str6 = mathException4.getPattern();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException4);
        java.lang.Object[] objArray8 = mathException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: Higham-Hall 5(4)", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", objArray8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test06586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06586");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double5 = highamHall54Integrator4.getMinReduction();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 100L, 100.0d, 10);
        highamHall54Integrator4.setSafety((double) 0);
        int int14 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    }

    @Test
    public void test06587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06587");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        double double18 = highamHall54Integrator16.getMinStep();
        double double19 = highamHall54Integrator16.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler20.handleStep(stepInterpolator21, false);
        highamHall54Integrator4.setStepHandler(stepHandler20);
        java.lang.String str25 = highamHall54Integrator4.getName();
        java.lang.String str26 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
    }

    @Test
    public void test06588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06588");
        double[] doubleArray2 = null;
        double[] doubleArray9 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray2, doubleArray9);
        highamHall54Integrator10.setMinReduction(56.568542494923804d);
        double double13 = highamHall54Integrator10.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
    }

    @Test
    public void test06589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06589");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMaxStep();
        double double19 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        highamHall54Integrator12.setStepHandler(stepHandler44);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction48, (double) '#', (double) 0, (int) '#');
        java.lang.String str53 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Higham-Hall 5(4)" + "'", str53, "Higham-Hall 5(4)");
    }

    @Test
    public void test06590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06590");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator24.setSafety((double) '4');
        highamHall54Integrator24.setMaxGrowth(0.0d);
        double double29 = highamHall54Integrator24.getMinReduction();
        highamHall54Integrator24.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler32);
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setSafety(97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(stepHandler35);
    }

    @Test
    public void test06591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06591");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMaxStep();
        double double19 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        highamHall54Integrator12.setStepHandler(stepHandler44);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        double double48 = highamHall54Integrator4.getCurrentStepStart();
        double double49 = highamHall54Integrator4.getMinStep();
        double double50 = highamHall54Integrator4.getMaxStep();
        double double51 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1.0d) + "'", double50 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.9d + "'", double51 == 0.9d);
    }

    @Test
    public void test06592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06592");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(17.78279410038923d, (double) '4', (double) 3, 32.0d);
        highamHall54Integrator4.setMinReduction((double) 1);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction13, (double) 0, (double) 1L, (int) '4');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator22.setMinReduction((double) 10.0f);
        double double25 = highamHall54Integrator22.getCurrentSignedStepsize();
        java.lang.String str26 = highamHall54Integrator22.getName();
        java.lang.String str27 = highamHall54Integrator22.getName();
        highamHall54Integrator22.setMaxGrowth((double) 1L);
        highamHall54Integrator22.setMaxGrowth((double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator22.getStepHandler();
        highamHall54Integrator22.setMaxGrowth(0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator22.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler35.handleStep(stepInterpolator37, false);
        boolean boolean40 = stepHandler35.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler35);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 30.408967315912587d + "'", double7 == 30.408967315912587d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test06593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06593");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException", (java.lang.Object[]) strArray11);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray26);
        java.io.IOException iOException32 = new java.io.IOException("");
        java.io.IOException iOException33 = new java.io.IOException("hi!", (java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray26, (java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray35 = iOException33.getSuppressed();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException33);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray11, (java.lang.Throwable) mathException36);
        java.io.IOException iOException38 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: java.io.IOException", (java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Higham-Hall 5(4)");
        java.lang.String str42 = mathException41.getPattern();
        java.io.IOException iOException43 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) mathException41);
        iOException38.addSuppressed((java.lang.Throwable) iOException43);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.apache.commons.math.MathException: Higham-Hall 5(4)" + "'", str42, "org.apache.commons.math.MathException: Higham-Hall 5(4)");
    }

    @Test
    public void test06594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06594");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double39 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str40 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = null;
        highamHall54Integrator45.setStepHandler(stepHandler46);
        double double48 = highamHall54Integrator45.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler49 = null;
        highamHall54Integrator45.setStepHandler(stepHandler49);
        double double51 = highamHall54Integrator45.getMaxStep();
        double double52 = highamHall54Integrator45.getMinStep();
        double double53 = highamHall54Integrator45.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator58.getStepHandler();
        highamHall54Integrator58.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler62 = highamHall54Integrator58.getStepHandler();
        boolean boolean63 = stepHandler62.requiresDenseOutput();
        highamHall54Integrator45.setStepHandler(stepHandler62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler62.handleStep(stepInterpolator65, true);
        highamHall54Integrator4.setStepHandler(stepHandler62);
        double double69 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1.0d) + "'", double51 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
    }

    @Test
    public void test06595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06595");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler5.evaluateStep(stepInterpolator6);
        double double8 = switchingFunctionsHandler5.getEventTime();
        boolean boolean9 = switchingFunctionsHandler5.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler15.evaluateStep(stepInterpolator16);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler15.evaluateStep(stepInterpolator18);
        double[] doubleArray25 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler15.stepAccepted((double) (byte) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray25);
        double double28 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray32 = null;
        double[] doubleArray39 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray32, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler11.reset((double) 10.0f, doubleArray39);
        boolean boolean42 = switchingFunctionsHandler5.reset((double) (byte) 10, doubleArray39);
        double double43 = switchingFunctionsHandler5.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler45.evaluateStep(stepInterpolator46);
        double double48 = switchingFunctionsHandler45.getEventTime();
        boolean boolean49 = switchingFunctionsHandler45.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler51.evaluateStep(stepInterpolator52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler55.evaluateStep(stepInterpolator58);
        double[] doubleArray65 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler55.stepAccepted((double) (byte) 1, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray65);
        double double68 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray72 = null;
        double[] doubleArray79 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray72, doubleArray79);
        boolean boolean81 = switchingFunctionsHandler51.reset((double) 10.0f, doubleArray79);
        boolean boolean82 = switchingFunctionsHandler45.reset((double) (byte) 10, doubleArray79);
        switchingFunctionsHandler5.stepAccepted(0.0d, doubleArray79);
        boolean boolean84 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray79);
        double double85 = switchingFunctionsHandler0.getEventTime();
        boolean boolean86 = switchingFunctionsHandler0.isEmpty();
        double double87 = switchingFunctionsHandler0.getEventTime();
        boolean boolean88 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test06596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06596");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler0.evaluateStep(stepInterpolator5);
        boolean boolean7 = switchingFunctionsHandler0.stop();
        boolean boolean8 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06597");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
    }

    @Test
    public void test06598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06598");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        int int18 = highamHall54Integrator4.getOrder();
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        int int22 = highamHall54Integrator4.getOrder();
        double double23 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction26, (double) (-1L), 9.848857801796104d, 1);
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction32, (double) ' ', 0.4472135954999579d, 1);
        double double37 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 97.0d + "'", double37 == 97.0d);
    }

    @Test
    public void test06599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06599");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction18, (double) 'a', (double) 'a', 0);
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        highamHall54Integrator4.setInitialStepSize(0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction27, (double) 0.0f, 3.0d, (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator4.getStepHandler();
        java.lang.String str33 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
    }

    @Test
    public void test06600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06600");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray18);
        java.lang.Throwable throwable24 = null;
        java.io.IOException iOException25 = new java.io.IOException("", throwable24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException25);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray18, (java.lang.Throwable) iOException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray18);
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray18, throwable34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException(throwable34);
        java.lang.Object[] objArray37 = integratorException36.getArguments();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray51);
        java.lang.Throwable throwable57 = null;
        java.io.IOException iOException58 = new java.io.IOException("", throwable57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException58);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray51, (java.lang.Throwable) iOException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray51);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", objArray37, (java.lang.Throwable) mathException65);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", objArray37);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test06601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06601");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator13.getStepHandler();
        boolean boolean18 = stepHandler17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        stepHandler17.handleStep(stepInterpolator19, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        java.lang.String str23 = highamHall54Integrator4.getName();
        double double24 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator4.getStepHandler();
        double double26 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test06602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06602");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (byte) 1, (double) 10.0f, (int) 'a');
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test06603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06603");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray8 = null;
        boolean boolean9 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler0.evaluateStep(stepInterpolator10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06604");
        java.lang.String[] strArray7 = new java.lang.String[] { "org.apache.commons.math.MathException: ", "org.apache.commons.math.MathException: ", "Higham-Hall 5(4)", "org.apache.commons.math.ode.DerivativeException" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray7, (java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException10);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) integratorException13);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test06605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06605");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, (double) 'a', (double) '#', (double) (-1));
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, 1.0d, (double) 100, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 9.848857801796104d + "'", double5 == 9.848857801796104d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }

    @Test
    public void test06606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06606");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        double double21 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction22, (double) (-1), 9.486832980505138d, (int) (short) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
    }

    @Test
    public void test06607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06607");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 0.0d, (double) (-1.0f), (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) (-1L), (double) (byte) 1, 0);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        boolean boolean15 = switchingFunctionsHandler0.stop();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06608");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", throwable1);
    }

    @Test
    public void test06609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06609");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator14.getStepHandler();
        highamHall54Integrator14.setMinReduction(10.0d);
        int int18 = highamHall54Integrator14.getOrder();
        java.lang.String str19 = highamHall54Integrator14.getName();
        double double20 = highamHall54Integrator14.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator14.addSwitchingFunction(switchingFunction21, (double) (byte) 10, (double) (short) -1, (int) '4');
        double double26 = highamHall54Integrator14.getMinReduction();
        double double27 = highamHall54Integrator14.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator14.getStepHandler();
        boolean boolean29 = stepHandler28.requiresDenseOutput();
        boolean boolean30 = stepHandler28.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler28);
        boolean boolean32 = stepHandler28.requiresDenseOutput();
        java.lang.Class<?> wildcardClass33 = stepHandler28.getClass();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test06610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06610");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray15);
        java.io.IOException iOException23 = new java.io.IOException("org.apache.commons.math.MathException: ");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15, (java.lang.Throwable) iOException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: Higham-Hall 5(4)", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test06611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06611");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) 0L, (double) 3, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMaxGrowth((double) 3);
        double double8 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
    }

    @Test
    public void test06612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06612");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 1, (double) 1L, 3);
        boolean boolean8 = switchingFunctionsHandler0.stop();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        double double10 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray21 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        double double25 = switchingFunctionsHandler22.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler22.add(switchingFunction26, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler32.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler36.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler36.evaluateStep(stepInterpolator39);
        double[] doubleArray46 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler36.stepAccepted((double) (byte) 1, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler22.reset((double) '4', doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray21, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler51.evaluateStep(stepInterpolator52);
        double double54 = switchingFunctionsHandler51.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler51.add(switchingFunction55, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = switchingFunctionsHandler65.evaluateStep(stepInterpolator66);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = switchingFunctionsHandler65.evaluateStep(stepInterpolator68);
        double[] doubleArray75 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler65.stepAccepted((double) (byte) 1, doubleArray75);
        boolean boolean77 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray75);
        boolean boolean78 = switchingFunctionsHandler51.reset((double) '4', doubleArray75);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), (double) (-1L), doubleArray46, doubleArray75);
        double[] doubleArray82 = null;
        double[] doubleArray89 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray82, doubleArray89);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator(97.0d, (double) '#', doubleArray46, doubleArray89);
        boolean boolean92 = switchingFunctionsHandler0.reset((double) 10.0f, doubleArray89);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06613");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth(5.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler19);
    }

    @Test
    public void test06614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06614");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (byte) 1);
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator19.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator19.getCurrentSignedStepsize();
        double double23 = highamHall54Integrator19.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator19.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator19.getCurrentSignedStepsize();
        double double32 = highamHall54Integrator19.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler38 = null;
        highamHall54Integrator37.setStepHandler(stepHandler38);
        double double40 = highamHall54Integrator37.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler41 = null;
        highamHall54Integrator37.setStepHandler(stepHandler41);
        double double43 = highamHall54Integrator37.getMaxStep();
        double double44 = highamHall54Integrator37.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator49.getStepHandler();
        highamHall54Integrator37.setStepHandler(stepHandler50);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        highamHall54Integrator37.addSwitchingFunction(switchingFunction52, (double) '4', 1.0d, (int) (short) -1);
        double double57 = highamHall54Integrator37.getMaxStep();
        double double58 = highamHall54Integrator37.getSafety();
        highamHall54Integrator37.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator19.setStepHandler(stepHandler61);
        highamHall54Integrator4.setStepHandler(stepHandler61);
        boolean boolean64 = stepHandler61.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1.0d) + "'", double57 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.9d + "'", double58 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test06615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06615");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        highamHall54Integrator20.setMaxGrowth((double) 1.0f);
        double double23 = highamHall54Integrator20.getMinReduction();
        double double24 = highamHall54Integrator20.getCurrentStepStart();
        highamHall54Integrator20.setMaxGrowth((double) 2);
        double double27 = highamHall54Integrator20.getMaxStep();
        double double28 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test06616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06616");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(9.848857801796104d, (double) 10.0f, 3.1622776601683795d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int6 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 9.924141172814958d + "'", double5 == 9.924141172814958d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    }

    @Test
    public void test06617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06617");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 5, (double) 1, (double) (short) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler11 = null;
        highamHall54Integrator10.setStepHandler(stepHandler11);
        double double13 = highamHall54Integrator10.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler14 = null;
        highamHall54Integrator10.setStepHandler(stepHandler14);
        double double16 = highamHall54Integrator10.getMaxStep();
        double double17 = highamHall54Integrator10.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator22.getStepHandler();
        highamHall54Integrator10.setStepHandler(stepHandler23);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator10.addSwitchingFunction(switchingFunction25, (double) '4', 1.0d, (int) (short) -1);
        double double30 = highamHall54Integrator10.getMaxStep();
        double double31 = highamHall54Integrator10.getSafety();
        highamHall54Integrator10.setMaxGrowth((double) 10);
        double double34 = highamHall54Integrator10.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler40 = null;
        highamHall54Integrator39.setStepHandler(stepHandler40);
        double double42 = highamHall54Integrator39.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler43 = null;
        highamHall54Integrator39.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator39.getMaxStep();
        double double46 = highamHall54Integrator39.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator39.setStepHandler(stepHandler52);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler59 = null;
        highamHall54Integrator58.setStepHandler(stepHandler59);
        double double61 = highamHall54Integrator58.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler62 = null;
        highamHall54Integrator58.setStepHandler(stepHandler62);
        double double64 = highamHall54Integrator58.getMaxStep();
        double double65 = highamHall54Integrator58.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler71 = highamHall54Integrator70.getStepHandler();
        highamHall54Integrator58.setStepHandler(stepHandler71);
        highamHall54Integrator39.setStepHandler(stepHandler71);
        highamHall54Integrator10.setStepHandler(stepHandler71);
        highamHall54Integrator4.setStepHandler(stepHandler71);
        double double76 = highamHall54Integrator4.getMaxStep();
        java.lang.String str77 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.0d) + "'", double45 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1.0d) + "'", double64 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 5.0d + "'", double76 == 5.0d);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Higham-Hall 5(4)" + "'", str77, "Higham-Hall 5(4)");
    }

    @Test
    public void test06618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06618");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray9);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test06619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06619");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler2.add(switchingFunction6, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler12.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        double[] doubleArray26 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler16.stepAccepted((double) (byte) 1, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray26);
        boolean boolean29 = switchingFunctionsHandler2.reset((double) '4', doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler34.evaluateStep(stepInterpolator37);
        double[] doubleArray44 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler34.stepAccepted((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray26, doubleArray44);
        double double48 = highamHall54Integrator47.getMinStep();
        highamHall54Integrator47.setSafety((double) (byte) 10);
        double double51 = highamHall54Integrator47.getMinStep();
        double double52 = highamHall54Integrator47.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
    }

    @Test
    public void test06620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06620");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setSafety((double) 1);
        double double22 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }

    @Test
    public void test06621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06621");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str15 = highamHall54Integrator4.getName();
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, (double) (short) 100, 31.622776601683793d, (int) (short) -1);
        double double22 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNull(stepHandler23);
    }

    @Test
    public void test06622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06622");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator15.getStepHandler();
        highamHall54Integrator15.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator15.getStepHandler();
        java.lang.String str20 = highamHall54Integrator15.getName();
        double double21 = highamHall54Integrator15.getSafety();
        java.lang.String str22 = highamHall54Integrator15.getName();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator15.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler23);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler23);
    }

    @Test
    public void test06623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06623");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray10 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler0.stepAccepted((double) (byte) 1, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler19.add(switchingFunction23, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler33.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler33.evaluateStep(stepInterpolator36);
        double[] doubleArray43 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler33.stepAccepted((double) (byte) 1, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler19.reset((double) '4', doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray18, doubleArray43);
        boolean boolean48 = switchingFunctionsHandler0.reset((double) (byte) 0, doubleArray43);
        boolean boolean49 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler0.add(switchingFunction50, 100.0d, (double) 10L, 5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler0.add(switchingFunction55, 3.1622776601683795d, (double) (byte) 100, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        switchingFunctionsHandler0.add(switchingFunction60, (double) 1.0f, (double) (byte) 0, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler0.add(switchingFunction65, (double) (byte) 10, 5.477225575051661d, (int) (short) 0);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = switchingFunctionsHandler0.evaluateStep(stepInterpolator70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test06624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06624");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction29, (double) ' ', (double) 100L, 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator38.setInitialStepSize((double) 3);
        highamHall54Integrator38.setInitialStepSize((double) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator48.getStepHandler();
        boolean boolean50 = stepHandler49.requiresDenseOutput();
        highamHall54Integrator38.setStepHandler(stepHandler49);
        boolean boolean52 = stepHandler49.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler49);
        double double54 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) (byte) -1);
        double double57 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double58 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
    }

    @Test
    public void test06625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06625");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray14);
        java.lang.Throwable throwable22 = null;
        java.io.IOException iOException23 = new java.io.IOException("", throwable22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) mathException26);
        java.io.IOException iOException28 = new java.io.IOException("hi!", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Object[]) strArray14, (java.lang.Throwable) integratorException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray14);
        java.io.IOException iOException37 = new java.io.IOException("");
        java.io.IOException iOException38 = new java.io.IOException("hi!", (java.lang.Throwable) iOException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException37);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException39);
        java.io.IOException iOException44 = new java.io.IOException("");
        java.io.IOException iOException45 = new java.io.IOException("hi!", (java.lang.Throwable) iOException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException44);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException46);
        java.lang.Object[] objArray48 = integratorException47.getArguments();
        mathException39.addSuppressed((java.lang.Throwable) integratorException47);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException47);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) integratorException52);
        java.lang.String str54 = mathException53.getPattern();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    public void test06626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06626");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator29.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator29.getMaxStep();
        double double36 = highamHall54Integrator29.getMinStep();
        double double37 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator42.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator42.getStepHandler();
        boolean boolean47 = stepHandler46.requiresDenseOutput();
        highamHall54Integrator29.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        stepHandler46.handleStep(stepInterpolator49, true);
        highamHall54Integrator4.setStepHandler(stepHandler46);
        stepHandler46.reset();
        boolean boolean54 = stepHandler46.requiresDenseOutput();
        boolean boolean55 = stepHandler46.requiresDenseOutput();
        stepHandler46.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test06627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06627");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test06628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06628");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test06629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06629");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, (double) 0, 100.0d, 0);
        boolean boolean13 = switchingFunctionsHandler0.stop();
        boolean boolean14 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06630");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        double double16 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str19 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test06631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06631");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        java.lang.String str19 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        int int21 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertNotNull(stepHandler22);
    }

    @Test
    public void test06632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06632");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("", throwable4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException6);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray25);
        java.lang.Throwable throwable31 = null;
        java.io.IOException iOException32 = new java.io.IOException("", throwable31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException32);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray25, (java.lang.Throwable) iOException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray25);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException38);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test06633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06633");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("", throwable4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException6);
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) mathException6);
        java.io.IOException iOException9 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Throwable) mathException6);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException9);
    }

    @Test
    public void test06634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06634");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("java.io.IOException");
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", objArray6);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray21);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException("hi!", (java.lang.Throwable) iOException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray21, (java.lang.Throwable) iOException28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Object[]) strArray21);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", objArray6, (java.lang.Throwable) mathException32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray6);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test06635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06635");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) (-1.0f), 31.622776601683793d, 0.0d);
    }

    @Test
    public void test06636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06636");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray14);
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray14, (java.lang.Throwable) iOException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray14);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) derivativeException48);
        java.lang.Throwable throwable53 = null;
        java.io.IOException iOException54 = new java.io.IOException("", throwable53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException54);
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) mathException55);
        java.io.IOException iOException57 = new java.io.IOException("", (java.lang.Throwable) iOException56);
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) iOException56);
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) iOException56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str62 = mathException61.getPattern();
        java.lang.String str63 = mathException61.getPattern();
        iOException56.addSuppressed((java.lang.Throwable) mathException61);
        java.lang.Throwable throwable68 = null;
        java.io.IOException iOException69 = new java.io.IOException("", throwable68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException69);
        java.io.IOException iOException71 = new java.io.IOException((java.lang.Throwable) mathException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException70);
        java.lang.Throwable[] throwableArray73 = mathException70.getSuppressed();
        mathException61.addSuppressed((java.lang.Throwable) mathException70);
        java.lang.Object[] objArray77 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable80 = null;
        java.io.IOException iOException81 = new java.io.IOException("", throwable80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException81);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("", objArray77, (java.lang.Throwable) derivativeException83);
        java.lang.Object[] objArray85 = mathException84.getArguments();
        java.io.IOException iOException86 = new java.io.IOException((java.lang.Throwable) mathException84);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException86);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException86);
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException86);
        mathException70.addSuppressed((java.lang.Throwable) iOException86);
        iOException49.addSuppressed((java.lang.Throwable) mathException70);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) mathException70);
        org.apache.commons.math.ode.DerivativeException derivativeException93 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException92);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[10]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[10]");
    }

    @Test
    public void test06637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06637");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 1L);
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator4.getStepHandler();
        stepHandler18.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(stepHandler18);
    }

    @Test
    public void test06638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06638");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction(17.78279410038923d);
        highamHall54Integrator4.setMaxGrowth((double) (-1.0f));
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test06639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06639");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety((double) (byte) 1);
        double double8 = highamHall54Integrator4.getMaxGrowth();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler11 = null;
        highamHall54Integrator4.setStepHandler(stepHandler11);
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNull(stepHandler14);
    }

    @Test
    public void test06640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06640");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray15);
        java.io.IOException iOException21 = new java.io.IOException("");
        java.io.IOException iOException22 = new java.io.IOException("hi!", (java.lang.Throwable) iOException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15, (java.lang.Throwable) iOException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.MathException: ", strArray15);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) derivativeException28);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test06641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06641");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler2.add(switchingFunction6, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler12.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        double[] doubleArray26 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler16.stepAccepted((double) (byte) 1, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray26);
        boolean boolean29 = switchingFunctionsHandler2.reset((double) '4', doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler34.evaluateStep(stepInterpolator37);
        double[] doubleArray44 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler34.stepAccepted((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray26, doubleArray44);
        double double48 = highamHall54Integrator47.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        highamHall54Integrator47.addSwitchingFunction(switchingFunction49, (double) (byte) 100, (double) '#', (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator47.getStepHandler();
        stepHandler54.reset();
        boolean boolean56 = stepHandler54.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test06642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06642");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) 0, (double) 1.0f, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations9 = null;
        double[] doubleArray17 = new double[] { 100L, (short) 100, 2.0d, 10, 55.3841974787333d, (byte) 0 };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler19.add(switchingFunction23, (double) 0L, (double) 0, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler19.add(switchingFunction28, (double) 2, (double) (byte) 1, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler19.add(switchingFunction33, 0.4472135954999579d, 100.0d, 3);
        boolean boolean38 = switchingFunctionsHandler19.isEmpty();
        double double39 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray45 = null;
        double[] doubleArray52 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray45, doubleArray52);
        switchingFunctionsHandler41.stepAccepted((double) 10L, doubleArray45);
        boolean boolean55 = switchingFunctionsHandler41.isEmpty();
        double double56 = switchingFunctionsHandler41.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        switchingFunctionsHandler41.add(switchingFunction57, (double) '4', (double) (byte) -1, (int) (byte) 1);
        double double62 = switchingFunctionsHandler41.getEventTime();
        boolean boolean63 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = switchingFunctionsHandler65.evaluateStep(stepInterpolator66);
        double double68 = switchingFunctionsHandler65.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler65.add(switchingFunction69, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler75.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        boolean boolean81 = switchingFunctionsHandler79.evaluateStep(stepInterpolator80);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = switchingFunctionsHandler79.evaluateStep(stepInterpolator82);
        double[] doubleArray89 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler79.stepAccepted((double) (byte) 1, doubleArray89);
        boolean boolean91 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray89);
        boolean boolean92 = switchingFunctionsHandler65.reset((double) '4', doubleArray89);
        boolean boolean93 = switchingFunctionsHandler41.reset((double) 100.0f, doubleArray89);
        boolean boolean94 = switchingFunctionsHandler19.reset((double) 10L, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations9, (double) (byte) 10, doubleArray17, (double) 10.0f, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 100.0, 2.0, 10.0, 55.3841974787333, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test06643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06643");
        java.io.IOException iOException6 = new java.io.IOException("");
        java.io.IOException iOException7 = new java.io.IOException("hi!", (java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str15 = mathException14.getPattern();
        java.lang.String str16 = mathException14.getPattern();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException14);
        java.lang.String str18 = mathException17.getPattern();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException" + "'", str18, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06644");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        highamHall54Integrator4.setMaxGrowth((double) (-1));
        double double15 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler21 = null;
        highamHall54Integrator20.setStepHandler(stepHandler21);
        double double23 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator20.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator20.getMaxStep();
        double double27 = highamHall54Integrator20.getMinStep();
        double double28 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator33.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator33.getStepHandler();
        boolean boolean38 = stepHandler37.requiresDenseOutput();
        highamHall54Integrator20.setStepHandler(stepHandler37);
        double double40 = highamHall54Integrator20.getSafety();
        java.lang.String str41 = highamHall54Integrator20.getName();
        highamHall54Integrator20.setSafety((double) '#');
        java.lang.String str44 = highamHall54Integrator20.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double50 = highamHall54Integrator49.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator49.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler51);
        stepHandler51.reset();
        highamHall54Integrator4.setStepHandler(stepHandler51);
        double double55 = highamHall54Integrator4.getMinReduction();
        double double56 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.9d + "'", double40 == 0.9d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1.0d) + "'", double56 == (-1.0d));
    }

    @Test
    public void test06645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06645");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getMaxStep();
        double double29 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((double) 1);
        highamHall54Integrator4.setMaxGrowth((double) 10);
        double double34 = highamHall54Integrator4.getSafety();
        java.lang.String str35 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
    }

    @Test
    public void test06646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06646");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        java.lang.Throwable throwable18 = null;
        java.io.IOException iOException19 = new java.io.IOException("", throwable18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray12, (java.lang.Throwable) iOException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", strArray12);
        java.lang.Object[] objArray25 = derivativeException24.getArguments();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06647");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator21.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator21.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler25 = null;
        highamHall54Integrator21.setStepHandler(stepHandler25);
        double double27 = highamHall54Integrator21.getMaxStep();
        double double28 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator21.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler41 = null;
        highamHall54Integrator40.setStepHandler(stepHandler41);
        double double43 = highamHall54Integrator40.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator40.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator40.getMaxStep();
        double double47 = highamHall54Integrator40.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator40.setStepHandler(stepHandler53);
        highamHall54Integrator21.setStepHandler(stepHandler53);
        highamHall54Integrator13.setStepHandler(stepHandler53);
        highamHall54Integrator4.setStepHandler(stepHandler53);
        double double58 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str59 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 1.0f);
        double double62 = highamHall54Integrator4.getMaxGrowth();
        double double63 = highamHall54Integrator4.getCurrentStepStart();
        int int64 = highamHall54Integrator4.getOrder();
        java.lang.String str65 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Higham-Hall 5(4)" + "'", str59, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Higham-Hall 5(4)" + "'", str65, "Higham-Hall 5(4)");
    }

    @Test
    public void test06648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06648");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) mathException9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException11);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException13);
        java.io.IOException iOException16 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException13);
    }

    @Test
    public void test06649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06649");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, 100.0d, (double) 'a', (int) (short) 10);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = null;
        highamHall54Integrator17.setStepHandler(stepHandler18);
        double double20 = highamHall54Integrator17.getCurrentSignedStepsize();
        double double21 = highamHall54Integrator17.getCurrentStepStart();
        java.lang.String str22 = highamHall54Integrator17.getName();
        double double23 = highamHall54Integrator17.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        highamHall54Integrator17.addSwitchingFunction(switchingFunction24, (double) 1.0f, (double) 100L, 0);
        highamHall54Integrator17.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        double double37 = highamHall54Integrator35.getCurrentStepStart();
        highamHall54Integrator35.setInitialStepSize((double) (byte) 0);
        double double40 = highamHall54Integrator35.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator35.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator46.getStepHandler();
        boolean boolean48 = stepHandler47.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        stepHandler47.handleStep(stepInterpolator49, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        stepHandler47.handleStep(stepInterpolator52, false);
        stepHandler47.reset();
        highamHall54Integrator35.setStepHandler(stepHandler47);
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator35.getStepHandler();
        stepHandler57.reset();
        highamHall54Integrator17.setStepHandler(stepHandler57);
        highamHall54Integrator4.setStepHandler(stepHandler57);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        stepHandler57.handleStep(stepInterpolator61, true);
        stepHandler57.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(stepHandler57);
    }

    @Test
    public void test06650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06650");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getMaxStep();
        java.lang.String str8 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction(30.408967315912587d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
    }

    @Test
    public void test06651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06651");
        java.lang.String[] strArray8 = new java.lang.String[] { "org.apache.commons.math.MathException: ", "org.apache.commons.math.MathException: ", "Higham-Hall 5(4)", "org.apache.commons.math.ode.DerivativeException" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", objArray14, (java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray22 = mathException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", objArray22);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray8, (java.lang.Throwable) iOException25);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("", throwable33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", objArray30, (java.lang.Throwable) derivativeException36);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray8, (java.lang.Throwable) integratorException39);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException", (java.lang.Object[]) strArray8);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[10]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[10]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[10]");
    }

    @Test
    public void test06652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06652");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str8 = mathException7.getPattern();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray10 = mathException7.getSuppressed();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray10);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray26);
        java.lang.Throwable throwable32 = null;
        java.io.IOException iOException33 = new java.io.IOException("", throwable32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException33);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray26, (java.lang.Throwable) iOException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray26);
        java.lang.Throwable throwable39 = null;
        java.io.IOException iOException40 = new java.io.IOException(throwable39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray26, (java.lang.Throwable) iOException40);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException41);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException43);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("", strArray58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray58);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray58);
        java.io.IOException iOException64 = new java.io.IOException("");
        java.io.IOException iOException65 = new java.io.IOException("hi!", (java.lang.Throwable) iOException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray58, (java.lang.Throwable) iOException65);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray58);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str70 = mathException69.getPattern();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException69);
        java.lang.Throwable[] throwableArray72 = mathException71.getSuppressed();
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray58, (java.lang.Throwable) mathException71);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException71);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException74);
        java.io.IOException iOException78 = new java.io.IOException("");
        java.io.IOException iOException79 = new java.io.IOException("hi!", (java.lang.Throwable) iOException78);
        java.lang.Throwable[] throwableArray80 = iOException79.getSuppressed();
        java.lang.Throwable throwable86 = null;
        java.io.IOException iOException87 = new java.io.IOException("", throwable86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException87);
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException88);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException90);
        java.lang.Object[] objArray92 = mathException90.getArguments();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray92);
        iOException79.addSuppressed((java.lang.Throwable) mathException93);
        java.io.IOException iOException95 = new java.io.IOException((java.lang.Throwable) mathException93);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException93);
        org.apache.commons.math.ode.IntegratorException integratorException97 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ode.IntegratorException integratorException98 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray10);
        java.lang.String str99 = integratorException98.getPattern();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!" + "'", str99, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test06653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06653");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: java.io.IOException", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test06654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06654");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", throwable1);
    }

    @Test
    public void test06655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06655");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str10 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
    }

    @Test
    public void test06656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06656");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, 0.0d, (double) 1L, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, 3.0d, (double) 3, 0);
        double double27 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, 35.0d, (double) (-1L), 1);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test06657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06657");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str13 = highamHall54Integrator4.getName();
        java.lang.String str14 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, 31.144823004794873d, (double) '#', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, (double) 10, (double) (byte) -1, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction25, (double) (byte) 1, 3.1622776601683795d, 0);
        double double30 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str31 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
    }

    @Test
    public void test06658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06658");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: org.apache.commons.math.ode.IntegratorException: hi!", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06659");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction((double) (short) 1);
        double double14 = highamHall54Integrator4.getMaxStep();
        double double15 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator(3.1622776601683795d, (double) (short) 100, Double.NaN, (double) (-1L));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator25.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = null;
        highamHall54Integrator33.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator33.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        highamHall54Integrator33.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator33.getMaxStep();
        double double40 = highamHall54Integrator33.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = null;
        highamHall54Integrator52.setStepHandler(stepHandler53);
        double double55 = highamHall54Integrator52.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler56 = null;
        highamHall54Integrator52.setStepHandler(stepHandler56);
        double double58 = highamHall54Integrator52.getMaxStep();
        double double59 = highamHall54Integrator52.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler65 = highamHall54Integrator64.getStepHandler();
        highamHall54Integrator52.setStepHandler(stepHandler65);
        highamHall54Integrator33.setStepHandler(stepHandler65);
        highamHall54Integrator25.setStepHandler(stepHandler65);
        double double69 = highamHall54Integrator25.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler75 = highamHall54Integrator74.getStepHandler();
        boolean boolean76 = stepHandler75.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        stepHandler75.handleStep(stepInterpolator77, false);
        highamHall54Integrator25.setStepHandler(stepHandler75);
        highamHall54Integrator20.setStepHandler(stepHandler75);
        highamHall54Integrator4.setStepHandler(stepHandler75);
        double double83 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.9d + "'", double83 == 0.9d);
    }

    @Test
    public void test06660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06660");
        java.io.IOException iOException1 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06661");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray16);
        java.io.IOException iOException22 = new java.io.IOException("");
        java.io.IOException iOException23 = new java.io.IOException("hi!", (java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16, (java.lang.Throwable) iOException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str28 = mathException27.getPattern();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException27);
        java.lang.Throwable[] throwableArray30 = mathException29.getSuppressed();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException29);
        java.lang.Throwable throwable32 = null;
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray16, throwable32);
        java.lang.Throwable throwable38 = null;
        java.io.IOException iOException39 = new java.io.IOException("", throwable38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException39);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) mathException40);
        java.io.IOException iOException42 = new java.io.IOException("", (java.lang.Throwable) iOException41);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16, (java.lang.Throwable) iOException43);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test06662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06662");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException19);
        java.lang.Throwable[] throwableArray22 = mathException21.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException21);
        java.lang.Object[] objArray24 = mathException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", objArray24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException25);
        java.lang.Throwable[] throwableArray27 = integratorException25.getSuppressed();
        java.lang.Throwable[] throwableArray28 = integratorException25.getSuppressed();
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) integratorException25);
        java.lang.String str30 = integratorException25.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)" + "'", str30, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)");
    }

    @Test
    public void test06663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06663");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray14);
        java.lang.Throwable throwable22 = null;
        java.io.IOException iOException23 = new java.io.IOException("", throwable22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) mathException26);
        java.io.IOException iOException28 = new java.io.IOException("hi!", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Object[]) strArray14, (java.lang.Throwable) integratorException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", strArray14);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: Higham-Hall 5(4)", strArray14);
        java.lang.Object[] objArray34 = derivativeException33.getArguments();
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException35);
        java.lang.Object[] objArray37 = integratorException36.getArguments();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("", strArray50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray53 = derivativeException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", objArray53);
        java.io.IOException iOException58 = new java.io.IOException("");
        java.io.IOException iOException59 = new java.io.IOException("hi!", (java.lang.Throwable) iOException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", objArray53, (java.lang.Throwable) iOException59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException59);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) derivativeException61);
        integratorException36.addSuppressed((java.lang.Throwable) mathException63);
        java.lang.Throwable[] throwableArray65 = integratorException36.getSuppressed();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test06664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06664");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        double double28 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str29 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 0L);
        java.lang.String str32 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) (-1L));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
    }

    @Test
    public void test06665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06665");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth(31.144823004794873d);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations11 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler13.evaluateStep(stepInterpolator14);
        boolean boolean16 = switchingFunctionsHandler13.stop();
        double[] doubleArray23 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler24.evaluateStep(stepInterpolator25);
        double double27 = switchingFunctionsHandler24.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler24.add(switchingFunction28, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler38.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler38.evaluateStep(stepInterpolator41);
        double[] doubleArray48 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler38.stepAccepted((double) (byte) 1, doubleArray48);
        boolean boolean50 = switchingFunctionsHandler34.reset((double) (byte) 1, doubleArray48);
        boolean boolean51 = switchingFunctionsHandler24.reset((double) '4', doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray23, doubleArray48);
        switchingFunctionsHandler13.stepAccepted(1.0d, doubleArray23);
        double[] doubleArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations11, (double) 'a', doubleArray23, (double) 10.0f, doubleArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test06666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06666");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety((double) (byte) 1);
        double double8 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
    }

    @Test
    public void test06667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06667");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str4 = mathException3.getPattern();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException3);
        java.lang.Throwable[] throwableArray6 = mathException3.getSuppressed();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray6);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray22);
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("", throwable28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray22, (java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray22);
        java.lang.Throwable throwable35 = null;
        java.io.IOException iOException36 = new java.io.IOException(throwable35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray22, (java.lang.Throwable) iOException36);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) mathException39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException39);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06668");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray16);
        java.lang.Throwable throwable24 = null;
        java.io.IOException iOException25 = new java.io.IOException("", throwable24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException26);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) mathException28);
        java.io.IOException iOException30 = new java.io.IOException("hi!", (java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Object[]) strArray16, (java.lang.Throwable) integratorException31);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("", objArray37, (java.lang.Throwable) derivativeException43);
        java.lang.Object[] objArray45 = mathException44.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray45);
        java.io.IOException iOException47 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) integratorException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16, (java.lang.Throwable) integratorException46);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: Higham-Hall 5(4)", strArray16);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("", strArray63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray63);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: java.io.IOException", strArray63);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray63);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16, (java.lang.Throwable) integratorException68);
        java.lang.Object[] objArray70 = mathException69.getArguments();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[10]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06669");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) 10L);
        double double28 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
    }

    @Test
    public void test06670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06670");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setMaxGrowth((double) 0L);
        highamHall54Integrator4.setMaxGrowth((double) '#');
        double double14 = highamHall54Integrator4.getMinReduction();
        java.lang.String str15 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '#', 31.622776601683793d, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction21, 0.0d, 9.848857801796104d, 2);
        double double26 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2d + "'", double26 == 0.2d);
    }

    @Test
    public void test06671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06671");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        double double16 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test06672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06672");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("", throwable4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException6);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) derivativeException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException8);
        java.lang.String str11 = derivativeException8.getPattern();
        java.io.IOException iOException12 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) derivativeException8);
        java.lang.Class<?> wildcardClass13 = derivativeException8.getClass();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06673");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, (double) 0.0f, (double) 2);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test06674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06674");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler3.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler3.evaluateStep(stepInterpolator6);
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        boolean boolean20 = switchingFunctionsHandler3.reset(100.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler22.evaluateStep(stepInterpolator25);
        double[] doubleArray30 = null;
        double[] doubleArray37 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray30, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler22.reset(100.0d, doubleArray30);
        double[] doubleArray46 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler47.evaluateStep(stepInterpolator48);
        double double50 = switchingFunctionsHandler47.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler47.add(switchingFunction51, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler57.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler61.evaluateStep(stepInterpolator64);
        double[] doubleArray71 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler61.stepAccepted((double) (byte) 1, doubleArray71);
        boolean boolean73 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler47.reset((double) '4', doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray46, doubleArray71);
        boolean boolean76 = switchingFunctionsHandler22.reset(0.0d, doubleArray46);
        switchingFunctionsHandler3.stepAccepted((double) 100L, doubleArray46);
        boolean boolean78 = switchingFunctionsHandler0.reset((double) ' ', doubleArray46);
        double double79 = switchingFunctionsHandler0.getEventTime();
        boolean boolean80 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        boolean boolean82 = switchingFunctionsHandler0.evaluateStep(stepInterpolator81);
        boolean boolean83 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test06675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06675");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        double double20 = highamHall54Integrator4.getCurrentStepStart();
        int int21 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        double double24 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
    }

    @Test
    public void test06676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06676");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray13 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", objArray13);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        java.lang.String str17 = mathException15.getPattern();
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) mathException15);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "java.io.IOException: org.apache.commons.math.MathException: " + "'", str17, "java.io.IOException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test06677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06677");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator15.getStepHandler();
        boolean boolean17 = stepHandler16.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        stepHandler16.handleStep(stepInterpolator18, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler16.handleStep(stepInterpolator21, false);
        stepHandler16.reset();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator4.getStepHandler();
        boolean boolean27 = stepHandler26.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        stepHandler26.handleStep(stepInterpolator28, true);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06678");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) (byte) 100, 10.0d, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (double) (byte) 1, 100.0d, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, 5.0d, 9.924141172814958d, (int) 'a');
        double double24 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test06679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06679");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException11);
        java.io.IOException iOException15 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Throwable) iOException23);
        iOException15.addSuppressed((java.lang.Throwable) iOException23);
        mathException13.addSuppressed((java.lang.Throwable) iOException23);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test06680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06680");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: java.io.IOException", strArray13);
        java.lang.String[] strArray25 = new java.lang.String[] { "org.apache.commons.math.MathException: ", "org.apache.commons.math.MathException: ", "Higham-Hall 5(4)", "org.apache.commons.math.ode.DerivativeException" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray25);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) derivativeException27);
        java.io.IOException iOException29 = new java.io.IOException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Throwable) mathException28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException28);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test06681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06681");
        double[] doubleArray5 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        double double9 = switchingFunctionsHandler6.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler6.add(switchingFunction10, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler20.evaluateStep(stepInterpolator23);
        double[] doubleArray30 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler20.stepAccepted((double) (byte) 1, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray30);
        boolean boolean33 = switchingFunctionsHandler6.reset((double) '4', doubleArray30);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray5, doubleArray30);
        highamHall54Integrator34.setInitialStepSize((double) 0);
        highamHall54Integrator34.setMaxGrowth((double) (short) -1);
        int int39 = highamHall54Integrator34.getOrder();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
    }

    @Test
    public void test06682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06682");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(7.211102550927978d, (double) (byte) 10, 30.408967315912587d, 3.1622776601683795d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
    }

    @Test
    public void test06683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06683");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getMaxStep();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str15 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
    }

    @Test
    public void test06684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06684");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) '4', (double) 10.0f, 1.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator9.getStepHandler();
        highamHall54Integrator9.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator9.getStepHandler();
        boolean boolean14 = stepHandler13.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler13);
        double double16 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test06685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06685");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (-1.0f), (double) (byte) 0, (int) (short) -1);
        double double14 = highamHall54Integrator4.getMaxStep();
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        int int17 = highamHall54Integrator4.getOrder();
        double double18 = highamHall54Integrator4.getSafety();
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        double double21 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator26.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator26.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator26.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator26.getMinReduction();
        int int33 = highamHall54Integrator26.getOrder();
        highamHall54Integrator26.setInitialStepSize((double) '4');
        highamHall54Integrator26.setInitialStepSize((double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        highamHall54Integrator26.addSwitchingFunction(switchingFunction38, (double) 0.0f, (double) (byte) 10, (int) '#');
        double double43 = highamHall54Integrator26.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = null;
        highamHall54Integrator48.setStepHandler(stepHandler49);
        double double51 = highamHall54Integrator48.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = null;
        highamHall54Integrator48.setStepHandler(stepHandler52);
        double double54 = highamHall54Integrator48.getMaxStep();
        double double55 = highamHall54Integrator48.getMinStep();
        double double56 = highamHall54Integrator48.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler62 = null;
        highamHall54Integrator61.setStepHandler(stepHandler62);
        double double64 = highamHall54Integrator61.getCurrentSignedStepsize();
        double double65 = highamHall54Integrator61.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler71 = highamHall54Integrator70.getStepHandler();
        highamHall54Integrator61.setStepHandler(stepHandler71);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        stepHandler71.handleStep(stepInterpolator73, true);
        highamHall54Integrator48.setStepHandler(stepHandler71);
        highamHall54Integrator26.setStepHandler(stepHandler71);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        stepHandler71.handleStep(stepInterpolator78, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        stepHandler71.handleStep(stepInterpolator81, true);
        highamHall54Integrator4.setStepHandler(stepHandler71);
        stepHandler71.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler71);
    }

    @Test
    public void test06686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06686");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler14);
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        java.lang.String str19 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test06687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06687");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, 0.0d, (double) (-1L));
        double double5 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, 52.0d, (double) 10, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test06688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06688");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety(0.0d);
        highamHall54Integrator4.setSafety((double) 1.0f);
        double double14 = highamHall54Integrator4.getMinStep();
        double double15 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) 10L, (double) 'a', (int) (byte) 1);
        java.lang.String str21 = highamHall54Integrator4.getName();
        double double22 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test06689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06689");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException21);
        java.lang.Object[] objArray24 = mathException21.getArguments();
        java.io.IOException iOException28 = new java.io.IOException("");
        java.io.IOException iOException29 = new java.io.IOException("hi!", (java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException30);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", objArray24, (java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException34);
        java.lang.Object[] objArray36 = mathException34.getArguments();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("java.io.IOException", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException37);
        java.io.IOException iOException41 = new java.io.IOException("");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException41);
        java.lang.Throwable[] throwableArray43 = mathException42.getSuppressed();
        mathException37.addSuppressed((java.lang.Throwable) mathException42);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException37);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test06690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06690");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        java.lang.String str39 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 10.0f);
        int int42 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator47.setMinReduction((double) 10L);
        double double51 = highamHall54Integrator47.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator47.getStepHandler();
        stepHandler52.reset();
        highamHall54Integrator4.setStepHandler(stepHandler52);
        stepHandler52.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler52.handleStep(stepInterpolator56, false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler52);
    }

    @Test
    public void test06691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06691");
        java.io.IOException iOException3 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException3);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Throwable) iOException3);
    }

    @Test
    public void test06692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06692");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray16);
        java.lang.Throwable throwable24 = null;
        java.io.IOException iOException25 = new java.io.IOException("", throwable24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException26);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) mathException28);
        java.io.IOException iOException30 = new java.io.IOException("hi!", (java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Object[]) strArray16, (java.lang.Throwable) integratorException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", strArray16);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        java.lang.Throwable[] throwableArray38 = derivativeException37.getSuppressed();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(throwableArray38);
    }

    @Test
    public void test06693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06693");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((-0.0d));
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test06694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06694");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler13.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler13.evaluateStep(stepInterpolator16);
        double[] doubleArray23 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler13.stepAccepted((double) (byte) 1, doubleArray23);
        boolean boolean25 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 1L, doubleArray23);
        boolean boolean27 = switchingFunctionsHandler0.stop();
        boolean boolean28 = switchingFunctionsHandler0.stop();
        double double29 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = switchingFunctionsHandler0.evaluateStep(stepInterpolator30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test06695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06695");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler14);
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int17 = highamHall54Integrator4.getOrder();
        double double18 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator23.setMinReduction(10.0d);
        double double27 = highamHall54Integrator23.getCurrentSignedStepsize();
        double double28 = highamHall54Integrator23.getCurrentStepStart();
        double double29 = highamHall54Integrator23.getCurrentSignedStepsize();
        double double30 = highamHall54Integrator23.getSafety();
        highamHall54Integrator23.setMinReduction((double) (byte) 0);
        highamHall54Integrator23.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler35);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction37, (double) (-1), 97.0d, (int) 'a');
        highamHall54Integrator4.setMinReduction(9.486832980505138d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler35);
    }

    @Test
    public void test06696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06696");
        java.lang.Throwable throwable9 = null;
        java.io.IOException iOException10 = new java.io.IOException("", throwable9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException11);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException13);
        java.lang.Object[] objArray15 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", objArray15);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
    }

    @Test
    public void test06697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06697");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 5);
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getMaxStep();
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) (short) -1, Double.NaN, (int) (short) 1);
        highamHall54Integrator4.setMaxGrowth((double) (byte) 1);
        highamHall54Integrator4.setSafety(0.2d);
        int int24 = highamHall54Integrator4.getOrder();
        double double25 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double26 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test06698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06698");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, Double.NaN, (double) '#', (-1.0d));
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test06699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06699");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException14);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test06700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06700");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (-1));
        int int13 = highamHall54Integrator4.getOrder();
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        double double16 = highamHall54Integrator4.getSafety();
        double double17 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test06701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06701");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler4.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler4.evaluateStep(stepInterpolator7);
        double[] doubleArray14 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler4.stepAccepted((double) (byte) 1, doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray14);
        double double17 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, 10.0d, (double) ' ', (int) '4');
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) 2, 97.0d, 10);
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray43 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray46 = null;
        double[] doubleArray53 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray46, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray43, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler56.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler60.evaluateStep(stepInterpolator61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler60.evaluateStep(stepInterpolator63);
        double[] doubleArray70 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler60.stepAccepted((double) (byte) 1, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray70);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray43, doubleArray70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = switchingFunctionsHandler74.evaluateStep(stepInterpolator75);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler78.evaluateStep(stepInterpolator79);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        boolean boolean82 = switchingFunctionsHandler78.evaluateStep(stepInterpolator81);
        double[] doubleArray88 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler78.stepAccepted((double) (byte) 1, doubleArray88);
        boolean boolean90 = switchingFunctionsHandler74.reset((double) (byte) 1, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray70, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(55.3841974787333d, doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test06702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06702");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        java.lang.String str17 = derivativeException16.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: " + "'", str17, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test06703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06703");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator15.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator15.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator15.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator15.getMaxStep();
        double double22 = highamHall54Integrator15.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator15.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator34.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator34.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler38 = null;
        highamHall54Integrator34.setStepHandler(stepHandler38);
        double double40 = highamHall54Integrator34.getMaxStep();
        double double41 = highamHall54Integrator34.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator34.setStepHandler(stepHandler47);
        highamHall54Integrator15.setStepHandler(stepHandler47);
        stepHandler47.reset();
        stepHandler47.reset();
        stepHandler47.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        stepHandler47.handleStep(stepInterpolator53, true);
        highamHall54Integrator4.setStepHandler(stepHandler47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        stepHandler47.handleStep(stepInterpolator57, true);
        boolean boolean60 = stepHandler47.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1.0d) + "'", double40 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test06704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06704");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 1.0d, Double.NaN, 1);
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, 1.0d, (double) '4', 5);
        boolean boolean15 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, 3.1622776601683795d, (double) 10.0f, (int) (short) 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = switchingFunctionsHandler0.evaluateStep(stepInterpolator21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06705");
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", objArray11);
        java.io.IOException iOException16 = new java.io.IOException("");
        java.io.IOException iOException17 = new java.io.IOException("hi!", (java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("java.io.IOException", objArray11, (java.lang.Throwable) iOException18);
        java.lang.Object[] objArray22 = mathException21.getArguments();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: ", objArray22);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test06706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06706");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) mathException9);
        java.lang.Throwable[] throwableArray12 = mathException9.getSuppressed();
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) mathException19);
        java.io.IOException iOException21 = new java.io.IOException("", (java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException22);
        java.lang.Throwable throwable31 = null;
        java.io.IOException iOException32 = new java.io.IOException("", throwable31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException33);
        java.lang.Object[] objArray35 = mathException34.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("", objArray35);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray45);
        java.lang.String str48 = mathException47.getPattern();
        java.lang.Throwable throwable55 = null;
        java.io.IOException iOException56 = new java.io.IOException("", throwable55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException57);
        java.lang.Object[] objArray59 = mathException58.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray59);
        java.io.IOException iOException62 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException61);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException61);
        mathException47.addSuppressed((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("", objArray35, (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", objArray35);
        iOException22.addSuppressed((java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("java.io.IOException: Higham-Hall 5(4)", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) mathException66);
        java.lang.Object[] objArray69 = mathException68.getArguments();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException68);
        java.lang.Class<?> wildcardClass71 = mathException68.getClass();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str48, "org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test06707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06707");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double39 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str40 = highamHall54Integrator4.getName();
        java.lang.String str41 = highamHall54Integrator4.getName();
        double double42 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double43 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str44 = highamHall54Integrator4.getName();
        double double45 = highamHall54Integrator4.getMinReduction();
        double double46 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.2d + "'", double45 == 0.2d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
    }

    @Test
    public void test06708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06708");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        java.lang.String str26 = highamHall54Integrator4.getName();
        double double27 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (double) (byte) 100, (double) '#', (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction33, (-1.0d), (double) 0L, 1);
        double double38 = highamHall54Integrator4.getMinStep();
        java.lang.String str39 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
    }

    @Test
    public void test06709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06709");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("java.io.IOException: hi!", (java.lang.Object[]) strArray10);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray35);
        java.io.IOException iOException41 = new java.io.IOException("");
        java.io.IOException iOException42 = new java.io.IOException("hi!", (java.lang.Throwable) iOException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray35, (java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) iOException42);
        java.io.IOException iOException45 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) iOException42);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: java.io.IOException", (java.lang.Object[]) strArray10, (java.lang.Throwable) iOException42);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException42);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray35);
    }

    @Test
    public void test06710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06710");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        double double14 = highamHall54Integrator4.getSafety();
        int int15 = highamHall54Integrator4.getOrder();
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test06711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06711");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double14 = highamHall54Integrator13.getCurrentStepStart();
        double double15 = highamHall54Integrator13.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator20.getStepHandler();
        double double22 = highamHall54Integrator20.getMinStep();
        double double23 = highamHall54Integrator20.getCurrentSignedStepsize();
        highamHall54Integrator20.setInitialStepSize(10.0d);
        double double26 = highamHall54Integrator20.getMinStep();
        double double27 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator32.getStepHandler();
        double double34 = highamHall54Integrator32.getMinStep();
        double double35 = highamHall54Integrator32.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator32.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler36.handleStep(stepInterpolator37, false);
        highamHall54Integrator20.setStepHandler(stepHandler36);
        highamHall54Integrator13.setStepHandler(stepHandler36);
        stepHandler36.reset();
        highamHall54Integrator4.setStepHandler(stepHandler36);
        stepHandler36.reset();
        boolean boolean45 = stepHandler36.requiresDenseOutput();
        stepHandler36.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test06712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06712");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 1, (double) 1L, 3);
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler10.evaluateStep(stepInterpolator11);
        double double13 = switchingFunctionsHandler10.getEventTime();
        boolean boolean14 = switchingFunctionsHandler10.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler20.evaluateStep(stepInterpolator23);
        double[] doubleArray30 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler20.stepAccepted((double) (byte) 1, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray30);
        double double33 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray37 = null;
        double[] doubleArray44 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray37, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler16.reset((double) 10.0f, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler10.reset((double) (byte) 10, doubleArray44);
        double double48 = switchingFunctionsHandler10.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        double double53 = switchingFunctionsHandler50.getEventTime();
        boolean boolean54 = switchingFunctionsHandler50.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler56.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler60.evaluateStep(stepInterpolator61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler60.evaluateStep(stepInterpolator63);
        double[] doubleArray70 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler60.stepAccepted((double) (byte) 1, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray70);
        double double73 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray77 = null;
        double[] doubleArray84 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray77, doubleArray84);
        boolean boolean86 = switchingFunctionsHandler56.reset((double) 10.0f, doubleArray84);
        boolean boolean87 = switchingFunctionsHandler50.reset((double) (byte) 10, doubleArray84);
        switchingFunctionsHandler10.stepAccepted(0.0d, doubleArray84);
        boolean boolean89 = switchingFunctionsHandler0.reset(0.0d, doubleArray84);
        double double90 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray92 = null;
        boolean boolean93 = switchingFunctionsHandler0.reset(7.211102550927978d, doubleArray92);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = switchingFunctionsHandler0.evaluateStep(stepInterpolator94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test06713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06713");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 5, (double) '4', (-1));
        boolean boolean9 = switchingFunctionsHandler0.stop();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        boolean boolean11 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = switchingFunctionsHandler0.evaluateStep(stepInterpolator12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06714");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (-1.0d), (double) (byte) 100, (int) (byte) 10);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        boolean boolean39 = stepHandler38.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        stepHandler38.handleStep(stepInterpolator40, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        stepHandler38.handleStep(stepInterpolator43, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        stepHandler38.handleStep(stepInterpolator46, true);
        boolean boolean49 = stepHandler38.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler38);
        highamHall54Integrator4.setMaxGrowth(32.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction53, 31.144823004794873d, (double) 1.0f, 1);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test06715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06715");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        int int20 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test06716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06716");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 100, (double) (-1), 0);
        double double13 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator18.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator18.getStepHandler();
        boolean boolean23 = stepHandler22.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        stepHandler22.handleStep(stepInterpolator24, true);
        highamHall54Integrator4.setStepHandler(stepHandler22);
        highamHall54Integrator4.setInitialStepSize((double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler32.evaluateStep(stepInterpolator33);
        double double35 = switchingFunctionsHandler32.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler32.add(switchingFunction36, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler46.evaluateStep(stepInterpolator49);
        double[] doubleArray56 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler46.stepAccepted((double) (byte) 1, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler32.reset((double) '4', doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler60.evaluateStep(stepInterpolator61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler64.evaluateStep(stepInterpolator65);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler64.evaluateStep(stepInterpolator67);
        double[] doubleArray74 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler64.stepAccepted((double) (byte) 1, doubleArray74);
        boolean boolean76 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray74);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray56, doubleArray74);
        double double78 = highamHall54Integrator77.getMinStep();
        highamHall54Integrator77.setSafety((double) (byte) 10);
        java.lang.String str81 = highamHall54Integrator77.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler87 = highamHall54Integrator86.getStepHandler();
        highamHall54Integrator77.setStepHandler(stepHandler87);
        double double89 = highamHall54Integrator77.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler90 = highamHall54Integrator77.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator91 = null;
        stepHandler90.handleStep(stepInterpolator91, true);
        highamHall54Integrator4.setStepHandler(stepHandler90);
        highamHall54Integrator4.setMinReduction(55.3841974787333d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Higham-Hall 5(4)" + "'", str81, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler87);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler90);
    }

    @Test
    public void test06717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06717");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double double13 = highamHall54Integrator11.getMinStep();
        double double14 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setInitialStepSize(10.0d);
        double double17 = highamHall54Integrator11.getMinStep();
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        double double25 = highamHall54Integrator23.getMinStep();
        double double26 = highamHall54Integrator23.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator23.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        stepHandler27.handleStep(stepInterpolator28, false);
        highamHall54Integrator11.setStepHandler(stepHandler27);
        highamHall54Integrator4.setStepHandler(stepHandler27);
        int int33 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertNotNull(stepHandler34);
    }

    @Test
    public void test06718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06718");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException3);
        java.io.IOException iOException5 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) derivativeException4);
    }

    @Test
    public void test06719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06719");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 1.4142135623730951d, (double) 100L, 31.622776601683793d);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.4142135623730951d + "'", double5 == 1.4142135623730951d);
    }

    @Test
    public void test06720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06720");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        java.lang.Throwable[] throwableArray5 = mathException4.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException4);
        java.lang.Object[] objArray10 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable13 = null;
        java.io.IOException iOException14 = new java.io.IOException("", throwable13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray10, (java.lang.Throwable) derivativeException16);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", objArray18);
        derivativeException6.addSuppressed((java.lang.Throwable) mathException19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException6);
        java.lang.Throwable[] throwableArray22 = derivativeException6.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException6);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) derivativeException6);
        java.io.IOException iOException25 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) derivativeException6);
        java.io.IOException iOException26 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException25);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[10]");
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test06721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06721");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException5);
        java.lang.Throwable[] throwableArray7 = mathException5.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test06722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06722");
        java.lang.String[] strArray5 = new java.lang.String[] { "Higham-Hall 5(4)", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.Throwable throwable16 = null;
        java.io.IOException iOException17 = new java.io.IOException("", throwable16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: hi!", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray20);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("");
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException26);
        java.io.IOException iOException28 = new java.io.IOException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray20, (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray30 = mathException26.getArguments();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray33 = mathException32.getArguments();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException32);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("java.io.IOException: ", objArray30, (java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray5, (java.lang.Throwable) mathException34);
        java.lang.String str37 = mathException34.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: " + "'", str37, "java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test06723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06723");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        java.lang.String str7 = highamHall54Integrator4.getName();
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (short) 0, (double) ' ', (-1));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        double double20 = highamHall54Integrator18.getMinStep();
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        highamHall54Integrator18.setInitialStepSize(10.0d);
        double double24 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler25);
        java.lang.String str27 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, 0.9d, 1.4142135623730951d, (int) (short) -1);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
    }

    @Test
    public void test06724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06724");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        double double28 = highamHall54Integrator4.getMinStep();
        double double29 = highamHall54Integrator4.getSafety();
        int int30 = highamHall54Integrator4.getOrder();
        java.lang.String str31 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction32, (double) 0, 1.0d, (int) (byte) 0);
        highamHall54Integrator4.setSafety(10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
    }

    @Test
    public void test06725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06725");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable11 = null;
        java.io.IOException iOException12 = new java.io.IOException("", throwable11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", objArray8, (java.lang.Throwable) derivativeException14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray16);
        java.io.IOException iOException18 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) integratorException17);
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("", objArray27);
        integratorException17.addSuppressed((java.lang.Throwable) integratorException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException17);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException17);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException17);
        java.lang.Object[] objArray33 = integratorException17.getArguments();
        java.io.IOException iOException34 = new java.io.IOException("", (java.lang.Throwable) integratorException17);
        java.io.IOException iOException35 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException34);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Throwable) derivativeException36);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[10]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10]");
    }

    @Test
    public void test06726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06726");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) (byte) 10, (double) (byte) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 0, 0.0d, (int) (short) 100);
        highamHall54Integrator4.setMinReduction((double) (short) 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test06727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06727");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) (short) 10);
        double double15 = highamHall54Integrator4.getMaxGrowth();
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int17 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
    }

    @Test
    public void test06728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06728");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler14 = null;
        highamHall54Integrator4.setStepHandler(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test06729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06729");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 5, (double) 1, (double) (short) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        stepHandler6.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
    }

    @Test
    public void test06730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06730");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
    }

    @Test
    public void test06731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06731");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator43.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler47 = null;
        highamHall54Integrator43.setStepHandler(stepHandler47);
        double double49 = highamHall54Integrator43.getMaxStep();
        double double50 = highamHall54Integrator43.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler56);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        highamHall54Integrator43.addSwitchingFunction(switchingFunction58, (double) '4', 1.0d, (int) (short) -1);
        double double63 = highamHall54Integrator43.getMaxStep();
        double double64 = highamHall54Integrator43.getSafety();
        double double65 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator43.getStepHandler();
        boolean boolean67 = stepHandler66.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler66);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction69, (double) (short) 0, 0.0d, 100);
        double double74 = highamHall54Integrator4.getCurrentStepStart();
        double double75 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.9d + "'", double64 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9d + "'", double75 == 0.9d);
    }

    @Test
    public void test06732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06732");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setInitialStepSize((double) 3);
        double double17 = highamHall54Integrator13.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator22.getStepHandler();
        highamHall54Integrator22.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = null;
        highamHall54Integrator30.setStepHandler(stepHandler31);
        double double33 = highamHall54Integrator30.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler34 = null;
        highamHall54Integrator30.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator30.getMaxStep();
        double double37 = highamHall54Integrator30.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator30.setStepHandler(stepHandler43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler50 = null;
        highamHall54Integrator49.setStepHandler(stepHandler50);
        double double52 = highamHall54Integrator49.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler53 = null;
        highamHall54Integrator49.setStepHandler(stepHandler53);
        double double55 = highamHall54Integrator49.getMaxStep();
        double double56 = highamHall54Integrator49.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler62 = highamHall54Integrator61.getStepHandler();
        highamHall54Integrator49.setStepHandler(stepHandler62);
        highamHall54Integrator30.setStepHandler(stepHandler62);
        highamHall54Integrator22.setStepHandler(stepHandler62);
        highamHall54Integrator13.setStepHandler(stepHandler62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        stepHandler62.handleStep(stepInterpolator67, true);
        highamHall54Integrator4.setStepHandler(stepHandler62);
        double double71 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
    }

    @Test
    public void test06733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06733");
        java.io.IOException iOException2 = new java.io.IOException("org.apache.commons.math.MathException: ");
        org.apache.commons.math.ode.IntegratorException integratorException3 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", (java.lang.Throwable) integratorException3);
    }

    @Test
    public void test06734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06734");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) (-1.0f), (double) (short) 0, 0);
        highamHall54Integrator4.setInitialStepSize(0.0d);
        highamHall54Integrator4.setMinReduction((double) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator(0.4472135954999579d, (double) (byte) 10, (-0.0d), (double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double23 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
    }

    @Test
    public void test06735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06735");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler11.evaluateStep(stepInterpolator14);
        double[] doubleArray19 = null;
        double[] doubleArray26 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray19, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler11.reset(100.0d, doubleArray19);
        double[] doubleArray35 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler36.evaluateStep(stepInterpolator37);
        double double39 = switchingFunctionsHandler36.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler36.add(switchingFunction40, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler50.evaluateStep(stepInterpolator53);
        double[] doubleArray60 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler50.stepAccepted((double) (byte) 1, doubleArray60);
        boolean boolean62 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray60);
        boolean boolean63 = switchingFunctionsHandler36.reset((double) '4', doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray35, doubleArray60);
        boolean boolean65 = switchingFunctionsHandler11.reset(0.0d, doubleArray35);
        double[] doubleArray66 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) 10, doubleArray35, doubleArray66);
        boolean boolean68 = switchingFunctionsHandler0.reset((double) 5, doubleArray66);
        boolean boolean69 = switchingFunctionsHandler0.stop();
        double double70 = switchingFunctionsHandler0.getEventTime();
        boolean boolean71 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test06736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06736");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) 5, 5.477225575051661d, (double) '4');
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
    }

    @Test
    public void test06737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06737");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        double double18 = highamHall54Integrator16.getMinStep();
        double double19 = highamHall54Integrator16.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler20.handleStep(stepInterpolator21, false);
        highamHall54Integrator4.setStepHandler(stepHandler20);
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setSafety((double) (short) 0);
        int int30 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(stepHandler31);
    }

    @Test
    public void test06738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06738");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        stepHandler11.reset();
        boolean boolean13 = stepHandler11.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06739");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(3.0d, (double) 1.0f, 35.0d, (double) 0.0f);
    }

    @Test
    public void test06740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06740");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test06741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06741");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        java.io.IOException iOException14 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException9);
        java.lang.Throwable throwable18 = null;
        java.io.IOException iOException19 = new java.io.IOException("", throwable18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException20);
        java.lang.Throwable[] throwableArray22 = mathException21.getSuppressed();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("");
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException24);
        mathException21.addSuppressed((java.lang.Throwable) derivativeException25);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        java.lang.String str30 = derivativeException29.getPattern();
        mathException9.addSuppressed((java.lang.Throwable) derivativeException29);
        java.lang.Class<?> wildcardClass32 = derivativeException29.getClass();
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str30, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test06742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06742");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 0.2d, (double) 1, (int) (byte) -1);
        double[] doubleArray26 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        double double30 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler27.add(switchingFunction31, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler37.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler41.evaluateStep(stepInterpolator44);
        double[] doubleArray51 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler41.stepAccepted((double) (byte) 1, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler27.reset((double) '4', doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray26, doubleArray51);
        boolean boolean56 = switchingFunctionsHandler0.reset((double) 1L, doubleArray51);
        boolean boolean57 = switchingFunctionsHandler0.isEmpty();
        boolean boolean58 = switchingFunctionsHandler0.isEmpty();
        double double59 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = switchingFunctionsHandler0.evaluateStep(stepInterpolator60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test06743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06743");
        java.io.IOException iOException4 = new java.io.IOException("");
        java.io.IOException iOException5 = new java.io.IOException("hi!", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) mathException8);
        java.lang.Object[] objArray10 = mathException8.getArguments();
        java.io.IOException iOException11 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) mathException8);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException8);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
    }

    @Test
    public void test06744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06744");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        int int25 = highamHall54Integrator4.getOrder();
        java.lang.String str26 = highamHall54Integrator4.getName();
        double double27 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction((double) (short) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
    }

    @Test
    public void test06745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06745");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: hi!", strArray17);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException27);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test06746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06746");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, 0.0d, 3.0d, (int) ' ');
        double double19 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double20 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
    }

    @Test
    public void test06747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06747");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        double double28 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setSafety((double) 1.0f);
        java.lang.String str31 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
    }

    @Test
    public void test06748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06748");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        highamHall54Integrator4.setMaxGrowth(0.0d);
        highamHall54Integrator4.setSafety((double) 1.0f);
        java.lang.Class<?> wildcardClass17 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06749");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety(10.0d);
        highamHall54Integrator4.setInitialStepSize(31.622776601683793d);
        double double18 = highamHall54Integrator4.getSafety();
        double double19 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
    }

    @Test
    public void test06750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06750");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator13.getStepHandler();
        boolean boolean18 = stepHandler17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        stepHandler17.handleStep(stepInterpolator19, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        java.lang.String str23 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator4.getStepHandler();
        int int25 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator4.getStepHandler();
        java.lang.String str27 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 10);
        double double30 = highamHall54Integrator4.getMaxStep();
        double double31 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
    }

    @Test
    public void test06751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06751");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        double double12 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
    }

    @Test
    public void test06752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06752");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        highamHall54Integrator20.setMaxGrowth((double) 1.0f);
        int int23 = highamHall54Integrator20.getOrder();
        double double24 = highamHall54Integrator20.getMinReduction();
        highamHall54Integrator20.setInitialStepSize((double) '#');
        double double27 = highamHall54Integrator20.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
    }

    @Test
    public void test06753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06753");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler4.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler4.evaluateStep(stepInterpolator7);
        double[] doubleArray14 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler4.stepAccepted((double) (byte) 1, doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) 1, (double) (short) 10, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) 3, (double) 10.0f, (int) '#');
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = switchingFunctionsHandler0.evaluateStep(stepInterpolator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06754");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getMinStep();
        double double10 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize(97.0d);
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
    }

    @Test
    public void test06755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06755");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray9);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Throwable) mathException14);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test06756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06756");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("");
        java.io.IOException iOException4 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) mathException3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException7);
    }

    @Test
    public void test06757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06757");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((double) (byte) 10);
        int int21 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction22, 0.2d, (double) 3, (int) (byte) -1);
        double double27 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        java.lang.String str29 = highamHall54Integrator4.getName();
        double double30 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 3.1622776601683795d + "'", double27 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
    }

    @Test
    public void test06758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06758");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        highamHall54Integrator4.setMinReduction(0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator4.getStepHandler();
        double double25 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNull(stepHandler23);
        org.junit.Assert.assertNull(stepHandler24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test06759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06759");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler13.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler13.evaluateStep(stepInterpolator16);
        double[] doubleArray23 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler13.stepAccepted((double) (byte) 1, doubleArray23);
        boolean boolean25 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 1L, doubleArray23);
        boolean boolean27 = switchingFunctionsHandler0.stop();
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) (byte) 10, (double) 5, (int) ' ');
        boolean boolean34 = switchingFunctionsHandler0.stop();
        double[] doubleArray48 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray51 = null;
        double[] doubleArray58 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray51, doubleArray58);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray48, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = switchingFunctionsHandler65.evaluateStep(stepInterpolator66);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = switchingFunctionsHandler65.evaluateStep(stepInterpolator68);
        double[] doubleArray75 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler65.stepAccepted((double) (byte) 1, doubleArray75);
        boolean boolean77 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray75);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray48, doubleArray75);
        double[] doubleArray79 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator(3.1622776601683795d, 0.2d, doubleArray75, doubleArray79);
        boolean boolean81 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray79);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = switchingFunctionsHandler0.evaluateStep(stepInterpolator82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test06760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06760");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, (double) (short) 0, 2.1213203435596424d, (double) (byte) 1);
    }

    @Test
    public void test06761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06761");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        highamHall54Integrator4.setMaxGrowth((double) (byte) -1);
        double double7 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 0, (double) 2, (int) (short) 100);
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int14 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize(10.198039027185569d);
        double double17 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test06762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06762");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException11);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) mathException13);
        java.io.IOException iOException15 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException14);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test06763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06763");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        double double18 = highamHall54Integrator16.getMinStep();
        double double19 = highamHall54Integrator16.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler20.handleStep(stepInterpolator21, false);
        highamHall54Integrator4.setStepHandler(stepHandler20);
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str27 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 1.0f, (double) (short) 10, (double) (byte) 10);
        double double33 = highamHall54Integrator32.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator32.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        stepHandler34.handleStep(stepInterpolator36, true);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
    }

    @Test
    public void test06764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06764");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = null;
        highamHall54Integrator13.setStepHandler(stepHandler14);
        double double16 = highamHall54Integrator13.getCurrentSignedStepsize();
        double double17 = highamHall54Integrator13.getCurrentStepStart();
        java.lang.String str18 = highamHall54Integrator13.getName();
        double double19 = highamHall54Integrator13.getMaxGrowth();
        double double20 = highamHall54Integrator13.getCurrentStepStart();
        double double21 = highamHall54Integrator13.getCurrentStepStart();
        int int22 = highamHall54Integrator13.getOrder();
        double double23 = highamHall54Integrator13.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler29 = null;
        highamHall54Integrator28.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator28.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator28.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator28.getMaxStep();
        double double35 = highamHall54Integrator28.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator28.setStepHandler(stepHandler41);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        highamHall54Integrator28.addSwitchingFunction(switchingFunction43, (double) '4', 1.0d, (int) (short) -1);
        double double48 = highamHall54Integrator28.getMaxStep();
        double double49 = highamHall54Integrator28.getSafety();
        double double50 = highamHall54Integrator28.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator28.getStepHandler();
        boolean boolean52 = stepHandler51.requiresDenseOutput();
        stepHandler51.reset();
        boolean boolean54 = stepHandler51.requiresDenseOutput();
        highamHall54Integrator13.setStepHandler(stepHandler51);
        highamHall54Integrator4.setStepHandler(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1.0d) + "'", double34 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.9d + "'", double49 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test06765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06765");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 31.144823004794873d, (double) (-1.0f), 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler11.evaluateStep(stepInterpolator14);
        double[] doubleArray21 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler11.stepAccepted((double) (byte) 1, doubleArray21);
        double[] doubleArray25 = null;
        double[] doubleArray32 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray25, doubleArray32);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) 10L, doubleArray21, doubleArray25);
        boolean boolean35 = switchingFunctionsHandler0.reset(100.0d, doubleArray21);
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        boolean boolean37 = switchingFunctionsHandler0.isEmpty();
        double double38 = switchingFunctionsHandler0.getEventTime();
        double double39 = switchingFunctionsHandler0.getEventTime();
        boolean boolean40 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test06766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06766");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction39, (double) (-1L), (double) 1L, (-1));
        highamHall54Integrator4.setInitialStepSize((double) (short) 10);
        double double46 = highamHall54Integrator4.getSafety();
        java.lang.String str47 = highamHall54Integrator4.getName();
        int int48 = highamHall54Integrator4.getOrder();
        double double49 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction50, 0.0d, (double) 0, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
    }

    @Test
    public void test06767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06767");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test06768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06768");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler0.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        boolean boolean20 = switchingFunctionsHandler0.stop();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler31.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler31.evaluateStep(stepInterpolator34);
        double[] doubleArray41 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler31.stepAccepted((double) (byte) 1, doubleArray41);
        boolean boolean43 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray49 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        double double53 = switchingFunctionsHandler50.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler50.add(switchingFunction54, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler60.evaluateStep(stepInterpolator61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler64.evaluateStep(stepInterpolator65);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler64.evaluateStep(stepInterpolator67);
        double[] doubleArray74 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler64.stepAccepted((double) (byte) 1, doubleArray74);
        boolean boolean76 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray74);
        boolean boolean77 = switchingFunctionsHandler50.reset((double) '4', doubleArray74);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray49, doubleArray74);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 1, doubleArray41, doubleArray49);
        boolean boolean80 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray41);
        double double81 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
    }

    @Test
    public void test06769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06769");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) 0.0f, 32.0d, 5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, 9.848857801796104d, 100.0d, (int) (byte) -1);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test06770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06770");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (short) 1, (double) 'a', (int) (short) 0);
        int int10 = highamHall54Integrator4.getOrder();
        int int11 = highamHall54Integrator4.getOrder();
        double double12 = highamHall54Integrator4.getMinReduction();
        double double13 = highamHall54Integrator4.getSafety();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int15 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.9d + "'", double13 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(stepHandler17);
    }

    @Test
    public void test06771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06771");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        java.lang.Throwable throwable18 = null;
        java.io.IOException iOException19 = new java.io.IOException("", throwable18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray12, (java.lang.Throwable) iOException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray12);
        java.lang.Throwable[] throwableArray24 = derivativeException23.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray24);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test06772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06772");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) 0, (double) 1L, (int) '4');
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator16.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator24.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler28);
        boolean boolean30 = stepHandler28.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler28);
        double double32 = highamHall54Integrator4.getMinReduction();
        double double33 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction34, 35.0d, 31.622776601683793d, 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
    }

    @Test
    public void test06773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06773");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler11 = null;
        highamHall54Integrator10.setStepHandler(stepHandler11);
        double double13 = highamHall54Integrator10.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler14 = null;
        highamHall54Integrator10.setStepHandler(stepHandler14);
        double double16 = highamHall54Integrator10.getMaxStep();
        double double17 = highamHall54Integrator10.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator22.getStepHandler();
        highamHall54Integrator10.setStepHandler(stepHandler23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator29.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator29.getMaxStep();
        double double36 = highamHall54Integrator29.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        highamHall54Integrator10.setStepHandler(stepHandler42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        stepHandler42.handleStep(stepInterpolator45, true);
        highamHall54Integrator4.setStepHandler(stepHandler42);
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator4.getStepHandler();
        double double51 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
    }

    @Test
    public void test06774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06774");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
    }

    @Test
    public void test06775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06775");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException4);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", objArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray9 = mathException7.getSuppressed();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) mathException7);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test06776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06776");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction((double) (-1.0f));
        highamHall54Integrator4.setMaxGrowth((double) 2);
        java.lang.String str18 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety(97.0d);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertNull(stepHandler21);
    }

    @Test
    public void test06777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06777");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, 31.622776601683793d, (double) 100L, 100);
        double double24 = highamHall54Integrator4.getMaxStep();
        java.lang.String str25 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = null;
        highamHall54Integrator30.setStepHandler(stepHandler31);
        double double33 = highamHall54Integrator30.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler34 = null;
        highamHall54Integrator30.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator30.getMaxStep();
        double double37 = highamHall54Integrator30.getMinStep();
        double double38 = highamHall54Integrator30.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator43.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator43.getCurrentSignedStepsize();
        double double47 = highamHall54Integrator43.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler53);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        stepHandler53.handleStep(stepInterpolator55, true);
        highamHall54Integrator30.setStepHandler(stepHandler53);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        stepHandler53.handleStep(stepInterpolator59, true);
        highamHall54Integrator4.setStepHandler(stepHandler53);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(stepHandler53);
    }

    @Test
    public void test06778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06778");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException21);
        java.lang.Object[] objArray24 = mathException21.getArguments();
        java.io.IOException iOException28 = new java.io.IOException("");
        java.io.IOException iOException29 = new java.io.IOException("hi!", (java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException30);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", objArray24, (java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException34);
        java.lang.Object[] objArray36 = mathException34.getArguments();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException48);
        java.io.IOException iOException50 = new java.io.IOException("hi!", (java.lang.Throwable) derivativeException48);
        java.io.IOException iOException51 = new java.io.IOException("", (java.lang.Throwable) derivativeException48);
        java.lang.Throwable throwable56 = null;
        java.io.IOException iOException57 = new java.io.IOException("", throwable56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException57);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException60);
        iOException51.addSuppressed((java.lang.Throwable) mathException60);
        java.lang.String str64 = mathException60.getPattern();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("", objArray36, (java.lang.Throwable) mathException60);
        java.io.IOException iOException66 = new java.io.IOException((java.lang.Throwable) mathException60);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str64, "org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06779");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (-1.0d), (double) (byte) 100, (int) (byte) 10);
        double double33 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator38.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator38.getCurrentSignedStepsize();
        double double42 = highamHall54Integrator38.getCurrentStepStart();
        double double43 = highamHall54Integrator38.getCurrentStepStart();
        double double44 = highamHall54Integrator38.getCurrentSignedStepsize();
        double double45 = highamHall54Integrator38.getSafety();
        double double46 = highamHall54Integrator38.getMaxStep();
        double double47 = highamHall54Integrator38.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator52.setMinReduction((double) 10L);
        double double56 = highamHall54Integrator52.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator52.getStepHandler();
        double double58 = highamHall54Integrator52.getCurrentSignedStepsize();
        double double59 = highamHall54Integrator52.getSafety();
        double double60 = highamHall54Integrator52.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler61.handleStep(stepInterpolator63, true);
        highamHall54Integrator4.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        stepHandler61.handleStep(stepInterpolator67, false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.9d + "'", double59 == 0.9d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test06780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06780");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getSafety();
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test06781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06781");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, (double) 0, 100.0d, 0);
        boolean boolean13 = switchingFunctionsHandler0.stop();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) (short) 10, 9.848857801796104d, 0);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = switchingFunctionsHandler0.evaluateStep(stepInterpolator21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test06782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06782");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) 100L, 56.568542494923804d, (-1.0d));
    }

    @Test
    public void test06783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06783");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, 0.0d, (double) 'a', (int) '#');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = null;
        highamHall54Integrator17.setStepHandler(stepHandler18);
        double double20 = highamHall54Integrator17.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler21 = null;
        highamHall54Integrator17.setStepHandler(stepHandler21);
        double double23 = highamHall54Integrator17.getMaxStep();
        double double24 = highamHall54Integrator17.getMinStep();
        double double25 = highamHall54Integrator17.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator30.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator30.getStepHandler();
        boolean boolean35 = stepHandler34.requiresDenseOutput();
        highamHall54Integrator17.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler34.handleStep(stepInterpolator37, true);
        highamHall54Integrator4.setStepHandler(stepHandler34);
        double double41 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator47.getStepHandler();
        double double49 = highamHall54Integrator47.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator47.getStepHandler();
        java.lang.String str51 = highamHall54Integrator47.getName();
        highamHall54Integrator47.setMaxGrowth((double) 0.0f);
        highamHall54Integrator47.setMinReduction((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler56);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler56);
    }

    @Test
    public void test06784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06784");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!");
        java.lang.Throwable[] throwableArray25 = mathException24.getSuppressed();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray25);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray25);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray15);
        java.lang.Object[] objArray32 = derivativeException31.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray32);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06785");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException12);
        java.lang.Object[] objArray14 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", objArray14);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException("hi!", (java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", objArray14, (java.lang.Throwable) iOException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException23);
        java.lang.Throwable[] throwableArray25 = mathException23.getSuppressed();
        java.lang.String str26 = mathException23.getPattern();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test06786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06786");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator15.getStepHandler();
        boolean boolean17 = stepHandler16.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        stepHandler16.handleStep(stepInterpolator18, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler16.handleStep(stepInterpolator21, false);
        stepHandler16.reset();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        stepHandler16.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06787");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getMaxStep();
        double double29 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        highamHall54Integrator36.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator36.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler40 = null;
        highamHall54Integrator36.setStepHandler(stepHandler40);
        double double42 = highamHall54Integrator36.getMaxStep();
        double double43 = highamHall54Integrator36.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler56 = null;
        highamHall54Integrator55.setStepHandler(stepHandler56);
        double double58 = highamHall54Integrator55.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler59 = null;
        highamHall54Integrator55.setStepHandler(stepHandler59);
        double double61 = highamHall54Integrator55.getMaxStep();
        double double62 = highamHall54Integrator55.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler68 = highamHall54Integrator67.getStepHandler();
        highamHall54Integrator55.setStepHandler(stepHandler68);
        highamHall54Integrator36.setStepHandler(stepHandler68);
        boolean boolean71 = stepHandler68.requiresDenseOutput();
        boolean boolean72 = stepHandler68.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler68);
        int int74 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((double) 100.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.0d) + "'", double42 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1.0d) + "'", double61 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
    }

    @Test
    public void test06788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06788");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray13);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException("hi!", (java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13, (java.lang.Throwable) iOException20);
        java.lang.String str22 = mathException21.getPattern();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!");
        java.lang.Throwable[] throwableArray26 = mathException25.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException25);
        java.io.IOException iOException28 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) derivativeException27);
        mathException21.addSuppressed((java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray30 = derivativeException27.getArguments();
        java.lang.Throwable throwable35 = null;
        java.io.IOException iOException36 = new java.io.IOException("", throwable35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException36);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable45 = null;
        java.io.IOException iOException46 = new java.io.IOException("", throwable45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", objArray42, (java.lang.Throwable) derivativeException48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray38, (java.lang.Throwable) integratorException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("java.io.IOException", objArray38);
        java.lang.Object[] objArray54 = mathException53.getArguments();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", objArray30, (java.lang.Throwable) mathException55);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("", strArray68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException69);
        java.lang.Object[] objArray71 = derivativeException69.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("", objArray71);
        java.io.IOException iOException76 = new java.io.IOException("");
        java.io.IOException iOException77 = new java.io.IOException("hi!", (java.lang.Throwable) iOException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("", objArray71, (java.lang.Throwable) iOException77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException80);
        java.io.IOException iOException83 = new java.io.IOException((java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", objArray30, (java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.IntegratorException integratorException87 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", objArray30);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str22, "org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06789");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', 1.0d, (double) (short) 1, 0.2d);
        double double5 = highamHall54Integrator4.getMinReduction();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
    }

    @Test
    public void test06790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06790");
        java.io.IOException iOException1 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException();
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException2);
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        java.lang.String str5 = derivativeException3.getPattern();
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) derivativeException3);
        iOException1.addSuppressed((java.lang.Throwable) iOException6);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test06791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06791");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray10);
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        java.io.IOException iOException23 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException22);
        java.lang.Throwable throwable35 = null;
        java.io.IOException iOException36 = new java.io.IOException("", throwable35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException39);
        java.lang.Object[] objArray41 = mathException39.getArguments();
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", (java.lang.Throwable) integratorException44);
        java.lang.Throwable throwable50 = null;
        java.io.IOException iOException51 = new java.io.IOException("", throwable50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException52);
        java.lang.Throwable[] throwableArray54 = mathException53.getSuppressed();
        java.lang.String str55 = mathException53.getPattern();
        java.lang.String str56 = mathException53.getPattern();
        mathException46.addSuppressed((java.lang.Throwable) mathException53);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException46);
        java.lang.Throwable[] throwableArray59 = mathException46.getSuppressed();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: java.io.IOException", (java.lang.Object[]) throwableArray59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException60);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test06792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06792");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) 1.0f, (double) 2, 100);
        highamHall54Integrator4.setSafety((double) 100);
        int int18 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9d + "'", double10 == 0.9d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test06793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06793");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double25 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double26 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator4.getStepHandler();
        double double30 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
    }

    @Test
    public void test06794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06794");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.4142135623730951d, 31.622776601683793d, 3.0d, (double) 100.0f);
    }

    @Test
    public void test06795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06795");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Throwable) mathException5);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) mathException8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test06796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06796");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction((double) (-1.0f));
        double double16 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety(56.568542494923804d);
        double double21 = highamHall54Integrator4.getMaxStep();
        double double22 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }

    @Test
    public void test06797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06797");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler10.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler14.evaluateStep(stepInterpolator17);
        double[] doubleArray24 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler14.stepAccepted((double) (byte) 1, doubleArray24);
        boolean boolean26 = switchingFunctionsHandler10.reset((double) (byte) 1, doubleArray24);
        boolean boolean27 = switchingFunctionsHandler0.reset((double) '4', doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        double double30 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler0.add(switchingFunction31, (double) (short) 100, (double) (short) 10, (int) (short) 100);
        boolean boolean36 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06798");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("hi!");
        java.lang.Throwable[] throwableArray3 = mathException2.getSuppressed();
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray3);
        java.lang.String[] strArray12 = new java.lang.String[] { "org.apache.commons.math.MathException: ", "org.apache.commons.math.MathException: ", "Higham-Hall 5(4)", "org.apache.commons.math.ode.DerivativeException" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: Higham-Hall 5(4)", strArray12);
        mathException4.addSuppressed((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException4);
        java.lang.Object[] objArray20 = mathException4.getArguments();
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) mathException4);
        java.lang.String str22 = iOException21.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "java.io.IOException: org.apache.commons.math.MathException: Higham-Hall 5(4)" + "'", str22, "java.io.IOException: org.apache.commons.math.MathException: Higham-Hall 5(4)");
    }

    @Test
    public void test06799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06799");
        java.io.IOException iOException4 = new java.io.IOException("");
        java.io.IOException iOException5 = new java.io.IOException("hi!", (java.lang.Throwable) iOException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException4);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException6);
        java.io.IOException iOException11 = new java.io.IOException("");
        java.io.IOException iOException12 = new java.io.IOException("hi!", (java.lang.Throwable) iOException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException13);
        java.lang.Object[] objArray15 = integratorException14.getArguments();
        mathException6.addSuppressed((java.lang.Throwable) integratorException14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException6);
        java.io.IOException iOException18 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException17);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
    }

    @Test
    public void test06800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06800");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 1, (double) 1L, 3);
        boolean boolean8 = switchingFunctionsHandler0.stop();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler15.evaluateStep(stepInterpolator16);
        double double18 = switchingFunctionsHandler15.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler15.add(switchingFunction19, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler29.evaluateStep(stepInterpolator32);
        double[] doubleArray39 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler29.stepAccepted((double) (byte) 1, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray39);
        boolean boolean42 = switchingFunctionsHandler15.reset((double) '4', doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler43.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler47.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler47.evaluateStep(stepInterpolator50);
        double[] doubleArray57 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler47.stepAccepted((double) (byte) 1, doubleArray57);
        boolean boolean59 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray39, doubleArray57);
        boolean boolean61 = switchingFunctionsHandler11.reset(31.144823004794873d, doubleArray39);
        boolean boolean62 = switchingFunctionsHandler0.reset(31.144823004794873d, doubleArray39);
        double double63 = switchingFunctionsHandler0.getEventTime();
        boolean boolean64 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = switchingFunctionsHandler0.evaluateStep(stepInterpolator65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test06801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06801");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (-1.0d), (double) (byte) 100, (int) (byte) 10);
        java.lang.String str33 = highamHall54Integrator4.getName();
        int int34 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
    }

    @Test
    public void test06802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06802");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setSafety((double) ' ');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator17.addSwitchingFunction(switchingFunction21, (double) 100.0f, (double) 10L, (int) 'a');
        double double26 = highamHall54Integrator17.getCurrentSignedStepsize();
        highamHall54Integrator17.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator17.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator34.getStepHandler();
        highamHall54Integrator34.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = null;
        highamHall54Integrator42.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler46 = null;
        highamHall54Integrator42.setStepHandler(stepHandler46);
        double double48 = highamHall54Integrator42.getMaxStep();
        double double49 = highamHall54Integrator42.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator54.getStepHandler();
        highamHall54Integrator42.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler62 = null;
        highamHall54Integrator61.setStepHandler(stepHandler62);
        double double64 = highamHall54Integrator61.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler65 = null;
        highamHall54Integrator61.setStepHandler(stepHandler65);
        double double67 = highamHall54Integrator61.getMaxStep();
        double double68 = highamHall54Integrator61.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler74 = highamHall54Integrator73.getStepHandler();
        highamHall54Integrator61.setStepHandler(stepHandler74);
        highamHall54Integrator42.setStepHandler(stepHandler74);
        highamHall54Integrator34.setStepHandler(stepHandler74);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        stepHandler74.handleStep(stepInterpolator78, false);
        highamHall54Integrator17.setStepHandler(stepHandler74);
        highamHall54Integrator4.setStepHandler(stepHandler74);
        double double83 = highamHall54Integrator4.getCurrentStepStart();
        double double84 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction85, (double) 'a', 4.47213595499958d, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-1.0d) + "'", double67 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
    }

    @Test
    public void test06803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06803");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(97.0d);
        highamHall54Integrator4.setMaxGrowth((double) 100.0f);
        double double31 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9d + "'", double26 == 0.9d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
    }

    @Test
    public void test06804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06804");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        double double12 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        double double19 = highamHall54Integrator17.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator17.getStepHandler();
        int int21 = highamHall54Integrator17.getOrder();
        highamHall54Integrator17.setSafety((double) (byte) 1);
        double double24 = highamHall54Integrator17.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler25);
        highamHall54Integrator4.setInitialStepSize(1.4142135623730951d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction29, (double) '4', 0.9d, (int) (short) 100);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
    }

    @Test
    public void test06805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06805");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = null;
        double[] doubleArray16 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray9, doubleArray16);
        switchingFunctionsHandler5.stepAccepted((double) 10L, doubleArray9);
        boolean boolean19 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler5.add(switchingFunction20, 0.2d, (double) 1, (int) (byte) -1);
        double[] doubleArray31 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler32.evaluateStep(stepInterpolator33);
        double double35 = switchingFunctionsHandler32.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler32.add(switchingFunction36, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler46.evaluateStep(stepInterpolator49);
        double[] doubleArray56 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler46.stepAccepted((double) (byte) 1, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler32.reset((double) '4', doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray31, doubleArray56);
        boolean boolean61 = switchingFunctionsHandler5.reset((double) 1L, doubleArray56);
        boolean boolean62 = switchingFunctionsHandler0.reset((double) '4', doubleArray56);
        boolean boolean63 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test06806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06806");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(2.0d, (double) (-1L), 97.0d, (double) (-1));
    }

    @Test
    public void test06807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06807");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException2);
        java.lang.Object[] objArray5 = integratorException4.getArguments();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException18);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Throwable) iOException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Throwable) iOException20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", objArray5, (java.lang.Throwable) mathException25);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test06808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06808");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray16);
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.Throwable[] throwableArray29 = mathException27.getSuppressed();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException30);
        java.lang.Throwable throwable35 = null;
        java.io.IOException iOException36 = new java.io.IOException("", throwable35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) mathException37);
        java.io.IOException iOException39 = new java.io.IOException("", (java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException38);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str44 = mathException43.getPattern();
        java.lang.String str45 = mathException43.getPattern();
        iOException38.addSuppressed((java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("java.io.IOException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: java.io.IOException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray16);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("", strArray61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException62);
        java.io.IOException iOException64 = new java.io.IOException("hi!", (java.lang.Throwable) derivativeException62);
        java.io.IOException iOException65 = new java.io.IOException("", (java.lang.Throwable) derivativeException62);
        java.lang.Throwable throwable70 = null;
        java.io.IOException iOException71 = new java.io.IOException("", throwable70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException71);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException74);
        iOException65.addSuppressed((java.lang.Throwable) mathException74);
        java.lang.String str78 = mathException74.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException74);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16, (java.lang.Throwable) derivativeException80);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str78, "org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06809");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((double) (byte) 10);
        int int21 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction22, 0.2d, (double) 3, (int) (byte) -1);
        double double27 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction(31.144823004794873d);
        double double30 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
    }

    @Test
    public void test06810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06810");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray16 = mathException15.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("java.io.IOException: Higham-Hall 5(4)", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        java.io.IOException iOException21 = new java.io.IOException("java.io.IOException: Higham-Hall 5(4)", (java.lang.Throwable) derivativeException20);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test06811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06811");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 0.0f);
        int int11 = highamHall54Integrator4.getOrder();
        double double12 = highamHall54Integrator4.getMinStep();
        java.lang.String str13 = highamHall54Integrator4.getName();
        int int14 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (byte) 10);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    }

    @Test
    public void test06812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06812");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        double double20 = highamHall54Integrator18.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator18.getStepHandler();
        int int22 = highamHall54Integrator18.getOrder();
        highamHall54Integrator18.setSafety((double) (byte) 1);
        double double25 = highamHall54Integrator18.getSafety();
        double double26 = highamHall54Integrator18.getCurrentSignedStepsize();
        double double27 = highamHall54Integrator18.getCurrentSignedStepsize();
        double double28 = highamHall54Integrator18.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = null;
        highamHall54Integrator33.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator33.getCurrentSignedStepsize();
        double double37 = highamHall54Integrator33.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator33.getCurrentSignedStepsize();
        double double46 = highamHall54Integrator33.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler52 = null;
        highamHall54Integrator51.setStepHandler(stepHandler52);
        double double54 = highamHall54Integrator51.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler55 = null;
        highamHall54Integrator51.setStepHandler(stepHandler55);
        double double57 = highamHall54Integrator51.getMaxStep();
        double double58 = highamHall54Integrator51.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator63.getStepHandler();
        highamHall54Integrator51.setStepHandler(stepHandler64);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        highamHall54Integrator51.addSwitchingFunction(switchingFunction66, (double) '4', 1.0d, (int) (short) -1);
        double double71 = highamHall54Integrator51.getMaxStep();
        double double72 = highamHall54Integrator51.getSafety();
        highamHall54Integrator51.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler75 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler75);
        highamHall54Integrator18.setStepHandler(stepHandler75);
        highamHall54Integrator4.setStepHandler(stepHandler75);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1.0d) + "'", double57 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.9d + "'", double72 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler75);
    }

    @Test
    public void test06813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06813");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator18.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator18.getMaxStep();
        double double25 = highamHall54Integrator18.getMinStep();
        double double26 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator31.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator31.getStepHandler();
        boolean boolean36 = stepHandler35.requiresDenseOutput();
        highamHall54Integrator18.setStepHandler(stepHandler35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        stepHandler35.handleStep(stepInterpolator38, true);
        stepHandler35.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        stepHandler35.handleStep(stepInterpolator42, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        stepHandler35.handleStep(stepInterpolator45, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler35.handleStep(stepInterpolator48, true);
        highamHall54Integrator4.setStepHandler(stepHandler35);
        java.lang.String str52 = highamHall54Integrator4.getName();
        int int53 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler60 = null;
        highamHall54Integrator59.setStepHandler(stepHandler60);
        double double62 = highamHall54Integrator59.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler63 = null;
        highamHall54Integrator59.setStepHandler(stepHandler63);
        double double65 = highamHall54Integrator59.getMaxStep();
        double double66 = highamHall54Integrator59.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler72 = highamHall54Integrator71.getStepHandler();
        highamHall54Integrator59.setStepHandler(stepHandler72);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler79 = null;
        highamHall54Integrator78.setStepHandler(stepHandler79);
        double double81 = highamHall54Integrator78.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler82 = null;
        highamHall54Integrator78.setStepHandler(stepHandler82);
        double double84 = highamHall54Integrator78.getMaxStep();
        double double85 = highamHall54Integrator78.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler91 = highamHall54Integrator90.getStepHandler();
        highamHall54Integrator78.setStepHandler(stepHandler91);
        highamHall54Integrator59.setStepHandler(stepHandler91);
        boolean boolean94 = stepHandler91.requiresDenseOutput();
        boolean boolean95 = stepHandler91.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler91);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator97 = null;
        stepHandler91.handleStep(stepInterpolator97, false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1.0d) + "'", double65 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-1.0d) + "'", double84 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 10.0d + "'", double85 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test06814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06814");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 2.1213203435596424d, (double) ' ', (double) 0.0f);
    }

    @Test
    public void test06815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06815");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("", throwable4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException5);
        java.lang.Object[] objArray7 = mathException6.getArguments();
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray11, (java.lang.Throwable) derivativeException17);
        java.lang.Object[] objArray19 = mathException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray7, (java.lang.Throwable) integratorException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Throwable) integratorException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException22);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) mathException22);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException25);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[10]");
    }

    @Test
    public void test06816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06816");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray14);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) derivativeException21);
        java.io.IOException iOException23 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: Higham-Hall 5(4)", (java.lang.Throwable) derivativeException21);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test06817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06817");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        double double6 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler10.evaluateStep(stepInterpolator11);
        double double13 = switchingFunctionsHandler10.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler10.add(switchingFunction14, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler24.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler24.evaluateStep(stepInterpolator27);
        double[] doubleArray34 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler24.stepAccepted((double) (byte) 1, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray34);
        boolean boolean37 = switchingFunctionsHandler10.reset((double) '4', doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler38.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler42.evaluateStep(stepInterpolator45);
        double[] doubleArray52 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler42.stepAccepted((double) (byte) 1, doubleArray52);
        boolean boolean54 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray52);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray34, doubleArray52);
        boolean boolean56 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray34);
        boolean boolean57 = switchingFunctionsHandler0.stop();
        boolean boolean58 = switchingFunctionsHandler0.isEmpty();
        double double59 = switchingFunctionsHandler0.getEventTime();
        double double60 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = switchingFunctionsHandler0.evaluateStep(stepInterpolator61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test06818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06818");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator16.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator16.getMaxStep();
        double double23 = highamHall54Integrator16.getMinStep();
        double double24 = highamHall54Integrator16.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        double double33 = highamHall54Integrator29.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        stepHandler39.handleStep(stepInterpolator41, true);
        highamHall54Integrator16.setStepHandler(stepHandler39);
        stepHandler39.reset();
        boolean boolean46 = stepHandler39.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler39);
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator4.getStepHandler();
        double double49 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setSafety(35.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
    }

    @Test
    public void test06819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06819");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) (byte) 100, 10.0d, 2);
        double double14 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = switchingFunctionsHandler0.evaluateStep(stepInterpolator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test06820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06820");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMaxStep();
        double double19 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        highamHall54Integrator12.setStepHandler(stepHandler44);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        double double48 = highamHall54Integrator4.getCurrentStepStart();
        double double49 = highamHall54Integrator4.getMinStep();
        double double50 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction51, 24.947901585376336d, (double) 0L, (int) ' ');
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.9d + "'", double50 == 0.9d);
    }

    @Test
    public void test06821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06821");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) (-1.0f), (double) (short) 0, 0);
        double double12 = highamHall54Integrator4.getMaxGrowth();
        double double13 = highamHall54Integrator4.getMaxStep();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        double double17 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator4.getStepHandler();
        boolean boolean19 = stepHandler18.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06822");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("java.io.IOException");
        java.lang.Object[] objArray5 = mathException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", objArray5);
        java.io.IOException iOException8 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) integratorException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException7);
        java.lang.String str10 = integratorException7.toString();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException" + "'", str10, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06823");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = null;
        double[] doubleArray16 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray9, doubleArray16);
        switchingFunctionsHandler5.stepAccepted((double) 10L, doubleArray9);
        boolean boolean19 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler5.add(switchingFunction20, 0.2d, (double) 1, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler26.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler26.evaluateStep(stepInterpolator29);
        double[] doubleArray36 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler26.stepAccepted((double) (byte) 1, doubleArray36);
        double[] doubleArray44 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler45.evaluateStep(stepInterpolator46);
        double double48 = switchingFunctionsHandler45.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler45.add(switchingFunction49, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler59.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler59.evaluateStep(stepInterpolator62);
        double[] doubleArray69 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler59.stepAccepted((double) (byte) 1, doubleArray69);
        boolean boolean71 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray69);
        boolean boolean72 = switchingFunctionsHandler45.reset((double) '4', doubleArray69);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray44, doubleArray69);
        boolean boolean74 = switchingFunctionsHandler26.reset((double) (byte) 0, doubleArray69);
        boolean boolean75 = switchingFunctionsHandler5.reset((double) 2, doubleArray69);
        boolean boolean76 = switchingFunctionsHandler0.reset((-1.0d), doubleArray69);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        switchingFunctionsHandler0.add(switchingFunction77, (double) (byte) 100, (double) (short) 10, (int) 'a');
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = switchingFunctionsHandler0.evaluateStep(stepInterpolator82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test06824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06824");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator16.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator16.getMaxStep();
        double double23 = highamHall54Integrator16.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        stepHandler29.handleStep(stepInterpolator31, true);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator4.getStepHandler();
        double double36 = highamHall54Integrator4.getMaxStep();
        int int37 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(1.4142135623730951d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
    }

    @Test
    public void test06825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06825");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException("hi!", (java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.lang.Throwable throwable11 = null;
        java.io.IOException iOException12 = new java.io.IOException("", throwable11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException15);
        java.lang.Object[] objArray17 = mathException15.getArguments();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray17);
        iOException4.addSuppressed((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.lang.String str21 = mathException18.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray23 = mathException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", objArray23);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }

    @Test
    public void test06826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06826");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str8 = mathException7.getPattern();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray10);
        java.lang.Throwable throwable16 = null;
        java.io.IOException iOException17 = new java.io.IOException("", throwable16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException18);
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("", throwable26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) derivativeException30);
        java.lang.Throwable[] throwableArray32 = mathException31.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray32);
        java.lang.String str34 = integratorException33.getPattern();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) integratorException33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException" + "'", str34, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06827");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: hi!");
    }

    @Test
    public void test06828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06828");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        java.lang.Throwable[] throwableArray5 = mathException4.getSuppressed();
        java.lang.Object[] objArray6 = mathException4.getArguments();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", objArray6);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException18);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) mathException19);
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException30);
        iOException20.addSuppressed((java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.MathException: ", objArray6, (java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException30);
        java.lang.Object[] objArray35 = mathException30.getArguments();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
    }

    @Test
    public void test06829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06829");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException5);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray9 = mathException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) mathException8);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test06830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06830");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray9 = mathException8.getSuppressed();
        java.lang.Object[] objArray10 = mathException8.getArguments();
        java.lang.String str11 = mathException8.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException8);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Throwable) mathException8);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test06831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06831");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        highamHall54Integrator4.setSafety((double) (short) -1);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(10.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 1, 17.78279410038923d, (double) 5);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test06832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06832");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        java.lang.String str26 = highamHall54Integrator4.getName();
        double double27 = highamHall54Integrator4.getMinReduction();
        double double28 = highamHall54Integrator4.getMinStep();
        double double29 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str30 = highamHall54Integrator4.getName();
        double double31 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test06833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06833");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Object[]) strArray12);
        java.lang.Throwable throwable20 = null;
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", throwable20);
        java.lang.Object[] objArray22 = mathException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", objArray22);
        java.lang.Throwable[] throwableArray24 = integratorException23.getSuppressed();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12, (java.lang.Throwable) integratorException23);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test06834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06834");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException14);
        java.lang.Object[] objArray16 = derivativeException14.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray16);
        java.io.IOException iOException21 = new java.io.IOException("");
        java.io.IOException iOException22 = new java.io.IOException("hi!", (java.lang.Throwable) iOException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) iOException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) iOException22);
        java.lang.Throwable throwable31 = null;
        java.io.IOException iOException32 = new java.io.IOException("", throwable31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException32);
        java.lang.Object[] objArray34 = mathException33.getArguments();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable41 = null;
        java.io.IOException iOException42 = new java.io.IOException("", throwable41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("", objArray38, (java.lang.Throwable) derivativeException44);
        java.lang.Object[] objArray46 = mathException45.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray34, (java.lang.Throwable) integratorException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Throwable) integratorException47);
        java.io.IOException iOException50 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) integratorException47);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        iOException22.addSuppressed((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        java.io.IOException iOException56 = new java.io.IOException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) integratorException55);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException56);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[10]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[10]");
    }

    @Test
    public void test06835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06835");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) 10, (double) 1.0f, (int) '4');
        boolean boolean8 = switchingFunctionsHandler0.stop();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) (short) 10, (double) '#', (int) (short) -1);
        double[] doubleArray22 = new double[] { 100, 0.0d };
        double[] doubleArray28 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        double double32 = switchingFunctionsHandler29.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler29.add(switchingFunction33, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler43.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler43.evaluateStep(stepInterpolator46);
        double[] doubleArray53 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler43.stepAccepted((double) (byte) 1, doubleArray53);
        boolean boolean55 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray53);
        boolean boolean56 = switchingFunctionsHandler29.reset((double) '4', doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray28, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 1L, doubleArray22, doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        double double64 = switchingFunctionsHandler61.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler61.add(switchingFunction65, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = switchingFunctionsHandler71.evaluateStep(stepInterpolator72);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler75.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        boolean boolean79 = switchingFunctionsHandler75.evaluateStep(stepInterpolator78);
        double[] doubleArray85 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler75.stepAccepted((double) (byte) 1, doubleArray85);
        boolean boolean87 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray85);
        boolean boolean88 = switchingFunctionsHandler61.reset((double) '4', doubleArray85);
        double[] doubleArray95 = new double[] { (-1), 0.0f, '#', (-1), 3, 0.0f };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator96 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 1.0f, doubleArray85, doubleArray95);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator97 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, 31.622776601683793d, doubleArray53, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(2.0d, doubleArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-1.0, 0.0, 35.0, -1.0, 3.0, 0.0]");
    }

    @Test
    public void test06836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06836");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 56.568542494923804d, 5.477225575051661d, 1.4142135623730951d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator9.getStepHandler();
        double double11 = highamHall54Integrator9.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator9.getStepHandler();
        java.lang.String str13 = highamHall54Integrator9.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator18.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator18.getStepHandler();
        boolean boolean23 = stepHandler22.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        stepHandler22.handleStep(stepInterpolator24, true);
        highamHall54Integrator9.setStepHandler(stepHandler22);
        boolean boolean28 = stepHandler22.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        stepHandler22.handleStep(stepInterpolator29, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        stepHandler22.handleStep(stepInterpolator32, false);
        highamHall54Integrator4.setStepHandler(stepHandler22);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06837");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler10.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler14.evaluateStep(stepInterpolator17);
        double[] doubleArray24 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler14.stepAccepted((double) (byte) 1, doubleArray24);
        boolean boolean26 = switchingFunctionsHandler10.reset((double) (byte) 1, doubleArray24);
        boolean boolean27 = switchingFunctionsHandler0.reset((double) '4', doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        boolean boolean30 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06838");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test06839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06839");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("java.io.IOException");
        java.io.IOException iOException3 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) mathException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) mathException2);
    }

    @Test
    public void test06840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06840");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("java.io.IOException");
        java.lang.Object[] objArray4 = mathException3.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException3);
        java.lang.Object[] objArray6 = derivativeException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("", objArray6);
        java.lang.String str8 = integratorException7.getPattern();
        java.lang.Throwable[] throwableArray9 = integratorException7.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException10);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test06841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06841");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray9 = mathException7.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException7);
        java.io.IOException iOException11 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Throwable) integratorException10);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) iOException12);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test06842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06842");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray15);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test06843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06843");
        java.lang.Object[] objArray1 = null;
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException("hi!", (java.lang.Throwable) iOException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException5);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException7);
        java.lang.Object[] objArray9 = integratorException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) integratorException8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", objArray1, (java.lang.Throwable) integratorException8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test06844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06844");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler4.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler4.evaluateStep(stepInterpolator7);
        double[] doubleArray14 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler4.stepAccepted((double) (byte) 1, doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) 1, (double) (short) 10, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) 3, (double) 10.0f, (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray39 = new double[] { 1, (short) 100, 1.0f, 10.0d, (byte) 0, (short) 100 };
        double[] doubleArray50 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray53 = null;
        double[] doubleArray60 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray53, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray50, doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler63.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = switchingFunctionsHandler67.evaluateStep(stepInterpolator68);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler67.evaluateStep(stepInterpolator70);
        double[] doubleArray77 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler67.stepAccepted((double) (byte) 1, doubleArray77);
        boolean boolean79 = switchingFunctionsHandler63.reset((double) (byte) 1, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray50, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (byte) 1, doubleArray39, doubleArray50);
        switchingFunctionsHandler28.stepAccepted(Double.NaN, doubleArray39);
        double[] doubleArray86 = null;
        double[] doubleArray93 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray86, doubleArray93);
        boolean boolean95 = switchingFunctionsHandler28.reset((-0.0d), doubleArray93);
        boolean boolean96 = switchingFunctionsHandler0.reset((double) 10.0f, doubleArray93);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test06845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06845");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setSafety(97.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        highamHall54Integrator36.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator36.getCurrentSignedStepsize();
        double double40 = highamHall54Integrator36.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler46.handleStep(stepInterpolator48, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        stepHandler46.handleStep(stepInterpolator51, false);
        boolean boolean54 = stepHandler46.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler46);
        int int56 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (short) 10);
        java.lang.String str59 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 10L);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Higham-Hall 5(4)" + "'", str59, "Higham-Hall 5(4)");
    }

    @Test
    public void test06846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06846");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        java.io.IOException iOException11 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) mathException10);
        java.lang.String str12 = mathException10.getPattern();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str12, "org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06847");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction39, (double) (-1L), (double) 1L, (-1));
        highamHall54Integrator4.setInitialStepSize((double) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction46, (double) 2, (double) (byte) 0, 0);
        double double51 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1.0d) + "'", double51 == (-1.0d));
    }

    @Test
    public void test06848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06848");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) (-1.0f), (double) (short) 0, 0);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(0.4472135954999579d);
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        double double16 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety(22.80350850198276d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
    }

    @Test
    public void test06849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06849");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException(throwable0);
        java.lang.Object[] objArray2 = mathException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
    }

    @Test
    public void test06850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06850");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException10);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) mathException11);
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException22);
        iOException12.addSuppressed((java.lang.Throwable) mathException22);
        java.lang.Throwable throwable27 = null;
        java.io.IOException iOException28 = new java.io.IOException("", throwable27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException28);
        mathException22.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray31 = iOException28.getSuppressed();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException44);
        java.lang.Object[] objArray46 = derivativeException44.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", objArray46);
        java.io.IOException iOException51 = new java.io.IOException("");
        java.io.IOException iOException52 = new java.io.IOException("hi!", (java.lang.Throwable) iOException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("", objArray46, (java.lang.Throwable) iOException52);
        iOException28.addSuppressed((java.lang.Throwable) mathException53);
        java.io.IOException iOException55 = new java.io.IOException("org.apache.commons.math.MathException: java.io.IOException", (java.lang.Throwable) iOException28);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06851");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test06852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06852");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray9);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) derivativeException12);
        java.lang.Object[] objArray14 = derivativeException12.getArguments();
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) derivativeException12);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06853");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException(throwable1);
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", throwable1);
        java.lang.Throwable[] throwableArray4 = mathException3.getSuppressed();
        java.lang.Object[] objArray5 = mathException3.getArguments();
        java.lang.Throwable[] throwableArray6 = mathException3.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test06854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06854");
        java.lang.Throwable throwable9 = null;
        java.io.IOException iOException10 = new java.io.IOException("", throwable9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", objArray13);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray23);
        java.lang.String str26 = mathException25.getPattern();
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("", throwable33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException35);
        java.lang.Object[] objArray37 = mathException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray37);
        java.io.IOException iOException40 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException39);
        mathException25.addSuppressed((java.lang.Throwable) mathException39);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", objArray13, (java.lang.Throwable) mathException25);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", objArray13);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray13);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException57);
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) mathException57);
        java.lang.Throwable[] throwableArray60 = iOException59.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Object[]) throwableArray60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray13, (java.lang.Throwable) integratorException61);
        java.io.IOException iOException63 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) integratorException61);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str26, "org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test06855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06855");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        double double12 = highamHall54Integrator4.getMaxStep();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        int int16 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        java.lang.String str19 = highamHall54Integrator4.getName();
        double double20 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
    }

    @Test
    public void test06856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06856");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException11);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Throwable) iOException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Throwable) iOException13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        java.lang.String str17 = mathException15.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.MathException: java.io.IOException" + "'", str17, "org.apache.commons.math.MathException: java.io.IOException");
    }

    @Test
    public void test06857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06857");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException14);
        java.lang.Object[] objArray16 = derivativeException14.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray16);
        java.io.IOException iOException21 = new java.io.IOException("");
        java.io.IOException iOException22 = new java.io.IOException("hi!", (java.lang.Throwable) iOException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", objArray16);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException38);
        java.lang.Object[] objArray40 = derivativeException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", objArray40);
        java.io.IOException iOException45 = new java.io.IOException("");
        java.io.IOException iOException46 = new java.io.IOException("hi!", (java.lang.Throwable) iOException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", objArray40, (java.lang.Throwable) iOException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException46);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException", objArray16, (java.lang.Throwable) mathException48);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06858");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 0.0d, (double) (-1.0f), (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, 52.0d, 0.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (double) '4', (double) (byte) 100, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06859");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str4 = mathException3.getPattern();
        java.lang.String str5 = mathException3.getPattern();
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException3);
        java.lang.Object[] objArray7 = mathException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", objArray7);
        java.lang.Class<?> wildcardClass9 = objArray7.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test06860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06860");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) 0, (double) 1L, (int) '4');
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator16.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator16.getMinReduction();
        int int23 = highamHall54Integrator16.getOrder();
        highamHall54Integrator16.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = null;
        highamHall54Integrator30.setStepHandler(stepHandler31);
        double double33 = highamHall54Integrator30.getCurrentSignedStepsize();
        double double34 = highamHall54Integrator30.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator39.getStepHandler();
        highamHall54Integrator30.setStepHandler(stepHandler40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        stepHandler40.handleStep(stepInterpolator42, true);
        highamHall54Integrator16.setStepHandler(stepHandler40);
        highamHall54Integrator4.setStepHandler(stepHandler40);
        java.lang.String str47 = highamHall54Integrator4.getName();
        int int48 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
    }

    @Test
    public void test06861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06861");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test06862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06862");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.MathException: ", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test06863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06863");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException3);
        java.lang.Object[] objArray5 = derivativeException4.getArguments();
        java.lang.Throwable throwable12 = null;
        java.io.IOException iOException13 = new java.io.IOException("", throwable12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray16);
        java.io.IOException iOException19 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", objArray5, (java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test06864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06864");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray18);
        java.lang.Throwable throwable24 = null;
        java.io.IOException iOException25 = new java.io.IOException("", throwable24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException25);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray18, (java.lang.Throwable) iOException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray18);
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray18, throwable34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray18);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray18);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) mathException37);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test06865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06865");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator15.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator15.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator15.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator15.getMaxStep();
        double double22 = highamHall54Integrator15.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator15.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator34.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator34.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler38 = null;
        highamHall54Integrator34.setStepHandler(stepHandler38);
        double double40 = highamHall54Integrator34.getMaxStep();
        double double41 = highamHall54Integrator34.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator34.setStepHandler(stepHandler47);
        highamHall54Integrator15.setStepHandler(stepHandler47);
        stepHandler47.reset();
        stepHandler47.reset();
        stepHandler47.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        stepHandler47.handleStep(stepInterpolator53, true);
        highamHall54Integrator4.setStepHandler(stepHandler47);
        java.lang.String str57 = highamHall54Integrator4.getName();
        java.lang.String str58 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1.0d) + "'", double40 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
    }

    @Test
    public void test06866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06866");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler10 = null;
        highamHall54Integrator4.setStepHandler(stepHandler10);
        double double12 = highamHall54Integrator4.getMinStep();
        double double13 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test06867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06867");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        double double18 = highamHall54Integrator4.getMinStep();
        int int19 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
    }

    @Test
    public void test06868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06868");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        java.lang.String str10 = highamHall54Integrator4.getName();
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
    }

    @Test
    public void test06869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06869");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        java.lang.String str7 = highamHall54Integrator4.getName();
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, 3.1622776601683795d, 0.0d, (int) (short) 1);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test06870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06870");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        stepHandler9.reset();
        boolean boolean11 = stepHandler9.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06871");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMaxGrowth((double) 0.0f);
        double double16 = highamHall54Integrator4.getMinStep();
        double double17 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
    }

    @Test
    public void test06872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06872");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction18, (double) 'a', (double) 'a', 0);
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        highamHall54Integrator4.setInitialStepSize(0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, 55.3841974787333d, (double) (byte) 10, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler27);
    }

    @Test
    public void test06873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06873");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double14 = highamHall54Integrator13.getCurrentStepStart();
        double double15 = highamHall54Integrator13.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator20.getStepHandler();
        double double22 = highamHall54Integrator20.getMinStep();
        double double23 = highamHall54Integrator20.getCurrentSignedStepsize();
        highamHall54Integrator20.setInitialStepSize(10.0d);
        double double26 = highamHall54Integrator20.getMinStep();
        double double27 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator32.getStepHandler();
        double double34 = highamHall54Integrator32.getMinStep();
        double double35 = highamHall54Integrator32.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator32.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler36.handleStep(stepInterpolator37, false);
        highamHall54Integrator20.setStepHandler(stepHandler36);
        highamHall54Integrator13.setStepHandler(stepHandler36);
        stepHandler36.reset();
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double44 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2d + "'", double44 == 0.2d);
    }

    @Test
    public void test06874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06874");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 1, (double) 1L, 3);
        boolean boolean8 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) 100L, 2.0d, (int) (byte) -1);
        double[] doubleArray15 = null;
        boolean boolean16 = switchingFunctionsHandler0.reset((double) (byte) -1, doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06875");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException12);
        java.lang.String str15 = mathException14.getPattern();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.MathException: " + "'", str15, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test06876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06876");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 10);
        double double10 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction((double) ' ');
        double double13 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMaxGrowth((double) 1);
        highamHall54Integrator4.setMaxGrowth(1.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 32.0d + "'", double13 == 32.0d);
    }

    @Test
    public void test06877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06877");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
        java.lang.Object[] objArray2 = mathException1.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException1);
        java.lang.Object[] objArray4 = mathException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
    }

    @Test
    public void test06878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06878");
        java.lang.String[] strArray6 = new java.lang.String[] { "Higham-Hall 5(4)", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", strArray6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException7);
        java.io.IOException iOException9 = new java.io.IOException("org.apache.commons.math.MathException: java.io.IOException: ", (java.lang.Throwable) mathException8);
        java.io.IOException iOException10 = new java.io.IOException("org.apache.commons.math.MathException", (java.lang.Throwable) iOException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException9);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test06879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06879");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray13);
        java.lang.Throwable throwable19 = null;
        java.io.IOException iOException20 = new java.io.IOException("", throwable19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray13, (java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray13);
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException(throwable26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) iOException27);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        java.lang.String[] strArray34 = new java.lang.String[] { "Higham-Hall 5(4)", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        mathException28.addSuppressed((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException28);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test06880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06880");
        double[] doubleArray4 = new double[] { 100, 0.0d };
        double[] doubleArray10 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        double double14 = switchingFunctionsHandler11.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler11.add(switchingFunction15, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler25.evaluateStep(stepInterpolator28);
        double[] doubleArray35 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler25.stepAccepted((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler21.reset((double) (byte) 1, doubleArray35);
        boolean boolean38 = switchingFunctionsHandler11.reset((double) '4', doubleArray35);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray10, doubleArray35);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 1L, doubleArray4, doubleArray35);
        double double41 = highamHall54Integrator40.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.2d + "'", double41 == 0.2d);
    }

    @Test
    public void test06881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06881");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.lang.Throwable throwable18 = null;
        java.io.IOException iOException19 = new java.io.IOException("", throwable18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray13, (java.lang.Throwable) mathException22);
        java.lang.Object[] objArray25 = mathException22.getArguments();
        java.io.IOException iOException29 = new java.io.IOException("");
        java.io.IOException iOException30 = new java.io.IOException("hi!", (java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", objArray25, (java.lang.Throwable) iOException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException35);
        java.lang.Object[] objArray37 = mathException35.getArguments();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("java.io.IOException", objArray37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException38);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Throwable) mathException38);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
    }

    @Test
    public void test06882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06882");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        double double17 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double18 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertNull(stepHandler16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
    }

    @Test
    public void test06883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06883");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 10L, (double) (byte) 1, (double) (short) 1);
        highamHall54Integrator4.setSafety((double) 100.0f);
        highamHall54Integrator4.setSafety((double) 10L);
        double double9 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test06884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06884");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException12);
        java.lang.Object[] objArray14 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", objArray14);
        java.lang.Object[] objArray17 = mathException16.getArguments();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Throwable) mathException16);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException30);
        java.lang.Object[] objArray32 = derivativeException30.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", objArray32);
        java.lang.Throwable throwable37 = null;
        java.io.IOException iOException38 = new java.io.IOException("", throwable37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException39);
        mathException34.addSuppressed((java.lang.Throwable) mathException39);
        mathException16.addSuppressed((java.lang.Throwable) mathException39);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray45 = iOException44.getSuppressed();
        java.lang.String str46 = iOException44.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "java.io.IOException: org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: " + "'", str46, "java.io.IOException: org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test06885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06885");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler13.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler13.evaluateStep(stepInterpolator16);
        double[] doubleArray23 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler13.stepAccepted((double) (byte) 1, doubleArray23);
        boolean boolean25 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 1L, doubleArray23);
        boolean boolean27 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, (double) '4', (double) ' ', 0);
        boolean boolean33 = switchingFunctionsHandler0.stop();
        boolean boolean34 = switchingFunctionsHandler0.stop();
        double double35 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler0.add(switchingFunction36, 0.0d, (double) 10.0f, (int) ' ');
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = switchingFunctionsHandler0.evaluateStep(stepInterpolator41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test06886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06886");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 1, (double) 1L, 3);
        double[] doubleArray9 = null;
        boolean boolean10 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray13 = null;
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 5.0d, (double) 'a', (int) ' ');
        boolean boolean20 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06887");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMaxGrowth();
        double double27 = highamHall54Integrator4.getMinStep();
        double double28 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator33.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator33.getStepHandler();
        boolean boolean38 = stepHandler37.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        stepHandler37.handleStep(stepInterpolator39, false);
        highamHall54Integrator4.setStepHandler(stepHandler37);
        java.lang.String str43 = highamHall54Integrator4.getName();
        int int44 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
    }

    @Test
    public void test06888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06888");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        highamHall54Integrator4.setSafety((double) 10.0f);
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        double double22 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str23 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 0.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
    }

    @Test
    public void test06889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06889");
        java.io.IOException iOException5 = new java.io.IOException("");
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) iOException5);
        java.lang.String str7 = mathException6.getPattern();
        java.lang.Object[] objArray8 = mathException6.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: java.io.IOException", objArray8);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: hi!", objArray8, throwable11);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str7, "org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test06890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06890");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler14);
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        highamHall54Integrator4.setSafety((-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test06891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06891");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator13.getStepHandler();
        boolean boolean18 = stepHandler17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        stepHandler17.handleStep(stepInterpolator19, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        java.lang.String str23 = highamHall54Integrator4.getName();
        double double24 = highamHall54Integrator4.getCurrentStepStart();
        double double25 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator30.getStepHandler();
        double double32 = highamHall54Integrator30.getMinStep();
        double double33 = highamHall54Integrator30.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator30.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        stepHandler34.handleStep(stepInterpolator35, false);
        boolean boolean38 = stepHandler34.requiresDenseOutput();
        stepHandler34.reset();
        stepHandler34.reset();
        highamHall54Integrator4.setStepHandler(stepHandler34);
        double double42 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str43 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
    }

    @Test
    public void test06892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06892");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.String str9 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 1L);
        highamHall54Integrator4.setMaxGrowth((double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        java.lang.String str15 = highamHall54Integrator4.getName();
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, (double) 'a', (double) (short) 1, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test06893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06893");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, 31.622776601683793d, (double) 100L, 100);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator4.getStepHandler();
        stepHandler24.reset();
        boolean boolean26 = stepHandler24.requiresDenseOutput();
        boolean boolean27 = stepHandler24.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06894");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) 100, Double.NaN, (double) (short) -1);
        double double5 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (-1), (-0.0d), (int) (short) 100);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
    }

    @Test
    public void test06895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06895");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (-1.0d), (double) (byte) 100, (int) (byte) 10);
        java.lang.String str33 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator4.getStepHandler();
        java.lang.Class<?> wildcardClass35 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test06896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06896");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", strArray12);
        java.lang.Class<?> wildcardClass19 = strArray12.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06897");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) 1, (-1.0d), (int) (short) 1);
        double double10 = switchingFunctionsHandler0.getEventTime();
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler16.add(switchingFunction17, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean22 = switchingFunctionsHandler16.stop();
        boolean boolean23 = switchingFunctionsHandler16.isEmpty();
        boolean boolean24 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler26.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler26.add(switchingFunction29, (double) (short) 1, (double) 1L, 3);
        boolean boolean34 = switchingFunctionsHandler26.stop();
        boolean boolean35 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        double double44 = switchingFunctionsHandler41.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler41.add(switchingFunction45, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler51.evaluateStep(stepInterpolator52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler55.evaluateStep(stepInterpolator58);
        double[] doubleArray65 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler55.stepAccepted((double) (byte) 1, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray65);
        boolean boolean68 = switchingFunctionsHandler41.reset((double) '4', doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler69.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        boolean boolean75 = switchingFunctionsHandler73.evaluateStep(stepInterpolator74);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler73.evaluateStep(stepInterpolator76);
        double[] doubleArray83 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler73.stepAccepted((double) (byte) 1, doubleArray83);
        boolean boolean85 = switchingFunctionsHandler69.reset((double) (byte) 1, doubleArray83);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray65, doubleArray83);
        boolean boolean87 = switchingFunctionsHandler37.reset(31.144823004794873d, doubleArray65);
        boolean boolean88 = switchingFunctionsHandler26.reset(31.144823004794873d, doubleArray65);
        boolean boolean89 = switchingFunctionsHandler16.reset((double) '4', doubleArray65);
        double[] doubleArray90 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, 31.144823004794873d, doubleArray65, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test06898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06898");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety(100.0d);
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        int int15 = highamHall54Integrator4.getOrder();
        java.lang.String str16 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
    }

    @Test
    public void test06899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06899");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray15 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray18 = null;
        double[] doubleArray25 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray18, doubleArray25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray15, doubleArray18);
        boolean boolean28 = switchingFunctionsHandler0.reset(0.9d, doubleArray15);
        double double29 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler0.evaluateStep(stepInterpolator30);
        double[] doubleArray43 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray46 = null;
        double[] doubleArray53 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray46, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray43, doubleArray46);
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, (double) (byte) -1, doubleArray43, doubleArray56);
        switchingFunctionsHandler0.stepAccepted(24.947901585376336d, doubleArray43);
        double double59 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test06900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06900");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str14 = highamHall54Integrator4.getName();
        double double15 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, 32.0d, 100.0d, (int) (short) 100);
        highamHall54Integrator4.setInitialStepSize(2.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
    }

    @Test
    public void test06901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06901");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException12);
        java.io.IOException iOException14 = new java.io.IOException("hi!", (java.lang.Throwable) derivativeException12);
        java.io.IOException iOException15 = new java.io.IOException("", (java.lang.Throwable) derivativeException12);
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        iOException15.addSuppressed((java.lang.Throwable) mathException24);
        java.io.IOException iOException28 = new java.io.IOException("org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException15);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException28.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test06902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06902");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) (-1.0f), (double) (short) 0, 0);
        highamHall54Integrator4.setInitialStepSize(0.0d);
        highamHall54Integrator4.setMinReduction((double) 0);
        double double16 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, (double) 100L, (double) 10.0f, 1);
        double double22 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction23, 3.1622776601683795d, 0.0d, (int) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        stepHandler28.handleStep(stepInterpolator29, true);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler28);
    }

    @Test
    public void test06903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06903");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        java.lang.String str15 = highamHall54Integrator4.getName();
        java.lang.String str16 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) (-1.0f));
        java.lang.String str19 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (short) -1);
        highamHall54Integrator4.setMinReduction(2.514866859365871d);
        double double24 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
    }

    @Test
    public void test06904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06904");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        highamHall54Integrator4.setSafety((double) 10.0f);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test06905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06905");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler8);
    }

    @Test
    public void test06906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06906");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        java.lang.String str39 = highamHall54Integrator4.getName();
        double double40 = highamHall54Integrator4.getMinReduction();
        double double41 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str42 = highamHall54Integrator4.getName();
        java.lang.String str43 = highamHall54Integrator4.getName();
        java.lang.String str44 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator49.getStepHandler();
        double double51 = highamHall54Integrator49.getMinStep();
        double double52 = highamHall54Integrator49.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator49.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        stepHandler53.handleStep(stepInterpolator54, false);
        boolean boolean57 = stepHandler53.requiresDenseOutput();
        stepHandler53.reset();
        stepHandler53.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        stepHandler53.handleStep(stepInterpolator60, false);
        highamHall54Integrator4.setStepHandler(stepHandler53);
        double double64 = highamHall54Integrator4.getMaxStep();
        double double65 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2d + "'", double40 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1.0d) + "'", double64 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
    }

    @Test
    public void test06907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06907");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) 0, (double) 1L, (int) '4');
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator16.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator16.getMinReduction();
        int int23 = highamHall54Integrator16.getOrder();
        highamHall54Integrator16.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = null;
        highamHall54Integrator30.setStepHandler(stepHandler31);
        double double33 = highamHall54Integrator30.getCurrentSignedStepsize();
        double double34 = highamHall54Integrator30.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator39.getStepHandler();
        highamHall54Integrator30.setStepHandler(stepHandler40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        stepHandler40.handleStep(stepInterpolator42, true);
        highamHall54Integrator16.setStepHandler(stepHandler40);
        highamHall54Integrator4.setStepHandler(stepHandler40);
        highamHall54Integrator4.setMaxGrowth(0.4472135954999579d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, (double) 3, (double) 0L, 0.2d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) (short) 0, (double) (short) 1, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator58.getStepHandler();
        highamHall54Integrator53.setStepHandler(stepHandler59);
        stepHandler59.reset();
        highamHall54Integrator4.setStepHandler(stepHandler59);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertNotNull(stepHandler59);
    }

    @Test
    public void test06908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06908");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, (double) 0.0f, 0.0d, (int) (short) 1);
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06909");
        java.io.IOException iOException2 = new java.io.IOException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: ");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!");
        iOException2.addSuppressed((java.lang.Throwable) mathException4);
        java.lang.Throwable[] throwableArray6 = iOException2.getSuppressed();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Object[]) throwableArray6);
        java.lang.String[] strArray15 = new java.lang.String[] { "org.apache.commons.math.MathException: ", "org.apache.commons.math.MathException: ", "Higham-Hall 5(4)", "org.apache.commons.math.ode.DerivativeException" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable24 = null;
        java.io.IOException iOException25 = new java.io.IOException("", throwable24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray21, (java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", objArray29);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray15, (java.lang.Throwable) iOException32);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("", objArray37, (java.lang.Throwable) derivativeException43);
        java.lang.Object[] objArray45 = mathException44.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15, (java.lang.Throwable) integratorException46);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException46);
        java.lang.String str50 = mathException49.getPattern();
        mathException7.addSuppressed((java.lang.Throwable) mathException49);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[10]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[10]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str50, "org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06910");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator15.getStepHandler();
        boolean boolean17 = stepHandler16.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        stepHandler16.handleStep(stepInterpolator18, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler16.handleStep(stepInterpolator21, false);
        stepHandler16.reset();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        java.lang.String str26 = highamHall54Integrator4.getName();
        double double27 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction((-0.0d));
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
    }

    @Test
    public void test06911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06911");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray15);
        java.lang.Throwable throwable24 = null;
        java.io.IOException iOException25 = new java.io.IOException("", throwable24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        java.lang.Throwable[] throwableArray28 = mathException26.getSuppressed();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray15);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException34);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test06912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06912");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 10, (double) (short) 0, 0.0d, (double) 3);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test06913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06913");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str13 = highamHall54Integrator4.getName();
        java.lang.String str14 = highamHall54Integrator4.getName();
        java.lang.String str15 = highamHall54Integrator4.getName();
        double double16 = highamHall54Integrator4.getSafety();
        double double17 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
    }

    @Test
    public void test06914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06914");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMinReduction();
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        double double16 = highamHall54Integrator4.getMinStep();
        java.lang.String str17 = highamHall54Integrator4.getName();
        int int18 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) (short) 1, 5.0d, (int) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertNull(stepHandler14);
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test06915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06915");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        highamHall54Integrator4.setSafety((double) 10.0f);
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        int int22 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator4.getStepHandler();
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int25 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
    }

    @Test
    public void test06916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06916");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        highamHall54Integrator4.setSafety((double) 10.0f);
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        double double22 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str23 = highamHall54Integrator4.getName();
        double double24 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler25);
    }

    @Test
    public void test06917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06917");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("");
        java.io.IOException iOException3 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) mathException2);
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException3);
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException4);
        java.lang.Object[] objArray6 = integratorException5.getArguments();
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException(throwable8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", throwable8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        integratorException5.addSuppressed((java.lang.Throwable) mathException12);
        java.lang.String str14 = integratorException5.toString();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str14, "org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
    }

    @Test
    public void test06918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06918");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        double double30 = highamHall54Integrator4.getCurrentStepStart();
        double double31 = highamHall54Integrator4.getSafety();
        double double32 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test06919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06919");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray8, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset(100.0d, doubleArray8);
        double[] doubleArray24 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler25.add(switchingFunction29, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler25.reset((double) '4', doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray24, doubleArray49);
        boolean boolean54 = switchingFunctionsHandler0.reset(0.0d, doubleArray24);
        double double55 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler0.evaluateStep(stepInterpolator56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test06920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06920");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray15 = derivativeException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray15);
        java.io.IOException iOException20 = new java.io.IOException("");
        java.io.IOException iOException21 = new java.io.IOException("hi!", (java.lang.Throwable) iOException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) iOException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) mathException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException27);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06921");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray15);
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray15, (java.lang.Throwable) iOException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray15);
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException(throwable28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException("org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Throwable) iOException29);
        java.lang.Throwable[] throwableArray32 = iOException29.getSuppressed();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) mathException33);
        java.io.IOException iOException35 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException: hi!", (java.lang.Throwable) iOException34);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test06922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06922");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) 0, (double) 1.0f, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
    }

    @Test
    public void test06923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06923");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) 10, (double) 1.0f, (int) '4');
        boolean boolean8 = switchingFunctionsHandler0.stop();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) (short) 10, (double) '#', (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        boolean boolean18 = switchingFunctionsHandler16.stop();
        double double19 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler16.add(switchingFunction20, 0.0d, (double) (short) 100, 1);
        double[] doubleArray31 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler32.evaluateStep(stepInterpolator33);
        double double35 = switchingFunctionsHandler32.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler32.add(switchingFunction36, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler46.evaluateStep(stepInterpolator49);
        double[] doubleArray56 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler46.stepAccepted((double) (byte) 1, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler32.reset((double) '4', doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray31, doubleArray56);
        boolean boolean61 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray56);
        boolean boolean62 = switchingFunctionsHandler0.reset((double) 0, doubleArray56);
        boolean boolean63 = switchingFunctionsHandler0.stop();
        boolean boolean64 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test06924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06924");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        boolean boolean39 = stepHandler36.requiresDenseOutput();
        stepHandler36.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        stepHandler36.handleStep(stepInterpolator41, false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06925");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, Double.NaN, 0.0d, (int) '4');
        boolean boolean11 = switchingFunctionsHandler0.stop();
        double double12 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray24 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray27 = null;
        double[] doubleArray34 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray27, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray24, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler37.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler41.evaluateStep(stepInterpolator44);
        double[] doubleArray51 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler41.stepAccepted((double) (byte) 1, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray24, doubleArray51);
        boolean boolean55 = switchingFunctionsHandler0.reset(0.4472135954999579d, doubleArray24);
        boolean boolean56 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test06926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06926");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = null;
        highamHall54Integrator22.setStepHandler(stepHandler23);
        double double25 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler26 = null;
        highamHall54Integrator22.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator22.getMaxStep();
        double double29 = highamHall54Integrator22.getMinStep();
        double double30 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator35.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator35.getStepHandler();
        boolean boolean40 = stepHandler39.requiresDenseOutput();
        highamHall54Integrator22.setStepHandler(stepHandler39);
        double double42 = highamHall54Integrator22.getSafety();
        java.lang.String str43 = highamHall54Integrator22.getName();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator22.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler44);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double53 = highamHall54Integrator52.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        highamHall54Integrator52.addSwitchingFunction(switchingFunction54, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double59 = highamHall54Integrator52.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        highamHall54Integrator52.addSwitchingFunction(switchingFunction60, (double) 0, 0.9d, (int) (short) 100);
        double double65 = highamHall54Integrator52.getMinReduction();
        double double66 = highamHall54Integrator52.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        highamHall54Integrator52.addSwitchingFunction(switchingFunction67, 31.622776601683793d, (double) 100L, 100);
        org.apache.commons.math.ode.StepHandler stepHandler72 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler72);
        java.lang.Class<?> wildcardClass74 = stepHandler72.getClass();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.9d + "'", double42 == 0.9d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2d + "'", double65 == 0.2d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test06927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06927");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        boolean boolean17 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06928");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        java.lang.String str15 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator20.setSafety((double) '4');
        highamHall54Integrator20.setMaxGrowth(0.0d);
        double double25 = highamHall54Integrator20.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize(100.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.2d + "'", double25 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test06929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06929");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        java.lang.String str28 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double34 = highamHall54Integrator33.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler35);
        java.lang.String str37 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator42.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator42.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler46.handleStep(stepInterpolator47, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        stepHandler46.handleStep(stepInterpolator50, false);
        highamHall54Integrator4.setStepHandler(stepHandler46);
        double double54 = highamHall54Integrator4.getMaxGrowth();
        int int55 = highamHall54Integrator4.getOrder();
        java.lang.String str56 = highamHall54Integrator4.getName();
        java.lang.String str57 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Higham-Hall 5(4)" + "'", str56, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
    }

    @Test
    public void test06930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06930");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction((double) (-1.0f));
        double double16 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction((-0.0d));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, 9.848857801796104d, 56.568542494923804d, 5);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertNull(stepHandler24);
    }

    @Test
    public void test06931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06931");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 1.0d, Double.NaN, 1);
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, 1.0d, (double) '4', 5);
        boolean boolean15 = switchingFunctionsHandler0.stop();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06932");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        java.lang.Object[] objArray25 = derivativeException24.getArguments();
        java.lang.String str26 = derivativeException24.toString();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str26, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test06933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06933");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06934");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getSafety();
        java.lang.String str27 = highamHall54Integrator4.getName();
        double double28 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator33.setMinReduction(10.0d);
        double double37 = highamHall54Integrator33.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        highamHall54Integrator33.addSwitchingFunction(switchingFunction38, (double) 1, 0.0d, (int) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler43);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        stepHandler43.handleStep(stepInterpolator45, true);
        boolean boolean48 = stepHandler43.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9d + "'", double26 == 0.9d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test06935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06935");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        java.lang.String str10 = highamHall54Integrator4.getName();
        int int11 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator16.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator16.getMaxStep();
        double double23 = highamHall54Integrator16.getMinStep();
        double double24 = highamHall54Integrator16.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        double double33 = highamHall54Integrator29.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        stepHandler39.handleStep(stepInterpolator41, true);
        highamHall54Integrator16.setStepHandler(stepHandler39);
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator16.getStepHandler();
        double double46 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator51.getStepHandler();
        double double53 = highamHall54Integrator51.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator51.getStepHandler();
        java.lang.String str55 = highamHall54Integrator51.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator60.getStepHandler();
        highamHall54Integrator60.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator60.getStepHandler();
        boolean boolean65 = stepHandler64.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        stepHandler64.handleStep(stepInterpolator66, true);
        highamHall54Integrator51.setStepHandler(stepHandler64);
        stepHandler64.reset();
        highamHall54Integrator16.setStepHandler(stepHandler64);
        org.apache.commons.math.ode.StepHandler stepHandler72 = highamHall54Integrator16.getStepHandler();
        double double73 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler79 = highamHall54Integrator78.getStepHandler();
        highamHall54Integrator78.setMinReduction(10.0d);
        int int82 = highamHall54Integrator78.getOrder();
        java.lang.String str83 = highamHall54Integrator78.getName();
        double double84 = highamHall54Integrator78.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        highamHall54Integrator78.addSwitchingFunction(switchingFunction85, (double) (byte) 10, (double) (short) -1, (int) '4');
        double double90 = highamHall54Integrator78.getMinReduction();
        double double91 = highamHall54Integrator78.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler92 = highamHall54Integrator78.getStepHandler();
        boolean boolean93 = stepHandler92.requiresDenseOutput();
        boolean boolean94 = stepHandler92.requiresDenseOutput();
        highamHall54Integrator16.setStepHandler(stepHandler92);
        highamHall54Integrator4.setStepHandler(stepHandler92);
        highamHall54Integrator4.setInitialStepSize(0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Higham-Hall 5(4)" + "'", str55, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(stepHandler79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 5 + "'", int82 == 5);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Higham-Hall 5(4)" + "'", str83, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 10.0d + "'", double90 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertNotNull(stepHandler92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test06936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06936");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) 10L);
        highamHall54Integrator12.setSafety((double) (short) -1);
        double double18 = highamHall54Integrator12.getMinStep();
        double double19 = highamHall54Integrator12.getCurrentStepStart();
        highamHall54Integrator12.setSafety(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator12.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        double double29 = highamHall54Integrator27.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator27.getStepHandler();
        java.lang.String str31 = highamHall54Integrator27.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator36.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator36.getStepHandler();
        boolean boolean41 = stepHandler40.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        stepHandler40.handleStep(stepInterpolator42, true);
        highamHall54Integrator27.setStepHandler(stepHandler40);
        java.lang.String str46 = highamHall54Integrator27.getName();
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler47);
        highamHall54Integrator4.setStepHandler(stepHandler47);
        boolean boolean50 = stepHandler47.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test06937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06937");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        java.lang.String str28 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double34 = highamHall54Integrator33.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler35);
        java.lang.String str37 = highamHall54Integrator4.getName();
        int int38 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
    }

    @Test
    public void test06938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06938");
        double[] doubleArray5 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        double double9 = switchingFunctionsHandler6.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler6.add(switchingFunction10, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler20.evaluateStep(stepInterpolator23);
        double[] doubleArray30 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler20.stepAccepted((double) (byte) 1, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray30);
        boolean boolean33 = switchingFunctionsHandler6.reset((double) '4', doubleArray30);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray5, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        highamHall54Integrator34.addSwitchingFunction(switchingFunction35, 0.4472135954999579d, 10.198039027185569d, 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test06939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06939");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) 0, (double) 1L, (int) '4');
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator18.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator18.getMaxStep();
        double double25 = highamHall54Integrator18.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator18.setStepHandler(stepHandler31);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator18.addSwitchingFunction(switchingFunction33, (double) '4', 1.0d, (int) (short) -1);
        double double38 = highamHall54Integrator18.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator43.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler47 = null;
        highamHall54Integrator43.setStepHandler(stepHandler47);
        double double49 = highamHall54Integrator43.getMaxStep();
        double double50 = highamHall54Integrator43.getMinStep();
        double double51 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator56.getStepHandler();
        highamHall54Integrator56.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator56.getStepHandler();
        boolean boolean61 = stepHandler60.requiresDenseOutput();
        highamHall54Integrator43.setStepHandler(stepHandler60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler60.handleStep(stepInterpolator63, true);
        highamHall54Integrator18.setStepHandler(stepHandler60);
        stepHandler60.reset();
        boolean boolean68 = stepHandler60.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler60);
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator4.getStepHandler();
        double double71 = highamHall54Integrator4.getMinStep();
        java.lang.String str72 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 31.144823004794873d + "'", double13 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 10.0d + "'", double71 == 10.0d);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Higham-Hall 5(4)" + "'", str72, "Higham-Hall 5(4)");
    }

    @Test
    public void test06940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06940");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray8, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset(100.0d, doubleArray8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler19.evaluateStep(stepInterpolator22);
        double[] doubleArray27 = null;
        double[] doubleArray34 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray27, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler19.reset(100.0d, doubleArray27);
        double[] doubleArray43 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler44.evaluateStep(stepInterpolator45);
        double double47 = switchingFunctionsHandler44.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler44.add(switchingFunction48, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler54.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler58.evaluateStep(stepInterpolator59);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler58.evaluateStep(stepInterpolator61);
        double[] doubleArray68 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler58.stepAccepted((double) (byte) 1, doubleArray68);
        boolean boolean70 = switchingFunctionsHandler54.reset((double) (byte) 1, doubleArray68);
        boolean boolean71 = switchingFunctionsHandler44.reset((double) '4', doubleArray68);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray43, doubleArray68);
        boolean boolean73 = switchingFunctionsHandler19.reset(0.0d, doubleArray43);
        switchingFunctionsHandler0.stepAccepted((double) 100L, doubleArray43);
        double double75 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
    }

    @Test
    public void test06941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06941");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator16.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator16.getMaxStep();
        double double23 = highamHall54Integrator16.getMinStep();
        double double24 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator29.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        boolean boolean34 = stepHandler33.requiresDenseOutput();
        highamHall54Integrator16.setStepHandler(stepHandler33);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        stepHandler33.handleStep(stepInterpolator36, true);
        stepHandler33.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        stepHandler33.handleStep(stepInterpolator40, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        stepHandler33.handleStep(stepInterpolator43, false);
        highamHall54Integrator4.setStepHandler(stepHandler33);
        double double47 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test06942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06942");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        java.lang.String str15 = highamHall54Integrator4.getName();
        int int16 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, (double) (-1L), (double) (byte) 1, (int) (byte) -1);
        double double22 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test06943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06943");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, 0.0d, (double) 1L, 3);
        double double22 = switchingFunctionsHandler0.getEventTime();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06944");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        java.lang.String str21 = highamHall54Integrator4.getName();
        java.lang.String str22 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) '#');
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (short) -1);
        double double28 = highamHall54Integrator4.getCurrentStepStart();
        int int29 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(9.848857801796104d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction32, 0.0d, (double) '#', (int) (byte) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
    }

    @Test
    public void test06945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06945");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) 0, 0.9d, 0.0d);
        double double5 = highamHall54Integrator4.getMaxStep();
        double double6 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety((double) (-1));
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler11);
    }

    @Test
    public void test06946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06946");
        double[] doubleArray2 = null;
        double[] doubleArray5 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean7 = switchingFunctionsHandler6.isEmpty();
        boolean boolean8 = switchingFunctionsHandler6.stop();
        double double9 = switchingFunctionsHandler6.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler6.add(switchingFunction10, 0.0d, (double) (short) 100, 1);
        double[] doubleArray21 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        double double25 = switchingFunctionsHandler22.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler22.add(switchingFunction26, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler32.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler36.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler36.evaluateStep(stepInterpolator39);
        double[] doubleArray46 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler36.stepAccepted((double) (byte) 1, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler22.reset((double) '4', doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray21, doubleArray46);
        boolean boolean51 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 31.144823004794873d, doubleArray5, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 3.1622776601683795d, doubleArray2, doubleArray46);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test06947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06947");
        java.lang.Object[] objArray5 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable8 = null;
        java.io.IOException iOException9 = new java.io.IOException("", throwable8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", objArray5, (java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray13);
        java.io.IOException iOException15 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) integratorException14);
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        java.lang.Object[] objArray24 = mathException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("", objArray24);
        integratorException14.addSuppressed((java.lang.Throwable) integratorException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) integratorException14);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[10]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[10]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test06948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06948");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        highamHall54Integrator4.setInitialStepSize((double) (byte) 10);
        double double30 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test06949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06949");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMinReduction();
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '4');
        highamHall54Integrator4.setInitialStepSize((double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) 0.0f, (double) (byte) 10, (int) '#');
        double double21 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction((double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNull(stepHandler24);
    }

    @Test
    public void test06950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06950");
        java.lang.String[] strArray10 = new java.lang.String[] { "org.apache.commons.math.MathException: ", "org.apache.commons.math.MathException: ", "Higham-Hall 5(4)", "org.apache.commons.math.ode.DerivativeException" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test06951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06951");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        boolean boolean15 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double18 = switchingFunctionsHandler17.getEventTime();
        boolean boolean19 = switchingFunctionsHandler17.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler17.add(switchingFunction20, 0.0d, 0.0d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler17.add(switchingFunction25, (double) (byte) 100, (double) 5, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler17.add(switchingFunction30, 0.9d, (double) 2, 2);
        double[] doubleArray48 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray51 = null;
        double[] doubleArray58 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray51, doubleArray58);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray48, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = switchingFunctionsHandler65.evaluateStep(stepInterpolator66);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = switchingFunctionsHandler65.evaluateStep(stepInterpolator68);
        double[] doubleArray75 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler65.stepAccepted((double) (byte) 1, doubleArray75);
        boolean boolean77 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray75);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray48, doubleArray75);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        boolean boolean81 = switchingFunctionsHandler79.evaluateStep(stepInterpolator80);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler83 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        boolean boolean85 = switchingFunctionsHandler83.evaluateStep(stepInterpolator84);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator86 = null;
        boolean boolean87 = switchingFunctionsHandler83.evaluateStep(stepInterpolator86);
        double[] doubleArray93 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler83.stepAccepted((double) (byte) 1, doubleArray93);
        boolean boolean95 = switchingFunctionsHandler79.reset((double) (byte) 1, doubleArray93);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator96 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray75, doubleArray93);
        boolean boolean97 = switchingFunctionsHandler17.reset((double) 0, doubleArray75);
        switchingFunctionsHandler0.stepAccepted(0.4472135954999579d, doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test06952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06952");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        double double12 = highamHall54Integrator4.getSafety();
        java.lang.String str13 = highamHall54Integrator4.getName();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        int int15 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 10);
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test06953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06953");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        java.lang.String str39 = highamHall54Integrator4.getName();
        java.lang.String str40 = highamHall54Integrator4.getName();
        double double41 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
    }

    @Test
    public void test06954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06954");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        java.lang.String str27 = derivativeException26.getPattern();
        java.io.IOException iOException28 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) derivativeException26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException28);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str27, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test06955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06955");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) -1, (double) 2, 100.0d);
        highamHall54Integrator4.setSafety((double) 100.0f);
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) 10.0f, 0.9d, 5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
    }

    @Test
    public void test06956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06956");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator18.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator18.getMaxStep();
        double double25 = highamHall54Integrator18.getMinStep();
        double double26 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator31.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator31.getStepHandler();
        boolean boolean36 = stepHandler35.requiresDenseOutput();
        highamHall54Integrator18.setStepHandler(stepHandler35);
        java.lang.String str38 = highamHall54Integrator18.getName();
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction42, 0.0d, 0.9d, (int) (byte) 100);
        java.lang.String str47 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
    }

    @Test
    public void test06957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06957");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str12 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
    }

    @Test
    public void test06958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06958");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException18);
        java.lang.Throwable[] throwableArray21 = mathException20.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException24);
        java.lang.Class<?> wildcardClass26 = integratorException25.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test06959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06959");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException3);
        java.lang.Object[] objArray5 = derivativeException4.getArguments();
        java.lang.Throwable throwable12 = null;
        java.io.IOException iOException13 = new java.io.IOException("", throwable12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray16);
        java.io.IOException iOException19 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException", objArray5, (java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException21);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test06960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06960");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str15 = highamHall54Integrator4.getName();
        double double16 = highamHall54Integrator4.getMaxStep();
        double double17 = highamHall54Integrator4.getCurrentStepStart();
        double double18 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test06961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06961");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        double double8 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety((double) 2);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator15.addSwitchingFunction(switchingFunction16, (double) '#', (double) 100, (int) '#');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double26 = highamHall54Integrator25.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator15.setStepHandler(stepHandler27);
        highamHall54Integrator4.setStepHandler(stepHandler27);
        double double30 = highamHall54Integrator4.getMaxStep();
        java.lang.String str31 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
    }

    @Test
    public void test06962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06962");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) (byte) 100, 10.0d, 2);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler18.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler22.evaluateStep(stepInterpolator25);
        double[] doubleArray32 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler22.stepAccepted((double) (byte) 1, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler18.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray40 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        double double44 = switchingFunctionsHandler41.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler41.add(switchingFunction45, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler51.evaluateStep(stepInterpolator52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler55.evaluateStep(stepInterpolator58);
        double[] doubleArray65 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler55.stepAccepted((double) (byte) 1, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray65);
        boolean boolean68 = switchingFunctionsHandler41.reset((double) '4', doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray40, doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 1, doubleArray32, doubleArray40);
        boolean boolean71 = switchingFunctionsHandler0.reset((double) 100, doubleArray40);
        double double72 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        switchingFunctionsHandler0.add(switchingFunction73, 55.3841974787333d, 9.848857801796104d, 2);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
    }

    @Test
    public void test06963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06963");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator4.getStepHandler();
        boolean boolean30 = stepHandler29.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06964");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, 2.0d, 97.0d, (int) (byte) 1);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler14);
    }

    @Test
    public void test06965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06965");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray13);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException("hi!", (java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13, (java.lang.Throwable) iOException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str25 = mathException24.getPattern();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        java.lang.Throwable[] throwableArray27 = mathException26.getSuppressed();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray13, (java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Throwable) mathException28);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) mathException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException30);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test06966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06966");
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException("", throwable10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        java.lang.Object[] objArray16 = mathException14.getArguments();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) integratorException19);
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.Throwable[] throwableArray29 = mathException28.getSuppressed();
        java.lang.String str30 = mathException28.getPattern();
        java.lang.String str31 = mathException28.getPattern();
        mathException21.addSuppressed((java.lang.Throwable) mathException28);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException21);
        java.lang.Throwable[] throwableArray34 = mathException21.getSuppressed();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException", (java.lang.Object[]) throwableArray34);
        java.io.IOException iOException36 = new java.io.IOException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Throwable) mathException35);
        java.lang.String str37 = mathException35.getPattern();
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException" + "'", str37, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException");
    }

    @Test
    public void test06967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06967");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 1.0f, (double) (short) 10, (double) (byte) 10);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        java.lang.String str7 = highamHall54Integrator4.getName();
        double double8 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test06968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06968");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator21.setInitialStepSize((double) 3);
        double double25 = highamHall54Integrator21.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator30.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator38.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler42 = null;
        highamHall54Integrator38.setStepHandler(stepHandler42);
        double double44 = highamHall54Integrator38.getMaxStep();
        double double45 = highamHall54Integrator38.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator50.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler58 = null;
        highamHall54Integrator57.setStepHandler(stepHandler58);
        double double60 = highamHall54Integrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler61 = null;
        highamHall54Integrator57.setStepHandler(stepHandler61);
        double double63 = highamHall54Integrator57.getMaxStep();
        double double64 = highamHall54Integrator57.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator69.getStepHandler();
        highamHall54Integrator57.setStepHandler(stepHandler70);
        highamHall54Integrator38.setStepHandler(stepHandler70);
        highamHall54Integrator30.setStepHandler(stepHandler70);
        highamHall54Integrator21.setStepHandler(stepHandler70);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        stepHandler70.handleStep(stepInterpolator75, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        stepHandler70.handleStep(stepInterpolator78, false);
        highamHall54Integrator4.setStepHandler(stepHandler70);
        int int82 = highamHall54Integrator4.getOrder();
        double double83 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler84 = highamHall54Integrator4.getStepHandler();
        int int85 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1.0d) + "'", double44 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 5 + "'", int82 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
    }

    @Test
    public void test06969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06969");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        boolean boolean15 = stepHandler14.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        stepHandler14.handleStep(stepInterpolator16, false);
        highamHall54Integrator4.setStepHandler(stepHandler14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, (double) (short) 100, (double) 0.0f, (int) '#');
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMaxGrowth();
        double double27 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMaxGrowth(7.211102550927978d);
        int int30 = highamHall54Integrator4.getOrder();
        double double31 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
    }

    @Test
    public void test06970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06970");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        highamHall54Integrator4.setMaxGrowth((double) (-1));
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 1.0f);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler15);
    }

    @Test
    public void test06971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06971");
        java.lang.Object[] objArray1 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException12);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) mathException13);
        java.lang.Throwable throwable19 = null;
        java.io.IOException iOException20 = new java.io.IOException("", throwable19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException24);
        iOException14.addSuppressed((java.lang.Throwable) mathException24);
        java.lang.Throwable[] throwableArray27 = iOException14.getSuppressed();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Object[]) throwableArray27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray1, (java.lang.Throwable) mathException28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test06972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06972");
        double[] doubleArray5 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        double double9 = switchingFunctionsHandler6.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler6.add(switchingFunction10, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler20.evaluateStep(stepInterpolator23);
        double[] doubleArray30 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler20.stepAccepted((double) (byte) 1, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray30);
        boolean boolean33 = switchingFunctionsHandler6.reset((double) '4', doubleArray30);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray5, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        highamHall54Integrator34.addSwitchingFunction(switchingFunction35, 0.0d, (double) 0L, (int) (short) 10);
        double double40 = highamHall54Integrator34.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        highamHall54Integrator34.addSwitchingFunction(switchingFunction41, 97.0d, 0.4472135954999579d, 100);
        double double46 = highamHall54Integrator34.getCurrentStepStart();
        double double47 = highamHall54Integrator34.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.9d + "'", double40 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test06973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06973");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator43.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler47 = null;
        highamHall54Integrator43.setStepHandler(stepHandler47);
        double double49 = highamHall54Integrator43.getMaxStep();
        double double50 = highamHall54Integrator43.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler56);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        highamHall54Integrator43.addSwitchingFunction(switchingFunction58, (double) '4', 1.0d, (int) (short) -1);
        double double63 = highamHall54Integrator43.getMaxStep();
        double double64 = highamHall54Integrator43.getSafety();
        double double65 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator43.getStepHandler();
        boolean boolean67 = stepHandler66.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler66);
        double double69 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double70 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.9d + "'", double64 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test06974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06974");
        java.lang.Object[] objArray4 = new java.lang.Object[] { 10L };
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("", objArray4, (java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException10.getSuppressed();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray12);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[10]");
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test06975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06975");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator21.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator21.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler25 = null;
        highamHall54Integrator21.setStepHandler(stepHandler25);
        double double27 = highamHall54Integrator21.getMaxStep();
        double double28 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator21.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler41 = null;
        highamHall54Integrator40.setStepHandler(stepHandler41);
        double double43 = highamHall54Integrator40.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator40.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator40.getMaxStep();
        double double47 = highamHall54Integrator40.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator40.setStepHandler(stepHandler53);
        highamHall54Integrator21.setStepHandler(stepHandler53);
        highamHall54Integrator13.setStepHandler(stepHandler53);
        highamHall54Integrator4.setStepHandler(stepHandler53);
        double double58 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction59, (double) 10.0f, (double) '4', 0);
        highamHall54Integrator4.setMinReduction(9.924141172814958d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
    }

    @Test
    public void test06976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06976");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: Higham-Hall 5(4)", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException: hi!", (java.lang.Object[]) strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test06977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06977");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (short) 10, 35.0d, (double) 'a');
        int int5 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test06978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06978");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double39 = highamHall54Integrator4.getCurrentStepStart();
        int int40 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
    }

    @Test
    public void test06979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06979");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray16);
        java.lang.Throwable throwable22 = null;
        java.io.IOException iOException23 = new java.io.IOException("", throwable22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray16, (java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: java.io.IOException", strArray16);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException32);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test06980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06980");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str6 = mathException5.getPattern();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        java.lang.Throwable[] throwableArray8 = mathException7.getSuppressed();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray8);
        java.lang.Throwable[] throwableArray11 = mathException10.getSuppressed();
        java.lang.Throwable[] throwableArray12 = mathException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException: ", (java.lang.Object[]) throwableArray12);
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) derivativeException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) mathException23);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test06981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06981");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        java.lang.String str15 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator20.setSafety((double) '4');
        highamHall54Integrator20.setMaxGrowth(0.0d);
        double double25 = highamHall54Integrator20.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction29, (double) 100.0f, 1.4142135623730951d, (int) '#');
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.2d + "'", double25 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
    }

    @Test
    public void test06982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06982");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        double double12 = highamHall54Integrator4.getMaxStep();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setInitialStepSize(1.4142135623730951d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test06983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06983");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray12);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException("hi!", (java.lang.Throwable) iOException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray12, (java.lang.Throwable) iOException19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException22);
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("", throwable28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException32);
        java.lang.String str35 = mathException32.getPattern();
        java.lang.Object[] objArray36 = mathException32.getArguments();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException32);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException37);
        integratorException22.addSuppressed((java.lang.Throwable) integratorException39);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str35, "org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test06984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06984");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray8, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset(100.0d, doubleArray8);
        double[] doubleArray24 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler25.add(switchingFunction29, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler25.reset((double) '4', doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray24, doubleArray49);
        boolean boolean54 = switchingFunctionsHandler0.reset(0.0d, doubleArray24);
        boolean boolean55 = switchingFunctionsHandler0.isEmpty();
        boolean boolean56 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        boolean boolean59 = switchingFunctionsHandler0.stop();
        double double60 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray62 = null;
        boolean boolean63 = switchingFunctionsHandler0.reset(2.514866859365871d, doubleArray62);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test06985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06985");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        java.lang.String str13 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
    }

    @Test
    public void test06986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06986");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        double double17 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator4.getStepHandler();
        int int19 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
    }

    @Test
    public void test06987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06987");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.Throwable throwable11 = null;
        java.io.IOException iOException12 = new java.io.IOException("", throwable11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException13);
        derivativeException8.addSuppressed((java.lang.Throwable) mathException15);
        java.lang.Object[] objArray17 = derivativeException8.getArguments();
        java.lang.Throwable[] throwableArray18 = derivativeException8.getSuppressed();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("Higham-Hall 5(4)");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) mathException21);
        java.lang.String str23 = mathException21.getPattern();
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
    }

    @Test
    public void test06988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06988");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray13);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException("hi!", (java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13, (java.lang.Throwable) iOException20);
        java.lang.Throwable[] throwableArray22 = iOException20.getSuppressed();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray22);
        java.io.IOException iOException24 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) mathException23);
        java.io.IOException iOException25 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) mathException23);
        java.io.IOException iOException30 = new java.io.IOException("");
        java.io.IOException iOException31 = new java.io.IOException("hi!", (java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException32);
        java.lang.Throwable throwable38 = null;
        java.io.IOException iOException39 = new java.io.IOException("", throwable38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException42);
        java.lang.String str45 = mathException42.getPattern();
        java.lang.Object[] objArray46 = mathException42.getArguments();
        mathException33.addSuppressed((java.lang.Throwable) mathException42);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) mathException42);
        iOException25.addSuppressed((java.lang.Throwable) mathException42);
        java.lang.String str50 = mathException42.getPattern();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str45, "org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str50, "org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06989");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        java.lang.String str19 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        highamHall54Integrator4.setInitialStepSize((double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator4.getStepHandler();
        java.lang.String str26 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
    }

    @Test
    public void test06990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06990");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test06991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06991");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        int int25 = highamHall54Integrator4.getOrder();
        java.lang.String str26 = highamHall54Integrator4.getName();
        double double27 = highamHall54Integrator4.getMaxStep();
        java.lang.String str28 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
    }

    @Test
    public void test06992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06992");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException5);
        java.lang.Throwable[] throwableArray7 = mathException5.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException5);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException9);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test06993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06993");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray15);
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException25);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) mathException27);
        java.io.IOException iOException29 = new java.io.IOException("hi!", (java.lang.Throwable) iOException28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) iOException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("java.io.IOException", (java.lang.Object[]) strArray15, (java.lang.Throwable) integratorException30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray15);
        java.io.IOException iOException38 = new java.io.IOException("");
        java.io.IOException iOException39 = new java.io.IOException("hi!", (java.lang.Throwable) iOException38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException38);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException40);
        java.io.IOException iOException45 = new java.io.IOException("");
        java.io.IOException iOException46 = new java.io.IOException("hi!", (java.lang.Throwable) iOException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException45);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException47);
        java.lang.Object[] objArray49 = integratorException48.getArguments();
        mathException40.addSuppressed((java.lang.Throwable) integratorException48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException48);
        java.lang.Object[] objArray52 = mathException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", objArray52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray15, (java.lang.Throwable) integratorException53);
        java.lang.Object[] objArray55 = mathException54.getArguments();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException54);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!, hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test06994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06994");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", throwable1);
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException(throwable1);
    }

    @Test
    public void test06995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06995");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("");
        java.io.IOException iOException4 = new java.io.IOException("Higham-Hall 5(4)", (java.lang.Throwable) mathException3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException4);
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException5);
        java.lang.Object[] objArray7 = integratorException6.getArguments();
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException(throwable9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", throwable9);
        java.lang.Object[] objArray12 = mathException11.getArguments();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException11);
        integratorException6.addSuppressed((java.lang.Throwable) mathException13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) mathException13);
        java.io.IOException iOException16 = new java.io.IOException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", (java.lang.Throwable) iOException15);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test06996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06996");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray10 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler0.stepAccepted((double) (byte) 1, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler19.add(switchingFunction23, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler33.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler33.evaluateStep(stepInterpolator36);
        double[] doubleArray43 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler33.stepAccepted((double) (byte) 1, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler19.reset((double) '4', doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray18, doubleArray43);
        boolean boolean48 = switchingFunctionsHandler0.reset((double) (byte) 0, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler0.add(switchingFunction49, 2.514866859365871d, 9.486832980505138d, 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        boolean boolean58 = switchingFunctionsHandler55.stop();
        double[] doubleArray65 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler66.evaluateStep(stepInterpolator67);
        double double69 = switchingFunctionsHandler66.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler66.add(switchingFunction70, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler76 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        boolean boolean78 = switchingFunctionsHandler76.evaluateStep(stepInterpolator77);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        boolean boolean82 = switchingFunctionsHandler80.evaluateStep(stepInterpolator81);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator83 = null;
        boolean boolean84 = switchingFunctionsHandler80.evaluateStep(stepInterpolator83);
        double[] doubleArray90 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler80.stepAccepted((double) (byte) 1, doubleArray90);
        boolean boolean92 = switchingFunctionsHandler76.reset((double) (byte) 1, doubleArray90);
        boolean boolean93 = switchingFunctionsHandler66.reset((double) '4', doubleArray90);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray65, doubleArray90);
        switchingFunctionsHandler55.stepAccepted(1.0d, doubleArray65);
        boolean boolean96 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test06997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06997");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException("hi!", (java.lang.Throwable) iOException3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException3);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: hi!");
        mathException5.addSuppressed((java.lang.Throwable) mathException7);
        java.lang.String str9 = mathException7.getPattern();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: hi!" + "'", str9, "java.io.IOException: java.io.IOException: java.io.IOException: hi!");
    }

    @Test
    public void test06998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06998");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        int int15 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) 10);
        java.lang.String str18 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) (short) 1, 5.0d, (int) 'a');
        double[] doubleArray36 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray39 = null;
        double[] doubleArray46 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray39, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray36, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler49.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler53.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler53.evaluateStep(stepInterpolator56);
        double[] doubleArray63 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler53.stepAccepted((double) (byte) 1, doubleArray63);
        boolean boolean65 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray36, doubleArray63);
        double[] doubleArray67 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator(3.1622776601683795d, 0.2d, doubleArray63, doubleArray67);
        org.apache.commons.math.ode.StepHandler stepHandler69 = highamHall54Integrator68.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler69);
        stepHandler69.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(stepHandler69);
    }

    @Test
    public void test06999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06999");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, 3.0d, 31.622776601683793d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
    }

    @Test
    public void test07000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test07000");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setSafety(97.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        highamHall54Integrator36.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator36.getCurrentSignedStepsize();
        double double40 = highamHall54Integrator36.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler46.handleStep(stepInterpolator48, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        stepHandler46.handleStep(stepInterpolator51, false);
        boolean boolean54 = stepHandler46.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler46.handleStep(stepInterpolator56, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        stepHandler46.handleStep(stepInterpolator59, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler46.handleStep(stepInterpolator62, true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }
}

