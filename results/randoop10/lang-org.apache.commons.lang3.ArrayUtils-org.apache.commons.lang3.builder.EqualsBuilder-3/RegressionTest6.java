import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray27);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray27, (double) 2);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, (int) (short) 10, (-1));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        java.lang.Object[] objArray0 = null;
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7, (byte) 1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 1);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 1);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray22, (int) (byte) 0, (int) (byte) 1);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray9, byteArray25);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray9, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray0, (java.lang.Object) byteArray9, (int) (byte) 1);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.add(shortArray1, (short) (byte) 0);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) 1);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(byteArray13, (byte) 100);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(byteArray13, (byte) 1);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray13);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray18, (java.lang.Object) (byte) -1, (int) (byte) 10);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray18, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray23, (byte) 1);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.clone(byteArray23);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray23, (byte) 0);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray29, (byte) -1);
        java.util.Collection<java.lang.String> strCollection32 = null;
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray1, (java.lang.Object) byteArray29, strCollection32);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray29, (byte) 1, 9);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, -1, -1, 100, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, -1, 100, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray17);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray18, intArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray19, (int) (byte) 0);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray19);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray24, (int) (byte) 1);
        int[] intArray27 = new int[] {};
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray27, intArray28);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.addAll(intArray24, intArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder10.append(intArray23, intArray27);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, (int) (short) -1);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray34, (int) '4', 2);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.add(intArray34, (int) '#');
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.addAll(intArray33, intArray34);
        java.lang.Short[] shortArray41 = null;
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray41);
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) (byte) -1);
        java.lang.String str47 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray42, "hi!");
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray54);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray55, intArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray42, (java.lang.Object) intArray55, 3);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder9.append(intArray40, intArray55);
        equalsBuilder61.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder61);
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray9, ' ', 2);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, 0, (int) (byte) 10);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.add(charArray16, ' ');
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray18, ' ', (int) (byte) 1);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray18, '4');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray18);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a, a,  ]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a,  ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 0);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray50, (short) -1);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray52, (short) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(shortArray38, shortArray55);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(shortArray60, (short) 10);
        java.lang.Short[] shortArray64 = new java.lang.Short[] {};
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) 1);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.clone(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.add(shortArray68, (short) -1);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray68);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray68, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder56.append(shortArray60, shortArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((int) (byte) 1, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append(0.0d, (double) 10);
        boolean boolean84 = equalsBuilder83.isEquals();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100L, 2, (double) (short) -1);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100.0f, (int) (short) 100);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray7, (double) 10.0f);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray7, (double) 100L, 9);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray7, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 10.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray6 = new java.lang.Character[][] { charArray5 };
        java.lang.Character[][] charArray7 = org.apache.commons.lang3.ArrayUtils.toArray(charArray6);
        java.util.Map<java.lang.Object, java.lang.Object> objMap8 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray6);
        java.lang.Character[][] charArray9 = org.apache.commons.lang3.ArrayUtils.toArray(charArray6);
        java.util.Map<java.lang.Object, java.lang.Object> objMap10 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray6);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertNotNull(objMap8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(objMap10);
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(shortArray4, (short) (byte) 1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray4, (short) 10);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray13, (java.lang.Object) (byte) -1, (int) (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray18, 3, (int) (short) -1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray22, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        long[] longArray52 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray54);
        long[] longArray57 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder28.append(longArray54, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((byte) 1, (byte) 1);
        short[] shortArray67 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray67, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray71 = new java.lang.Short[] {};
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray71);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray71, (short) 1);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray67, shortArray74);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray67, (short) 0, 0);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.add(shortArray67, (int) (byte) 0, (short) 0);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray81, (short) (byte) 1, (int) (short) 0);
        java.lang.Short[] shortArray85 = new java.lang.Short[] {};
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85, (short) 1);
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.clone(shortArray88);
        short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.add(shortArray89, (short) -1);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray89);
        short[] shortArray94 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray89, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder61.append(shortArray81, shortArray89);
        short[] shortArray97 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray89, (short) 100);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 4 + "'", int84 == 4);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[]");
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(shortArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray94), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(shortArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray97), "[]");
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        long[] longArray0 = null;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.add(longArray0, 0L);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[0]");
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        char[] charArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, ' ', 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.remove(byteArray17, 3);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray28, (byte) 1);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(byteArray30, (byte) 100);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(byteArray30, (byte) 1);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray41, (byte) 1);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray43, (int) (byte) 0, (int) (byte) 1);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray30, byteArray46);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray30, (byte) 10);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray30, (byte) -1);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray17, byteArray51);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 0, -1, -1, 100, 0, 0, 0, 0, 100, -1, -1, 0, 10]");
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray8 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8, (long) (short) 10);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray0, (java.lang.Object) longArray11, (int) (byte) 100);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 1, 100, 100, 0, 0]");
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, 2);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray22);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) (byte) 10);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.clone(intArray29);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.util.Iterator<java.lang.String> strItor34 = strList31.iterator();
        boolean boolean35 = strList9.containsAll((java.util.Collection<java.lang.String>) strList31);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList9.removeAll((java.util.Collection<java.lang.String>) strList41);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY;
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 100, 10);
        boolean boolean49 = strList9.equals((java.lang.Object) 10);
        strList9.clear();
        float[] floatArray56 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 1);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.add(floatArray56, (float) 10);
        float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.add(floatArray61, (float) (-1));
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray63, (float) 10);
        boolean boolean66 = strList9.contains((java.lang.Object) int65);
        java.util.stream.Stream<java.lang.String> strStream67 = strList9.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strStream67);
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray24, (long) 1, 5);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.subarray(longArray24, (int) (short) -1, (int) (byte) 1);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.add(longArray32, (long) 10);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray32);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.subarray(longArray32, 6, (-1));
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[]");
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, (int) 'a', (-1));
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.toObject(charArray0);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(charArray9, '#');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, 'a');
        java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray17);
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        java.lang.String str30 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray24);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray17, charArray24);
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray17, 4, (int) '#');
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray17);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray17);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{4,#,a,4,#}" + "'", str30, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(floatArray8, (float) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.remove(floatArray8, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray4, doubleArray9, doubleArray14, doubleArray19 };
        java.lang.Double[][] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray21);
        java.util.Map<java.lang.Object, java.lang.Object> objMap23 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray21);
        boolean[] booleanArray29 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray29, (int) (byte) 0, 0);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray29, 4, (int) '4');
        java.lang.Boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        java.lang.Double[][] doubleArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray21, (java.lang.Object) booleanArray29);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray29);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray38);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray38, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objMap23);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true, false, true, true, true]");
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        java.lang.Short[] shortArray8 = new java.lang.Short[] {};
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray11, 1, (int) (byte) 100);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.add(shortArray15, (short) (byte) 10);
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray18);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray18);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.clone(shortArray20);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray20, (short) -1);
        java.lang.Short[] shortArray24 = new java.lang.Short[] {};
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) 1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray27);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray27, (short) (byte) 10, (int) (short) -1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(shortArray27, (short) 10);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray20, shortArray27);
        java.lang.Short[] shortArray37 = null;
        java.lang.Short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray37);
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray38);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38, (short) (byte) -1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38, (short) (byte) 0);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.add(shortArray43, (short) 10);
        java.lang.Short[] shortArray46 = new java.lang.Short[] {};
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46, (short) 1);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46, (short) 0);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray51, (short) -1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.add(shortArray53, (short) 1);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray45, shortArray53);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray20, shortArray53);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray15, shortArray57);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.clone(shortArray15);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray59, (short) 100, (int) '#');
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[10]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[10]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[10]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray40);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) '#', (double) (byte) 1);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) (byte) 1, (int) (short) 10, (double) (byte) -1);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, 0.0d, (double) '#');
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray40, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        java.lang.Float[] floatArray6 = new java.lang.Float[] { 100.0f, (-1.0f), 10.0f, 100.0f, (-1.0f), 100.0f };
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray6);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray6);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[100.0, -1.0, 10.0, 100.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[100.0, -1.0, 10.0, 100.0, -1.0, 100.0]");
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(byteArray24, (byte) 10);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) 1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(byteArray24, (byte) 10);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        java.lang.String[] strArray45 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray54 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.remove(floatArray54, (int) (short) 1);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray48, floatArray57);
        boolean boolean59 = strList46.equals((java.lang.Object) floatArray58);
        int int60 = strList46.size();
        boolean boolean61 = strList3.removeAll((java.util.Collection<java.lang.String>) strList46);
        java.lang.Object[] objArray62 = strList46.toArray();
        java.lang.String[] strArray64 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.lang.String[] strArray69 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.stream.Stream<java.lang.String> strStream72 = strList70.parallelStream();
        java.lang.String[] strArray75 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.stream.Stream<java.lang.String> strStream78 = strList76.parallelStream();
        boolean boolean79 = strList70.addAll((java.util.Collection<java.lang.String>) strList76);
        java.lang.Object obj80 = null;
        boolean boolean81 = strList76.equals(obj80);
        int int82 = strList76.size();
        boolean boolean83 = strList65.removeAll((java.util.Collection<java.lang.String>) strList76);
        java.lang.String[] strArray86 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.stream.Stream<java.lang.String> strStream89 = strList87.parallelStream();
        boolean boolean90 = strList76.addAll((java.util.Collection<java.lang.String>) strList87);
        boolean boolean91 = strList76.isEmpty();
        int int92 = strList76.size();
        boolean boolean94 = strList76.add("1");
        boolean boolean95 = strList46.containsAll((java.util.Collection<java.lang.String>) strList76);
        strList76.clear();
        java.lang.String str97 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strList76);
        int int98 = strList76.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 4 + "'", int92 == 4);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[]" + "'", str97, "[]");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        short[] shortArray6 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) (byte) 0, (int) (short) -1);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray6);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[100, 10, 0, -1, 100, 10]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(shortArray10);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray6);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray16, (java.lang.Object) intArray23);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray28, (byte) 10);
        java.lang.String[] strArray34 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean9, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList35);
        strList35.clear();
        java.lang.Object[] objArray39 = strList35.toArray();
        java.util.Iterator<java.lang.String> strItor40 = strList35.iterator();
        java.util.Iterator<java.lang.String> strItor41 = strList35.iterator();
        boolean[] booleanArray48 = new boolean[] { false, false, false, true, false, false };
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray48, true);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray48, true);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray48, (int) (short) 1, 1);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray48, true);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray48);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray59, false);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray61);
        boolean boolean63 = strList35.contains((java.lang.Object) boolean62);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray7 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray11 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray15 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray19 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[][] floatArray20 = new java.lang.Float[][] { floatArray3, floatArray7, floatArray11, floatArray15, floatArray19 };
        java.lang.Float[] floatArray21 = new java.lang.Float[] {};
        java.lang.Float[] floatArray22 = new java.lang.Float[] {};
        java.lang.Float[] floatArray23 = new java.lang.Float[] {};
        java.lang.Float[] floatArray24 = new java.lang.Float[] {};
        java.lang.Float[] floatArray25 = new java.lang.Float[] {};
        java.lang.Float[] floatArray26 = new java.lang.Float[] {};
        java.lang.Float[][] floatArray27 = new java.lang.Float[][] { floatArray21, floatArray22, floatArray23, floatArray24, floatArray25, floatArray26 };
        java.lang.Float[][] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray27);
        java.lang.Float[][] floatArray31 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, 2, 8);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray31);
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 4, (int) '4');
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray19, 0.0f);
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray23, (float) (byte) 100);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray25);
        long[] longArray33 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.subarray(longArray33, 3, (int) (byte) 0);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray33);
        boolean[] booleanArray44 = new boolean[] { false, false, false, true, false, false };
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray44, true);
        java.lang.String[] strArray50 = new java.lang.String[] { "4", "1" };
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean37, (java.lang.Object) true, strArray50);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray50);
        java.lang.String[] strArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray50);
        boolean boolean54 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray12, (java.lang.Object) boolean26, strArray53);
        java.lang.Boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray55, false);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        byte[] byteArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) 10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9, (long) 'a');
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray11);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (byte) 10);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 1.0d);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean45 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray40);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray40);
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toObject(longArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray46, (long) 0);
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toObject(longArray46);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) doubleArray26, (java.lang.Object) longArray50);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.stream.Stream<java.lang.String> strStream16 = strList14.parallelStream();
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray7, (java.lang.Object) strStream16);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray7, true, 5);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray7, false);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray23, true);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray25, false, 1);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray13, (java.lang.Object) (byte) -1, (int) (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray18, (byte) 10);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray28);
        java.lang.Byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray29);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray29, (byte) 0);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 100);
        java.lang.Byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray32);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray42, (byte) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(byteArray44, (byte) 100);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray44, (byte) 1);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray44);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray49, (byte) 100);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.add(byteArray51, (byte) 10);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.clone(byteArray53);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray32, byteArray53);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray18, byteArray53);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.add(byteArray18, (int) (short) 10, (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 1, 100, 1, -1, 0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 100, -1, -1, 0, 0, 0, 100, -1, -1, 0, 10]");
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, (int) (short) 10, 0.0d);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 5, (int) (short) 0);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100, (double) 7);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 6, (-1));
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        boolean[] booleanArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, true, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray53, false);
        boolean[] booleanArray63 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, (int) (byte) 0, 0);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, 4, (int) '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray57, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(booleanArray46, booleanArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append(1L, (long) 1);
        equalsBuilder71.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder71.append(0.0f, (float) 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10, (int) (byte) 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, (double) 2, (double) 5);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.remove(intArray26, 3);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray28, (int) ' ');
        java.lang.Integer[] intArray31 = org.apache.commons.lang3.ArrayUtils.toObject(intArray28);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray11 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray11, floatArray14);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray6, (java.lang.Object) floatArray18);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray6, 0.0f);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(floatArray22, (float) 5);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) 2, (int) 'a');
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, (long) 1);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5);
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray13);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        int[] intArray0 = null;
        int[] intArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray0, (-1));
        org.junit.Assert.assertNull(intArray2);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray29);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray30, intArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray31, (int) (byte) 0);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        int[] intArray39 = new int[] {};
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray39, intArray40);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.addAll(intArray36, intArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder22.append(intArray35, intArray39);
        short[] shortArray49 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray49, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray53 = new java.lang.Short[] {};
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53, (short) 1);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray49, shortArray56);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray49, (short) 0, 0);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.add(shortArray49, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray64 = null;
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray64);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray65);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder22.append(shortArray63, shortArray68);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray63);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray63);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.clone(shortArray71);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[100, 0, 0, 1, -1, 0, 0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[0, 100, 0, 0, 1, -1]");
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.add(floatArray8, (float) 0L);
        float[] floatArray16 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray16);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray16, (int) (byte) 1, 0);
        float[] floatArray24 = new float[] { (byte) -1, 1L };
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, (float) 10L);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray21, floatArray24);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray24);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.clone(floatArray24);
        float[] floatArray35 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, 0.0f);
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        long[] longArray41 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray41);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray39, (java.lang.Object) longArray41);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray39, (float) (-1L));
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray24, floatArray45);
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.remove(floatArray45, (int) (byte) 0);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray10, floatArray45);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray50);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.clone(floatArray50);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, 0.0d);
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray24);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray25, intArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(intArray26, (int) '4');
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.add(intArray26, 1);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray31, 9);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31);
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.subarray(intArray34, 0, 2);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray14, (java.lang.Object) intArray34);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray15 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, (int) (byte) 1, 0);
        float[] floatArray23 = new float[] { (byte) -1, 1L };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) 10L);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray20, floatArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray23);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray28, (float) 'a');
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray30, (float) 1L);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.clone(floatArray32);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.clone(floatArray32);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.remove(floatArray32, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 100.0, 10.0, 35.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0, -1.0]");
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Short[] shortArray35 = new java.lang.Short[] {};
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35, (short) 1);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35, (short) 0);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray40, (short) -1);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray40, (short) 0);
        short[] shortArray50 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray50, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray54 = new java.lang.Short[] {};
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) 1);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray50, shortArray57);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray50, (short) 0, 0);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.add(shortArray50, (int) (byte) 0, (short) 0);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray64, (short) (byte) 1, (int) (short) 0);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray64, (short) (byte) -1, 0);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray64, (int) (byte) 100, (int) (byte) 100);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray73);
        java.lang.Short[] shortArray75 = new java.lang.Short[] {};
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75, (short) 1);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.clone(shortArray78);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray79, (short) (byte) -1, (int) (short) 100);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray79);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.contains(shortArray83, (short) (byte) 100);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray83, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder34.append(shortArray44, shortArray83);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray83, (short) -1, (int) (short) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray83);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray15, (-1.0f), 0);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.clone(floatArray15);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) (byte) 0);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray13);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray35 = new java.lang.Byte[][] { byteArray28, byteArray34 };
        java.lang.Byte[][] byteArray38 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray35, (int) '#', 10);
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray45);
        java.lang.Byte[][] byteArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray35, (java.lang.Object) intArray45);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray45, (int) (short) -1);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray45, (int) ' ');
        java.lang.Integer[] intArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray45);
        java.lang.Object obj53 = new java.lang.Object();
        long[] longArray60 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.subarray(longArray60, 3, (int) (byte) 0);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray60);
        boolean[] booleanArray71 = new boolean[] { false, false, false, true, false, false };
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray71);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray71, true);
        java.lang.String[] strArray77 = new java.lang.String[] { "4", "1" };
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean64, (java.lang.Object) true, strArray77);
        java.lang.String[] strArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray77);
        java.lang.String[] strArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray79);
        boolean boolean81 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray45, obj53, strArray79);
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray45, 0);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray83);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.clone(intArray83);
        int[] intArray86 = org.apache.commons.lang3.ArrayUtils.addAll(intArray22, intArray85);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 1, 0, 10, -1, 1]");
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean[] booleanArray31 = new boolean[] { false, false, false, true, false, false };
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray23, booleanArray31);
        short[] shortArray38 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean33, (java.lang.Object) shortArray38);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray38);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray44, (short) 1);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.clone(shortArray44);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray44, (short) -1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[-1, 0, 0]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray7);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray9);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (short) 1, 1);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray6, true);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        boolean[] booleanArray26 = new boolean[] { false, false, false, true, false, false };
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray26);
        boolean[] booleanArray34 = new boolean[] { false, false, false, true, false, false };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray26, booleanArray34);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray26, false);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray26, false);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (int) (byte) 100, 100);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray43);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray43, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]");
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray11 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray11, 1L);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray21, ' ');
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray38 = new char[] { '#', 'a', 'a' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray38);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray38, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder15.append((java.lang.Object) ' ', (java.lang.Object) charArray38);
        java.lang.Long[] longArray49 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray49);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray51);
        char[] charArray56 = new char[] { 'a', '#', ' ' };
        char[][] charArray57 = new char[][] { charArray56 };
        char[][] charArray58 = org.apache.commons.lang3.ArrayUtils.toArray(charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder43.append((java.lang.Object[]) longArray51, (java.lang.Object[]) charArray58);
        long[] longArray64 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray64, 1L);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray64, 0L);
        long[] longArray73 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray73, 1L);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray73, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder43.append(longArray64, longArray73);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.remove(longArray64, (int) (short) 1);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[0, -1, 1, 32]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[-1, 32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[0, 1, 32]");
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray5, (float) (short) -1);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) -1);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        java.lang.String[] strArray32 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream36 = strList33.stream();
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int16, (java.lang.Object) charArray22, (java.util.Collection<java.lang.String>) strList33);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.add(charArray22, ' ');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray43 = org.apache.commons.lang3.ArrayUtils.add(charArray39, 9, '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " #4a#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " #4a#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , #, 4, a, #, 4]");
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray15 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, (int) (byte) 1, 0);
        float[] floatArray23 = new float[] { (byte) -1, 1L };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) 10L);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray20, floatArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray23);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray28, (float) 'a');
        java.lang.Float[] floatArray34 = new java.lang.Float[] { (-1.0f), 100.0f, (-1.0f) };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray34);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, (float) (short) 1);
        java.lang.Character[] charArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, '4');
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray34, (java.lang.Object) charArray38);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, (float) '#');
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray28, floatArray43);
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        java.lang.Class<?> wildcardClass46 = floatArray44.getClass();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray14, true);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, 5);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean[] booleanArray23 = new boolean[] {};
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray23, false);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, 7, (int) (byte) 10);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray26, false, 2);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray14, booleanArray26);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, 0, true);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray36, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[true, false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[true, false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray6);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray16, (java.lang.Object) intArray23);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray28, (byte) 10);
        java.lang.String[] strArray34 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean9, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList35.parallelStream();
        int int39 = strList35.size();
        java.lang.Object[] objArray40 = strList35.toArray();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[{}, 1, {}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[{}, 1, {}]");
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, (byte) 100);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray21, (byte) 0);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray21, (byte) 10, 5);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray21);
        byte[] byteArray28 = null;
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray21, byteArray28);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (-1.0f), (double) '4');
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 10L, (double) 1.0f);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28);
        java.lang.Double[] doubleArray43 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray43);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray44, (double) 100L, 2, (double) (short) -1);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray44, (double) 100.0f, (int) (short) 100);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray44, (double) 10.0f);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray44);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, (double) 7, (double) 8);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0, 100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray6, (java.lang.Object) intArray13);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(intArray17, (int) (short) 0);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray15, (-1.0f), 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 1, (int) (byte) 100);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray15, (float) 10L);
        float[] floatArray41 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray41, (float) 1);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.add(floatArray41, (float) 10);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.add(floatArray46, (float) (-1));
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray46);
        float[] floatArray55 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray55);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray55);
        float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray55, (int) (byte) 1, 0);
        float[] floatArray63 = new float[] { (byte) -1, 1L };
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray63, (float) 10L);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray60, floatArray63);
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray63);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray67, (float) 10);
        java.lang.Float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray67);
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray70, (float) 1L);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray72, (float) 'a');
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.add(floatArray72, 10.0f);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray76);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray46, 100.0f, (int) '4');
        float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray46, (-1), 9);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0, -1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13);
        long[] longArray26 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, 3, (int) (byte) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        boolean[] booleanArray37 = new boolean[] { false, false, false, true, false, false };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray37, true);
        java.lang.String[] strArray43 = new java.lang.String[] { "4", "1" };
        boolean boolean44 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean30, (java.lang.Object) true, strArray43);
        java.lang.String[] strArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray43);
        java.lang.String[] strArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray45);
        java.lang.String[] strArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray46);
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray54, true);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray56, true);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray56, true, 3);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strArray47, (java.lang.Object) 3, (int) ' ');
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray13, (java.lang.Object) 3);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3 + "'", int61 == 3);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, 2, (int) '4');
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, (int) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, (int) (byte) 0, (-1));
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 1, (int) (short) 0);
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.clone(shortArray26);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray26, (int) (byte) 100, (int) (byte) -1);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.clone(shortArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray19, shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.remove(shortArray19, 5);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray34);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 0, 0, 100, 0]");
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 0);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray9);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(byteArray21, (byte) 100);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(byteArray21, (byte) 1);
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray21);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26, (byte) 100);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray28, (byte) 10);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.clone(byteArray30);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray9, byteArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray30);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray30, (byte) 1);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 1, 7);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 1, 100, 1, -1, 0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append('#', ' ');
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray43, (short) (byte) -1, (int) (short) 100);
        java.lang.Short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray47);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.clone(shortArray49);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray49, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder38.append(shortArray43, shortArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append((short) 100, (short) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) equalsBuilder53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.add(shortArray66, (short) -1);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray78);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray78, 7, (int) (short) -1);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray82);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[-1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[-1]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray42);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray42);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray42, 'a', (int) '4');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.add(charArray42, 0, ' ');
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray42, '4');
        java.lang.Character[] charArray53 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray53);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray53);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray55);
        char[] charArray62 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray66 = new char[] { '#', 'a', 'a' };
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray62, charArray66);
        java.lang.String str68 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray62);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray55, charArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder41.append(charArray42, charArray55);
        java.lang.Class<?> wildcardClass71 = equalsBuilder41.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ ]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{4,#,a,4,#}" + "'", str68, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray2 = org.apache.commons.lang3.ArrayUtils.remove(intArray0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray10 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.remove(floatArray19, (int) (short) 1);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray13, floatArray22);
        boolean boolean24 = strList11.equals((java.lang.Object) floatArray23);
        int int25 = strList11.size();
        java.util.stream.Stream<java.lang.String> strStream26 = strList11.parallelStream();
        boolean boolean27 = strList3.addAll((java.util.Collection<java.lang.String>) strList11);
        strList11.clear();
        java.lang.String[] strArray31 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.parallelStream();
        java.lang.String[] strArray37 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.parallelStream();
        boolean boolean41 = strList32.addAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.Object obj42 = null;
        boolean boolean43 = strList38.equals(obj42);
        int int44 = strList38.size();
        float[] floatArray50 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray50);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray50, (float) 1);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.add(floatArray50, (float) 10);
        boolean boolean56 = strList38.remove((java.lang.Object) floatArray50);
        java.lang.String[] strArray59 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.stream.Stream<java.lang.String> strStream62 = strList60.parallelStream();
        java.lang.String[] strArray67 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray76 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray76);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.remove(floatArray76, (int) (short) 1);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray70, floatArray79);
        boolean boolean81 = strList68.equals((java.lang.Object) floatArray80);
        int int82 = strList68.size();
        java.util.stream.Stream<java.lang.String> strStream83 = strList68.parallelStream();
        boolean boolean84 = strList60.addAll((java.util.Collection<java.lang.String>) strList68);
        boolean boolean85 = strList38.remove((java.lang.Object) strList60);
        boolean boolean86 = strList11.retainAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.Long[] longArray87 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray87);
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray87);
        java.lang.Long[] longArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray87);
        long[] longArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray87, (long) '4');
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) boolean86, (java.lang.Object) '4');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[]");
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertNotNull(longArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray92), "[]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray0);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 1);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray4, (int) (byte) 100);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray4, 2);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray4, (int) (short) 100, 9);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 0, (int) (short) 10);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) (-1));
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) 8, 6, (double) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 'a');
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) 10, 10.0d);
        double[] doubleArray11 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 100, 1.0d);
        double[] doubleArray19 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray19);
        float[] floatArray25 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray28 = new float[] { (byte) -1, 1L };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray28, (float) 10L);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray19, (java.lang.Object) boolean31);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray19, (int) (short) 0, 1);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray35, (double) (byte) -1);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray37, (int) (byte) 100, 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray37, 0, (int) (short) 10);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray37);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray44);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 7, (int) '4', (double) 100);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 0L);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 0, (int) (short) 100, (-1.0d));
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (short) 100, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append(false, true);
        equalsBuilder50.reset();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7, (byte) 0);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 1, 100, 1, -1]");
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) 100);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray30, byteArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) -1);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray30);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray45);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray53);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray53);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray46, (java.lang.Object) intArray53);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray46, (byte) 10);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray58, (byte) 10);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray58, (byte) -1);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.add(byteArray58, 4, (byte) 10);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray58);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.clone(byteArray58);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray58, (byte) 10, 10);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray58, (byte) 100, (int) (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 1, 100, 1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        strList5.clear();
        java.lang.String[] strArray11 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.stream.Stream<java.lang.String> strStream14 = strList12.parallelStream();
        java.lang.String[] strArray17 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.parallelStream();
        boolean boolean21 = strList12.addAll((java.util.Collection<java.lang.String>) strList18);
        java.util.stream.Stream<java.lang.String> strStream22 = strList12.parallelStream();
        boolean boolean24 = strList12.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray29 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray38 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray38);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.remove(floatArray38, (int) (short) 1);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray32, floatArray41);
        boolean boolean43 = strList30.equals((java.lang.Object) floatArray42);
        int int44 = strList30.size();
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray45, (int) (byte) 1);
        boolean boolean48 = strList30.contains((java.lang.Object) int47);
        boolean boolean49 = strList12.addAll((java.util.Collection<java.lang.String>) strList30);
        java.lang.String[] strArray54 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray63 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray63);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.remove(floatArray63, (int) (short) 1);
        float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray57, floatArray66);
        boolean boolean68 = strList55.equals((java.lang.Object) floatArray67);
        int int69 = strList55.size();
        boolean boolean70 = strList12.removeAll((java.util.Collection<java.lang.String>) strList55);
        java.util.Iterator<java.lang.String> strItor71 = strList55.iterator();
        java.lang.String[] strArray73 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.lang.String[] strArray78 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.stream.Stream<java.lang.String> strStream81 = strList79.parallelStream();
        java.lang.String[] strArray84 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.stream.Stream<java.lang.String> strStream87 = strList85.parallelStream();
        boolean boolean88 = strList79.addAll((java.util.Collection<java.lang.String>) strList85);
        java.lang.Object obj89 = null;
        boolean boolean90 = strList85.equals(obj89);
        int int91 = strList85.size();
        boolean boolean92 = strList74.removeAll((java.util.Collection<java.lang.String>) strList85);
        java.util.Iterator<java.lang.String> strItor93 = strList85.iterator();
        int int94 = strList85.size();
        boolean boolean95 = strList55.retainAll((java.util.Collection<java.lang.String>) strList85);
        boolean boolean96 = strList5.removeAll((java.util.Collection<java.lang.String>) strList55);
        boolean boolean98 = strList55.add("{1.0,0.0,10.0,-1.0,1.0,-1.0,0.0,10.0,-1.0}");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strStream81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2 + "'", int91 == 2);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strItor93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2 + "'", int94 == 2);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray41, (byte) 1);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray41, (byte) -1);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray46, byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray46, (byte) -1);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray46, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder31.append(byteArray45, byteArray46);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray45);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, (int) (short) 100, 0);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray11);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray11, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.add(charArray15, 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.clone(charArray15);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray9, (java.lang.Object) charArray19, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) 100);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray30, byteArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) -1);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray30);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray46, (byte) 1);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray48, (int) (byte) 0, (int) (byte) 1);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray48, (byte) -1, 100);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray48);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) (byte) 100);
        java.lang.Short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) (byte) 100, 1);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (int) (byte) 10, (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        java.lang.String[] strArray29 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.stream.Stream<java.lang.String> strStream32 = strList30.parallelStream();
        boolean boolean33 = strList24.addAll((java.util.Collection<java.lang.String>) strList30);
        java.lang.Object obj34 = null;
        boolean boolean35 = strList30.equals(obj34);
        int int36 = strList30.size();
        float[] floatArray42 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray42, (float) 1);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.add(floatArray42, (float) 10);
        boolean boolean48 = strList30.remove((java.lang.Object) floatArray42);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray42, (float) (short) 100);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray42);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray51, (float) (-1));
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) (byte) 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray5, (short) 10);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray5);
        java.lang.String str23 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray5);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, 0, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{-1,1,0,0,100}" + "'", str23, "{-1,1,0,0,100}");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1, -1, 1, 0, 0, 100]");
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58, (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 1);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray60);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray65, (byte) 100);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray67, (byte) 10);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder34.append(byteArray38, byteArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder34.append((long) 'a', (long) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((long) (short) 100, (long) (-1));
        java.lang.Boolean boolean78 = equalsBuilder74.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertEquals("'" + boolean78 + "' != '" + false + "'", boolean78, false);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray15, (byte) 1);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 100);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 1);
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray17);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 100);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 10);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray8, byteArray24);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) -1, (int) (short) -1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100, -1, 10, -1, -1, 100, -1, 0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        boolean boolean35 = equalsBuilder34.isEquals();
        long[] longArray37 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, (long) 0);
        long[] longArray50 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.subarray(longArray50, 3, (int) (byte) 0);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray50);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.subarray(longArray50, 5, (int) (short) 10);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.add(longArray57, 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder34.append(longArray37, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder34.append(true, false);
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        java.lang.Boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray67);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray71);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray72);
        java.lang.Boolean[] booleanArray79 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray79);
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray79, false);
        boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray79);
        java.lang.Boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray79);
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray79, false);
        boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.add(booleanArray86, true);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray88, (int) ' ', (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder63.append(booleanArray73, booleanArray91);
        boolean[] booleanArray94 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray91, false);
        int int96 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray94, false);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray88), "[false, false, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(booleanArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray94), "[]");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        java.lang.Object[] objArray0 = null;
        java.lang.Class<?>[] wildcardClassArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.AnnotatedElement[] annotatedElementArray2 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.reflect.AnnotatedElement[]) wildcardClassArray1);
        java.lang.reflect.Type[] typeArray3 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.reflect.Type[]) wildcardClassArray1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray0, (java.lang.Object) wildcardClassArray1, (int) 'a');
        float[] floatArray8 = new float[] { (byte) -1, 1L };
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray8, (float) 10L);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray8);
        java.lang.Class<?> wildcardClass12 = floatArray8.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray13 = org.apache.commons.lang3.ArrayUtils.add((java.lang.reflect.GenericDeclaration[]) wildcardClassArray1, (java.lang.reflect.GenericDeclaration) wildcardClass12);
        boolean[] booleanArray20 = new boolean[] { false, false, false, true, false, false };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray20);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray20);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray20, false);
        java.lang.Class<?> wildcardClass25 = booleanArray20.getClass();
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ArrayUtils.add(wildcardClassArray1, wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClassArray1);
        org.junit.Assert.assertNotNull(annotatedElementArray2);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(genericDeclarationArray13);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray15, (-1.0f), 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 1, (int) (byte) 100);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) (short) 1);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray10, 4, (int) '4');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray10, (float) (byte) -1);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, (float) (short) 1, (int) '4');
        float[] floatArray24 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray24);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, 0.0f);
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray24);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray34);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray34, (int) (byte) 1, 0);
        float[] floatArray42 = new float[] { (byte) -1, 1L };
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray42, (float) 10L);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray39, floatArray42);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray42);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray42);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray47, (float) 'a');
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.add(floatArray47, 0.0f);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray47);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray47);
        java.lang.AutoCloseable[] autoCloseableArray54 = new java.lang.AutoCloseable[] {};
        java.lang.AutoCloseable[] autoCloseableArray57 = org.apache.commons.lang3.ArrayUtils.subarray(autoCloseableArray54, 0, (-1));
        java.lang.AutoCloseable autoCloseable58 = null;
        java.lang.AutoCloseable[] autoCloseableArray59 = org.apache.commons.lang3.ArrayUtils.add(autoCloseableArray57, autoCloseable58);
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray10, (java.lang.Object) autoCloseable58);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(autoCloseableArray54);
        org.junit.Assert.assertNotNull(autoCloseableArray57);
        org.junit.Assert.assertNotNull(autoCloseableArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 2, (int) 'a');
        double[] doubleArray13 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray13, (double) (byte) 100, 1.0d);
        double[] doubleArray21 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray13, doubleArray21);
        float[] floatArray27 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray30 = new float[] { (byte) -1, 1L };
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray30, (float) 10L);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray30);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray21, (java.lang.Object) boolean33);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21);
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray40 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray40, (double) (byte) 100, 1.0d);
        double[] doubleArray48 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray48);
        float[] floatArray54 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray57 = new float[] { (byte) -1, 1L };
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray57, (float) 10L);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray54, floatArray57);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray48, (java.lang.Object) boolean60);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray48);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray62);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 10.0, 52.0]");
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, false);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (byte) 100, 100);
        java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray23);
        double[] doubleArray28 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (byte) 100, 1.0d);
        double[] doubleArray36 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray36);
        float[] floatArray42 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray45 = new float[] { (byte) -1, 1L };
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray45, (float) 10L);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray42, floatArray45);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray36, (java.lang.Object) boolean48);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray50);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray51, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray51);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray51, (double) '#');
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray51);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray57);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray24, (java.lang.Object) doubleArray57, 3);
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray57);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.Object, java.lang.Object> objMap62 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, '-1.0', is neither of type Map.Entry nor an Array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(doubleArray61);
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, (-1.0d), (-1.0d), 0.0d, 10.0d, 100.0d };
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 100.0d, (-1.0d), (-1.0d), 0.0d, 10.0d, 100.0d };
        java.lang.Double[] doubleArray20 = new java.lang.Double[] { 100.0d, (-1.0d), (-1.0d), 0.0d, 10.0d, 100.0d };
        java.lang.Double[][] doubleArray21 = new java.lang.Double[][] { doubleArray6, doubleArray13, doubleArray20 };
        java.lang.Double[] doubleArray26 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray31 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray36 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray41 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray42 = new java.lang.Double[][] { doubleArray26, doubleArray31, doubleArray36, doubleArray41 };
        java.lang.Double[][] doubleArray43 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42);
        java.lang.Double[][] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray21, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[][]) doubleArray21);
        float[] floatArray51 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray51);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray51, (int) (byte) 1, 0);
        float[] floatArray59 = new float[] { (byte) -1, 1L };
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray59, (float) 10L);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray56, floatArray59);
        float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray56);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray56);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray21, (java.lang.Object) boolean64, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray0, (java.lang.Object[]) intArray7);
        java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray11);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 0);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray9);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray9, (byte) 1);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(byteArray16, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, (int) (short) 1);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.clone(charArray32);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray33, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.subarray(charArray28, (int) 'a', (int) (short) 10);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '4');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray28);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.clone(charArray35);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray46);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(charArray36, ' ');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        java.lang.Byte[][] byteArray0 = new java.lang.Byte[][] {};
        java.lang.Byte[][] byteArray1 = new java.lang.Byte[][] {};
        java.lang.Byte[][] byteArray2 = new java.lang.Byte[][] {};
        java.lang.Byte[][] byteArray3 = new java.lang.Byte[][] {};
        java.lang.Byte[][][] byteArray4 = new java.lang.Byte[][][] { byteArray0, byteArray1, byteArray2, byteArray3 };
        java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray17 = new java.lang.Byte[][] { byteArray10, byteArray16 };
        java.lang.Byte[][] byteArray20 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray17, (int) '#', 10);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray27);
        java.lang.Byte[][] byteArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray17, (java.lang.Object) intArray27);
        short[] shortArray35 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray35, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray35);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray35, (short) (byte) 0);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray17, (java.lang.Object) shortArray41);
        java.lang.Byte[][] byteArray45 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray17, (int) (short) 10, (int) (byte) -1);
        java.lang.Object[] objArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray45);
        java.lang.Byte[][][] byteArray47 = org.apache.commons.lang3.ArrayUtils.add(byteArray4, byteArray45);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray61 = new java.lang.Byte[][] { byteArray54, byteArray60 };
        java.lang.Byte[][] byteArray64 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray61, (int) '#', 10);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray71);
        java.lang.Byte[][] byteArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray61, (java.lang.Object) intArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Byte[][][] byteArray74 = org.apache.commons.lang3.ArrayUtils.add(byteArray4, (int) (byte) -1, byteArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray73);
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 0);
        java.lang.Short[] shortArray10 = new java.lang.Short[] {};
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) 1);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray14);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray14, (short) (byte) 1);
        short[] shortArray23 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray23, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray27 = new java.lang.Short[] {};
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) 1);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray23, shortArray30);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray23, (short) 0, 0);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (int) (byte) 0, (short) 0);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray47);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray48, intArray49);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray49, (int) (byte) 0);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray49);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray54, (int) (byte) 1);
        int[] intArray57 = new int[] {};
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray57, intArray58);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.addAll(intArray54, intArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(intArray53, intArray57);
        short[] shortArray67 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray67, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray71 = new java.lang.Short[] {};
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray71);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray71, (short) 1);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray67, shortArray74);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray67, (short) 0, 0);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.add(shortArray67, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray82 = null;
        java.lang.Short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray82);
        java.lang.Short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray83);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray83, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder40.append(shortArray81, shortArray86);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray39, shortArray81);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray14, shortArray88);
        short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.remove(shortArray88, 0);
        short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.clone(shortArray88);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[100, 0, 0, 1, -1, 0, 0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[0, 0, 1, -1, 0, 0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray92), "[100, 0, 0, 1, -1, 0, 0, 100, 0, 0, 1, -1]");
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (double) (byte) 0);
        java.lang.Class<?> wildcardClass18 = doubleArray17.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, '4');
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray18, (java.lang.Object[]) charArray19);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, 'a');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Boolean boolean64 = equalsBuilder63.build();
        equalsBuilder63.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder63.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((-1), 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder70.appendSuper(true);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray23 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray23);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray23, (int) (byte) 1, 0);
        float[] floatArray31 = new float[] { (byte) -1, 1L };
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 10L);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray28, floatArray31);
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        float[] floatArray38 = new float[] { (byte) -1, 1L };
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray38, (float) 10L);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray38);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray31, floatArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray38, 0.0f, (-1));
        float[] floatArray51 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray52, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray54);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray38, floatArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray38);
        java.lang.String str58 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) floatArray38);
        java.lang.Class<?> wildcardClass59 = floatArray38.getClass();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{-1.0,1.0}" + "'", str58, "{-1.0,1.0}");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), (-1.0d) };
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray2);
        double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray2);
        double[] doubleArray8 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray8, (double) (byte) 100, 1.0d);
        double[] doubleArray16 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray8, doubleArray16);
        float[] floatArray22 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray25 = new float[] { (byte) -1, 1L };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) 10L);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray22, floatArray25);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray16, (java.lang.Object) boolean28);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray16, (int) (short) 0, 1);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray32, (double) (byte) -1);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, (int) (byte) 100, 1);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray34, (double) 10, 0, 1.0d);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray34, (double) (-1.0f), (int) (short) 1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, 0, 0);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray34, (double) (short) 10);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray34);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) (byte) -1, (int) (short) -1, (double) 8);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray7);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7, (long) '#');
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 1, 100, 100, 0]");
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray5 = null;
        float[] floatArray6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray14, floatArray23);
        boolean boolean25 = strList12.equals((java.lang.Object) floatArray24);
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray31);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(floatArray5, floatArray6);
        java.lang.Object obj38 = null;
        short[] shortArray43 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray43, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) (byte) 0);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) (byte) 0);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder0.append(obj38, (java.lang.Object) shortArray47);
        java.lang.Short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray47);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[-1, 0, 0, 1]");
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (short) -1);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) 1, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.remove(byteArray0, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, 0.0d, (int) (byte) 100, (-1.0d));
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray12);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) 'a', 1);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        int int19 = strList5.size();
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray20, (int) (byte) 1);
        boolean boolean23 = strList5.contains((java.lang.Object) int22);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray30, (byte) 1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(byteArray32, (byte) 100);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(byteArray32, (byte) 1);
        java.lang.Byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray32);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray37, (byte) 100);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.add(byteArray39, (byte) 10);
        boolean boolean42 = strList5.contains((java.lang.Object) byteArray39);
        boolean boolean44 = strList5.add("4");
        java.util.stream.Stream<java.lang.String> strStream45 = strList5.stream();
        java.lang.String[] strArray47 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.lang.String[] strArray52 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.stream.Stream<java.lang.String> strStream55 = strList53.parallelStream();
        java.lang.String[] strArray58 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.parallelStream();
        boolean boolean62 = strList53.addAll((java.util.Collection<java.lang.String>) strList59);
        java.lang.Object obj63 = null;
        boolean boolean64 = strList59.equals(obj63);
        int int65 = strList59.size();
        boolean boolean66 = strList48.removeAll((java.util.Collection<java.lang.String>) strList59);
        java.lang.String[] strArray69 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.stream.Stream<java.lang.String> strStream72 = strList70.parallelStream();
        boolean boolean73 = strList59.addAll((java.util.Collection<java.lang.String>) strList70);
        java.lang.String[] strArray75 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.lang.String[] strArray80 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.stream.Stream<java.lang.String> strStream83 = strList81.parallelStream();
        java.lang.String[] strArray86 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.stream.Stream<java.lang.String> strStream89 = strList87.parallelStream();
        boolean boolean90 = strList81.addAll((java.util.Collection<java.lang.String>) strList87);
        java.lang.Object obj91 = null;
        boolean boolean92 = strList87.equals(obj91);
        int int93 = strList87.size();
        boolean boolean94 = strList76.removeAll((java.util.Collection<java.lang.String>) strList87);
        java.util.Iterator<java.lang.String> strItor95 = strList87.iterator();
        boolean boolean96 = strList59.retainAll((java.util.Collection<java.lang.String>) strList87);
        boolean boolean97 = strList59.isEmpty();
        boolean boolean98 = strList5.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean99 = strList59.isEmpty();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 2 + "'", int93 == 2);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strItor95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray4, (float) '4');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray12, (float) 1L);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.clone(floatArray12);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray16, (float) (byte) 0);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray16, (float) 4, (int) '4');
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 10.0, -1.0, 97.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray29 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.parallelStream();
        java.lang.String[] strArray40 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList35.addAll((java.util.Collection<java.lang.String>) strList41);
        java.lang.Object obj45 = null;
        boolean boolean46 = strList41.equals(obj45);
        int int47 = strList41.size();
        boolean boolean48 = strList30.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor49 = strList41.iterator();
        boolean boolean50 = strList13.retainAll((java.util.Collection<java.lang.String>) strList41);
        boolean boolean52 = strList41.add("");
        boolean[] booleanArray58 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray58, (int) (byte) 0, 0);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray58, 4, (int) '4');
        java.lang.Boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray58);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray58);
        boolean boolean67 = strList41.equals((java.lang.Object) booleanArray58);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray58);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray8, true, 4);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray12, 4);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, true);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray16, false);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, true, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true, false]");
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 4, (int) '4');
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray29);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray30, intArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray31, (int) (byte) 0);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        int[] intArray39 = new int[] {};
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray39, intArray40);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.addAll(intArray36, intArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder22.append(intArray35, intArray39);
        short[] shortArray49 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray49, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray53 = new java.lang.Short[] {};
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53, (short) 1);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray49, shortArray56);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray49, (short) 0, 0);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.add(shortArray49, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray64 = null;
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray64);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray65);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder22.append(shortArray63, shortArray68);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray63);
        short[] shortArray76 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray76, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray80 = new java.lang.Short[] {};
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) 1);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray76, shortArray83);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray83);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray83);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray63, shortArray83);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.clone(shortArray63);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray88);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[100, 0, 0, 1, -1, 0, 0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray2 = org.apache.commons.lang3.ArrayUtils.remove(intArray0, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray12, true);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append(0L, (long) 'a');
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14, false);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray26);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray26, (java.lang.Object) (byte) 1, (int) (byte) -1);
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray37, true);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray26, (java.lang.Object) true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder7.append((java.lang.Object[]) booleanArray14, (java.lang.Object[]) byteArray26);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26, (byte) -1);
        java.lang.Short[] shortArray44 = new java.lang.Short[] {};
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44, (short) 1);
        java.lang.Short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray47);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(shortArray47, (short) 10);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray26, (java.lang.Object) shortArray47);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray47, (short) (byte) 1, 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true, true, false, false]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) -1 };
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 0);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray3, 1, (int) (byte) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 0, (int) '4');
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, (byte) 100);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray21, (byte) 0);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray21);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray21);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        java.util.stream.Stream<java.lang.String> strStream15 = strList9.parallelStream();
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray22);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray39);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray32, (java.lang.Object) intArray39);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32, (byte) 10);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        java.lang.String[] strArray50 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean25, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList51);
        boolean boolean54 = strList9.retainAll((java.util.Collection<java.lang.String>) strList51);
        java.util.Spliterator<java.lang.String> strSpliterator55 = strList51.spliterator();
        java.lang.Object[] objArray56 = strList51.toArray();
        boolean[][] booleanArray57 = new boolean[][] {};
        boolean[][] booleanArray58 = new boolean[][] {};
        boolean[][] booleanArray59 = new boolean[][] {};
        boolean[][] booleanArray60 = new boolean[][] {};
        boolean[][] booleanArray61 = new boolean[][] {};
        boolean[][] booleanArray62 = new boolean[][] {};
        boolean[][][] booleanArray63 = new boolean[][][] { booleanArray57, booleanArray58, booleanArray59, booleanArray60, booleanArray61, booleanArray62 };
        boolean[][] booleanArray64 = new boolean[][] {};
        boolean[][] booleanArray65 = new boolean[][] {};
        boolean[][] booleanArray66 = new boolean[][] {};
        boolean[][] booleanArray67 = new boolean[][] {};
        boolean[][] booleanArray68 = new boolean[][] {};
        boolean[][] booleanArray69 = new boolean[][] {};
        boolean[][][] booleanArray70 = new boolean[][][] { booleanArray64, booleanArray65, booleanArray66, booleanArray67, booleanArray68, booleanArray69 };
        boolean[][] booleanArray71 = new boolean[][] {};
        boolean[][] booleanArray72 = new boolean[][] {};
        boolean[][] booleanArray73 = new boolean[][] {};
        boolean[][] booleanArray74 = new boolean[][] {};
        boolean[][] booleanArray75 = new boolean[][] {};
        boolean[][] booleanArray76 = new boolean[][] {};
        boolean[][][] booleanArray77 = new boolean[][][] { booleanArray71, booleanArray72, booleanArray73, booleanArray74, booleanArray75, booleanArray76 };
        boolean[][] booleanArray78 = new boolean[][] {};
        boolean[][] booleanArray79 = new boolean[][] {};
        boolean[][] booleanArray80 = new boolean[][] {};
        boolean[][] booleanArray81 = new boolean[][] {};
        boolean[][] booleanArray82 = new boolean[][] {};
        boolean[][] booleanArray83 = new boolean[][] {};
        boolean[][][] booleanArray84 = new boolean[][][] { booleanArray78, booleanArray79, booleanArray80, booleanArray81, booleanArray82, booleanArray83 };
        boolean[][][][] booleanArray85 = new boolean[][][][] { booleanArray63, booleanArray70, booleanArray77, booleanArray84 };
        boolean[][][][] booleanArray86 = org.apache.commons.lang3.ArrayUtils.toArray(booleanArray85);
        // The following exception was thrown during execution in test generation
        try {
            boolean[][][][] booleanArray87 = strList51.toArray(booleanArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strSpliterator55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[{}, 1, {}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[{}, 1, {}]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertNotNull(booleanArray86);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean[] booleanArray19 = new boolean[] { false, false, false, true, false, false };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, true);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, true);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray12, booleanArray25);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, true, false, false]");
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (short) -1, 7, (double) (byte) 0);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 1.0f, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        boolean boolean12 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray2, (java.lang.Object) byteArray9, true);
        java.lang.Character[] charArray18 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray19 = new java.lang.Character[][] { charArray18 };
        java.lang.Character[][] charArray20 = org.apache.commons.lang3.ArrayUtils.toArray(charArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray9, (java.lang.Object[]) charArray20);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray29, (byte) 1);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray31, (byte) 100);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray31, (byte) 1);
        java.lang.Byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray31);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray36, (byte) 100);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.add(byteArray38, (byte) 10);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.clone(byteArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray40);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.remove(byteArray40, 3);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray51, (byte) 1);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(byteArray53, (byte) 100);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(byteArray53, (byte) 1);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray64, (byte) 1);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray66, (int) (byte) 0, (int) (byte) 1);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray53, byteArray69);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray53, (byte) 10);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.add(byteArray53, (byte) -1);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray40, byteArray74);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray74);
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.clone(byteArray74);
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.clone(byteArray74);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray78, (int) (short) 100, 8);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 0, -1, -1, 100, 0, 0, 0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, 10, 1);
        java.lang.Class<?> wildcardClass31 = doubleArray27.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        float[] floatArray12 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, 0.0f);
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        long[] longArray18 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray16, (java.lang.Object) longArray18);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray18);
        java.lang.Long[] longArray27 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray27);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray27, (long) (short) 10);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.clone(longArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray30, (long) (short) 10);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray30);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray18, longArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray18);
        long[] longArray45 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.subarray(longArray45, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray45);
        long[] longArray51 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(longArray51, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray51);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.clone(longArray51);
        long[] longArray61 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray61, 1L);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray56, longArray63);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.addAll(longArray45, longArray63);
        long[] longArray68 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray68);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(longArray68, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray68);
        boolean boolean73 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray68);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray68);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray68);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray68);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray45, longArray68);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray68, (long) (-1));
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.clone(longArray68);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray18, longArray80);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[-1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        double[] doubleArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray0, (double) 100, 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 10, 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, 7);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) 'a');
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, 10.0d, (double) (-1L));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.Object, java.lang.Object> objMap9 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) byteArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, '1', is neither of type Map.Entry nor an Array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) 0);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) shortArray80);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) (byte) 10);
        java.util.Map<java.lang.Object, java.lang.Object> objMap86 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) shortArray80);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[]");
        org.junit.Assert.assertNotNull(objMap86);
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray1, (long) 1);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray1, (long) (byte) 1);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        long[] longArray52 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray54);
        long[] longArray57 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder28.append(longArray54, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((short) (byte) 1, (short) (byte) 10);
        boolean[] booleanArray62 = new boolean[] {};
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray62, true);
        boolean[] booleanArray65 = null;
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder58.append(booleanArray62, booleanArray66);
        java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray71);
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray72, (int) (short) 10, 3);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray75);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray76, true, (int) (byte) 1);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray66, booleanArray76);
        java.lang.Boolean[] booleanArray87 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray87, true);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray87, false);
        boolean[] booleanArray93 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray87, true);
        boolean[] booleanArray96 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray93, (int) (short) 100, 7);
        boolean[] booleanArray97 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray76, booleanArray96);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray93), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray96), "[]");
        org.junit.Assert.assertNotNull(booleanArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray97), "[]");
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        boolean[] booleanArray69 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray69, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray69);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder28.append(booleanArray69, booleanArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder28.append((long) (short) 100, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append((long) '#', (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder83.append((float) 1, (float) 3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder83.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder83.append((short) (byte) 100, (short) (byte) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray13, (int) (short) -1);
        int[] intArray24 = new int[] {};
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray24, intArray25);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray25, (int) (byte) 100, 7);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray25);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray30);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.add(intArray30, (int) (byte) 1);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray33, 6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, true);
        boolean[] booleanArray13 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (byte) 0, 0);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray16);
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray22, false);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray17, booleanArray22);
        boolean[] booleanArray31 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray31, (int) (byte) 0, 0);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray31, true);
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray31);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray37);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray22, booleanArray38);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray38, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true, true, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder28.append((float) (byte) -1, 0.0f);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray51, byteArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray51, (byte) -1);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray51, (byte) -1);
        java.lang.Byte[] byteArray68 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray68, (byte) 1);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(byteArray70, (byte) 100);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.contains(byteArray70, (byte) 1);
        java.lang.Byte[] byteArray81 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray81, (byte) 1);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray83, (int) (byte) 0, (int) (byte) 1);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray70, byteArray86);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray70, (byte) 10);
        byte[] byteArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray70);
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder50.append(byteArray51, byteArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder50.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder50.append(true, false);
        boolean boolean99 = equalsBuilder50.isEquals();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray6, (java.lang.Object) longArray13);
        java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, '4');
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        java.lang.Byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24);
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray17, (java.lang.Object) byteArray24, true);
        java.lang.Character[] charArray33 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray34 = new java.lang.Character[][] { charArray33 };
        java.lang.Character[][] charArray35 = org.apache.commons.lang3.ArrayUtils.toArray(charArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray24, (java.lang.Object[]) charArray35);
        java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray24, (java.lang.Object[]) shortArray37);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24, (byte) 0);
        java.lang.Byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray40);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray6, (java.lang.Object) byteArray40);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray40);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 1, 100, 1, -1]");
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray29 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.parallelStream();
        java.lang.String[] strArray40 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList35.addAll((java.util.Collection<java.lang.String>) strList41);
        java.lang.Object obj45 = null;
        boolean boolean46 = strList41.equals(obj45);
        int int47 = strList41.size();
        boolean boolean48 = strList30.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor49 = strList41.iterator();
        boolean boolean50 = strList13.retainAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor51 = strList41.iterator();
        java.lang.String[] strArray56 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray65 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray65);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.remove(floatArray65, (int) (short) 1);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray59, floatArray68);
        boolean boolean70 = strList57.equals((java.lang.Object) floatArray69);
        int int71 = strList57.size();
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray72, (int) (byte) 1);
        boolean boolean75 = strList57.contains((java.lang.Object) int74);
        java.lang.Object[] objArray76 = strList57.toArray();
        java.lang.Object[] objArray77 = strList57.toArray();
        boolean boolean78 = strList41.removeAll((java.util.Collection<java.lang.String>) strList57);
        java.util.stream.Stream<java.lang.String> strStream79 = strList57.stream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strStream79);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray10 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.remove(floatArray19, (int) (short) 1);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray13, floatArray22);
        boolean boolean24 = strList11.equals((java.lang.Object) floatArray23);
        int int25 = strList11.size();
        java.util.stream.Stream<java.lang.String> strStream26 = strList11.parallelStream();
        boolean boolean27 = strList3.addAll((java.util.Collection<java.lang.String>) strList11);
        strList11.clear();
        int int29 = strList11.size();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream38 = strList35.stream();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList35.spliterator();
        int int40 = strList35.size();
        boolean boolean41 = strList11.containsAll((java.util.Collection<java.lang.String>) strList35);
        java.lang.Float[] floatArray45 = new java.lang.Float[] { (-1.0f), 100.0f, (-1.0f) };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray45);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray45, (float) (short) 1);
        boolean boolean49 = strList35.remove((java.lang.Object) floatArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray58, intArray59);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray59, (int) (byte) 0);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray59);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (byte) 1);
        int[] intArray67 = new int[] {};
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray67, intArray68);
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.addAll(intArray64, intArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder50.append(intArray63, intArray67);
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray67);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray72, 2);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(intArray72, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray72);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray84);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.contains(intArray85, 1);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.addAll(intArray72, intArray85);
        int int91 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray85, 10, (int) (byte) 0);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray85, (int) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray85);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray85);
        boolean boolean96 = strList35.remove((java.lang.Object) intArray85);
        int[] intArray99 = org.apache.commons.lang3.ArrayUtils.subarray(intArray85, (int) (short) 0, 5);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 2 + "'", int93 == 2);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[-1, 1, 0, 10, -1]");
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray10, (long) 0, 4);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray10, (long) (short) 0);
        long[] longArray17 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray17);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray15, longArray17);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray26, (long) 6);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        boolean[] booleanArray69 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray69, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray69);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder28.append(booleanArray69, booleanArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder28.append((long) (short) 100, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append((long) '#', (long) '#');
        equalsBuilder88.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        long[] longArray52 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray54);
        long[] longArray57 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder28.append(longArray54, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((double) (byte) -1, (double) 1L);
        java.lang.Boolean[] booleanArray65 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray65);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray65);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray65);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray65, true);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray65);
        boolean[] booleanArray78 = new boolean[] { false, false, false, true, false, false };
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray78);
        boolean[] booleanArray86 = new boolean[] { false, false, false, true, false, false };
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray86);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray78, booleanArray86);
        boolean[] booleanArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray86, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder58.append(booleanArray71, booleanArray90);
        equalsBuilder91.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray90), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        float[] floatArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray0, (float) (short) 10, (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) (short) 10);
        float[] floatArray15 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, (int) (byte) 1, 0);
        float[] floatArray23 = new float[] { (byte) -1, 1L };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) 10L);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray20, floatArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.clone(floatArray23);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray23, (-1), 1);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray9, floatArray31);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.remove(floatArray31, 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 0.0f);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[1.0, 0.0]");
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(floatArray8, (float) (short) 100);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray8);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray4, ' ');
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, '#');
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(charArray6, 'a');
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray13);
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        java.lang.String str26 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray20);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray13, charArray20);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray13);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray38 = new char[] { '#', 'a', 'a' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray38);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray38, ' ', 2);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.subarray(charArray38, 0, (int) (byte) 10);
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray45);
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray46, '#');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray46, ' ');
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray50);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray51);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[ ]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{4,#,a,4,#}" + "'", str26, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ ]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " #aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " #aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ , #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12, true);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, true, true, true]");
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5);
        float[] floatArray7 = new float[] {};
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray6, (java.lang.Object) floatArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray19 = new char[] { '#', 'a', 'a' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray15, charArray19);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray19, (int) 'a', (int) (short) 10);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.add(charArray19, '4');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray19, '4');
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.toObject(charArray19);
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, '4');
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray28, (java.lang.Object[]) charArray29);
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, 'a');
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray6, (java.lang.Object[]) charArray29);
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray29);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray29);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(charArray37);
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray15, (-1.0f), 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 1, (int) (byte) 100);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray15, (float) 10L);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray15);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray24, (long) 1, 5);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.add(longArray24, (-1L));
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray24, (long) 5, 6);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray24);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[32, -1, 0, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray10, (long) 0, 4);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray10, (long) (short) 0);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray15, 100L, 100);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray15);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        short[] shortArray27 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray31 = new java.lang.Short[] {};
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray27, shortArray34);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) 0, 0);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray42 = null;
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(shortArray41, shortArray46);
        double[] doubleArray51 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray51, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray51);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) (short) 1, (int) (short) 100);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) (byte) 10, 0);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray51, (double) (short) 0, 7);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray51, 1);
        double[] doubleArray70 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray70, (double) (byte) 100, 1.0d);
        double[] doubleArray78 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray70, doubleArray78);
        float[] floatArray84 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray87 = new float[] { (byte) -1, 1L };
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray87, (float) 10L);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray84, floatArray87);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray78, (java.lang.Object) boolean90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder0.append(doubleArray66, doubleArray78);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) 9);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 0);
        java.lang.Short[] shortArray10 = new java.lang.Short[] {};
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) 1);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray14);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray14, (int) (short) -1, 1);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, '4');
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray18, (java.lang.Object[]) charArray19);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, 'a');
        java.lang.Character[] charArray25 = org.apache.commons.lang3.ArrayUtils.toObject(charArray24);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray6);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray16, (java.lang.Object) intArray23);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray28, (byte) 10);
        java.lang.String[] strArray34 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean9, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList35);
        boolean boolean39 = strList35.add("{4,#,a,4,#}");
        java.lang.Float[] floatArray45 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray45);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray45);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray45, (float) (short) 10);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.add(floatArray49, 5, (float) 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray49);
        boolean boolean54 = strList35.equals((java.lang.Object) floatArray49);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.clone(floatArray49);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray62 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray62);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.remove(floatArray62, (int) (short) 1);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray56, floatArray65);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.add(floatArray56, (float) (byte) 10);
        float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray56, 0.0f);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray70, 0.0f, 6);
        java.lang.Float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray70);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray70);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray55, floatArray70);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[100.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 0.0, 10.0, -1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[100.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[10.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[100.0, -1.0, 10.0, 0.0, -1.0]");
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        char[][] charArray0 = new char[][] {};
        char[][] charArray1 = new char[][] {};
        char[][] charArray2 = new char[][] {};
        char[][] charArray3 = new char[][] {};
        char[][] charArray4 = new char[][] {};
        char[][] charArray5 = new char[][] {};
        char[][][] charArray6 = new char[][][] { charArray0, charArray1, charArray2, charArray3, charArray4, charArray5 };
        char[][][] charArray7 = org.apache.commons.lang3.ArrayUtils.clone(charArray6);
        char[][][] charArray9 = org.apache.commons.lang3.ArrayUtils.remove(charArray7, (int) (byte) 0);
        char[][] charArray11 = null;
        char[][][] charArray12 = org.apache.commons.lang3.ArrayUtils.add(charArray7, 0, charArray11);
        float[] floatArray18 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray18);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray18, (int) (byte) 1, 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) (byte) 1);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        float[] floatArray32 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray32);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray32, 0.0f);
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray32);
        float[] floatArray42 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray42);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray42, (int) (byte) 1, 0);
        float[] floatArray50 = new float[] { (byte) -1, 1L };
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray50, (float) 10L);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray47, floatArray50);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray50);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray32, floatArray50);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray32);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray32);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray32);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray11, (java.lang.Object) floatArray32);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder28.append((float) (byte) -1, 0.0f);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray51, byteArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray51, (byte) -1);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray51, (byte) -1);
        java.lang.Byte[] byteArray68 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray68, (byte) 1);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(byteArray70, (byte) 100);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.contains(byteArray70, (byte) 1);
        java.lang.Byte[] byteArray81 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray81, (byte) 1);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray83, (int) (byte) 0, (int) (byte) 1);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray70, byteArray86);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray70, (byte) 10);
        byte[] byteArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray70);
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder50.append(byteArray51, byteArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder50.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder50.append('a', ' ');
        java.lang.Boolean boolean99 = equalsBuilder50.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertEquals("'" + boolean99 + "' != '" + false + "'", boolean99, false);
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) -1);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        java.lang.String[] strArray32 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream36 = strList33.stream();
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int16, (java.lang.Object) charArray22, (java.util.Collection<java.lang.String>) strList33);
        java.util.stream.Stream<java.lang.String> strStream38 = strList33.stream();
        java.lang.Object[] objArray39 = strList33.toArray();
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[4, hi!]");
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        java.lang.Integer[] intArray6 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        short[] shortArray12 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray12, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray16 = new java.lang.Short[] {};
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16, (short) 1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray12, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray19, (int) '4', (int) (short) 0);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray19, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        java.lang.String[] strArray32 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray41 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.remove(floatArray41, (int) (short) 1);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray35, floatArray44);
        boolean boolean46 = strList33.equals((java.lang.Object) floatArray45);
        int int47 = strList33.size();
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray48, (int) (byte) 1);
        boolean boolean51 = strList33.contains((java.lang.Object) int50);
        java.lang.Object[] objArray52 = strList33.toArray();
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray6, (java.lang.Object) shortArray27, (java.util.Collection<java.lang.String>) strList33);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray54, 4);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(intArray54, (int) (byte) 100);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray54, 100, (int) '#');
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray54, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        java.lang.Object[] objArray0 = null;
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        short[] shortArray19 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray19, (short) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray9, (java.lang.Object) shortArray19);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) 0);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.add(shortArray19, (short) (byte) 10);
        long[] longArray38 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.subarray(longArray38, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray38);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray38);
        java.lang.Long[] longArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) shortArray31, (java.lang.Object) longArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray0, (java.lang.Object) boolean45, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[-1, 1, 0, 0, 100, 10]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        int[] intArray0 = null;
        int[] intArray3 = new int[] { ' ', 2 };
        java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray3, (int) 'a', (int) (byte) -1);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.addAll(intArray0, intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray11 = org.apache.commons.lang3.ArrayUtils.add(intArray3, (-1), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 2]");
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[32, 2]");
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray23 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray23);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray23, (int) (byte) 1, 0);
        float[] floatArray31 = new float[] { (byte) -1, 1L };
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 10L);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray28, floatArray31);
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        float[] floatArray38 = new float[] { (byte) -1, 1L };
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray38, (float) 10L);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray38);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray31, floatArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray38, 0.0f, (-1));
        float[] floatArray51 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray52, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray54);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray38, floatArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray38);
        java.lang.String str58 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) floatArray38);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.add(floatArray38, (int) (byte) -1, (float) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{-1.0,1.0}" + "'", str58, "{-1.0,1.0}");
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray5);
        java.lang.Object obj8 = null;
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj8, (java.lang.Object) byteArray15, false);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray5, (java.lang.Object[]) byteArray15);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        int int19 = strList5.size();
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray20, (int) (byte) 1);
        boolean boolean23 = strList5.contains((java.lang.Object) int22);
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        java.lang.String str35 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray29);
        char[] charArray41 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray45 = new char[] { '#', 'a', 'a' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.addAll(charArray41, charArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray29, charArray45);
        boolean boolean48 = strList5.equals((java.lang.Object) charArray45);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.clone(charArray45);
        java.lang.Character[] charArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray50, '4');
        java.lang.Character[] charArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray50);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray53, ' ');
        java.lang.Character[] charArray56 = org.apache.commons.lang3.ArrayUtils.toObject(charArray55);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(charArray55, '4');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.addAll(charArray49, charArray55);
        java.lang.Class<?> wildcardClass60 = charArray49.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{4,#,a,4,#}" + "'", str35, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a, a]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        short[] shortArray27 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray31 = new java.lang.Short[] {};
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray27, shortArray34);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) 0, 0);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray42 = null;
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(shortArray41, shortArray46);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray46);
        java.lang.Long[] longArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray49);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray51);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray51);
        java.lang.Long[] longArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray54);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray54);
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray56, (long) (byte) 10);
        long[] longArray63 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray63, 1L);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray63);
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.addAll(longArray56, longArray63);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray51, longArray67);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) shortArray46, (java.lang.Object) longArray51);
        short[] shortArray70 = null;
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray46, shortArray70);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray53, false);
        boolean[] booleanArray63 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, (int) (byte) 0, 0);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, 4, (int) '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray57, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(booleanArray46, booleanArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder0.append((long) 4, (long) (-1));
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray75);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.clone(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray87 = new char[] { '#', 'a', 'a' };
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.addAll(charArray83, charArray87);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray83, ' ');
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder74.append(charArray77, charArray91);
        java.lang.Character[] charArray93 = org.apache.commons.lang3.ArrayUtils.toObject(charArray91);
        char[] charArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray93);
        java.lang.Character[] charArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray93);
        char[] charArray96 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray95);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray99 = org.apache.commons.lang3.ArrayUtils.add(charArray96, (int) (byte) -1, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[4, #, a, 4, #]");
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        short[] shortArray6 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) (byte) 0, (int) (short) -1);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 1);
        java.lang.Short[] shortArray12 = new java.lang.Short[] {};
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 1);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) -1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) 0);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray21);
        java.lang.Short[] shortArray23 = new java.lang.Short[] {};
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) 1);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray26, (short) 0);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray26);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray26, (short) (byte) 10, (int) (short) -1);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray26, (short) (byte) 0, (int) (byte) 0);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray26);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray36);
        short[] shortArray43 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray43, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray47 = new java.lang.Short[] {};
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) 1);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray43, shortArray50);
        java.lang.Short[] shortArray52 = new java.lang.Short[] {};
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) 1);
        java.lang.Short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray55);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray55);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray37, shortArray43);
        java.lang.Short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59, (short) 0);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[100, 0, 0, 1, -1]");
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray36);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.subarray(intArray37, 0, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray40);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray40, (int) (byte) 100);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray40, 5, 1);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray59 = new java.lang.Byte[][] { byteArray52, byteArray58 };
        java.lang.Byte[][] byteArray62 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray59, (int) '#', 10);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray69);
        java.lang.Byte[][] byteArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray59, (java.lang.Object) intArray69);
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray69, 1);
        int[] intArray75 = org.apache.commons.lang3.ArrayUtils.remove(intArray73, (int) (byte) 1);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray75);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder31.append(intArray40, intArray75);
        float[] floatArray78 = null;
        float[] floatArray84 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray84);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray84);
        float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray84, (int) (byte) 1, 0);
        float[] floatArray92 = new float[] { (byte) -1, 1L };
        int int94 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray92, (float) 10L);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray89, floatArray92);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray92);
        float[] floatArray97 = org.apache.commons.lang3.ArrayUtils.clone(floatArray92);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder31.append(floatArray78, floatArray92);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[]");
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(floatArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray97), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray18 = org.apache.commons.lang3.ArrayUtils.add(intArray15, (int) '#', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 100);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, 0, (int) (byte) 1);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray17, (int) 'a', (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0);
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray1, (double) 100);
        double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray4, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        boolean[] booleanArray5 = new boolean[] { false, true, false, false, false };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray9, false, (int) (short) 1);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray9, (int) (short) 1);
        boolean[] booleanArray21 = new boolean[] { false, false, false, true, false, false };
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray21, true);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, true);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray21, (int) (short) 1, 1);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, true);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray21, true);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray9, booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        boolean[] booleanArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, (int) '#', (int) (short) 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray42, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder19.append((java.lang.Object) ' ', (java.lang.Object) charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray60);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray61, intArray62);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(intArray62, (int) '4');
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.add(intArray62, (int) (short) 100);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray62);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray62);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray62, (int) (short) 1);
        int[] intArray72 = new int[] {};
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray72, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder53.append(intArray62, intArray73);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray73);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.subarray(intArray73, 100, 100);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray79);
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.add(intArray79, (int) '4');
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray82);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.clone(intArray83);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray84);
        java.lang.Integer[] intArray86 = org.apache.commons.lang3.ArrayUtils.toObject(intArray84);
        java.lang.Integer[] intArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray86);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[52]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[52]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[52]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[52]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertNotNull(intArray87);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        java.lang.Object[][] objArray0 = null;
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray13 = new java.lang.Byte[][] { byteArray6, byteArray12 };
        java.lang.Byte[][] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray13, (int) '#', 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        java.lang.Byte[][] byteArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray13, (java.lang.Object) intArray23);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) (short) -1);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) ' ');
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray23);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) '4');
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, 10);
        java.lang.Object[][] objArray35 = org.apache.commons.lang3.ArrayUtils.add(objArray0, (java.lang.Object[]) intArray23);
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) (short) -1);
        java.lang.Object obj38 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.lang.String[] strArray45 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.stream.Stream<java.lang.String> strStream48 = strList46.parallelStream();
        java.lang.String[] strArray51 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.stream.Stream<java.lang.String> strStream54 = strList52.parallelStream();
        boolean boolean55 = strList46.addAll((java.util.Collection<java.lang.String>) strList52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strList52.equals(obj56);
        int int58 = strList52.size();
        boolean boolean59 = strList41.removeAll((java.util.Collection<java.lang.String>) strList52);
        java.lang.Object obj60 = null;
        java.lang.String[] strArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray63 = org.apache.commons.lang3.ArrayUtils.add(strArray61, "{true,true}");
        java.lang.String[] strArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray63);
        boolean boolean65 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList41, obj60, strArray63);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray37, obj38, strArray63);
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray37, 2);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray37);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray6);
        char[] charArray13 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray17 = new char[] { '#', 'a', 'a' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray17);
        java.lang.String str19 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray13);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray6, charArray13);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, 4, (int) '#');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray3, charArray23);
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray34 = new char[] { '#', 'a', 'a' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray34);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray30, ' ');
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray30);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray23, charArray30);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray30, 'a', 0);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.add(charArray30, ' ');
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray44);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{4,#,a,4,#}" + "'", str19, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        int[] intArray0 = null;
        int[] intArray2 = org.apache.commons.lang3.ArrayUtils.add(intArray0, (int) '#');
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 10, 4);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[35]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray13, (int) (short) 0, '4');
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, '4');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray16, charArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray16);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray16, '4', 100);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray16);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray28);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray28);
        double[] doubleArray34 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray34, (double) (byte) 100, 1.0d);
        double[] doubleArray42 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray34, doubleArray42);
        float[] floatArray48 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray51 = new float[] { (byte) -1, 1L };
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray51, (float) 10L);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray48, floatArray51);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray42, (java.lang.Object) boolean54);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, (int) (short) 0, 1);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray58, (double) (byte) -1);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, (int) (byte) 100, 1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray63);
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray63, (double) (-1.0f), (int) '4', (double) 9);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, (int) (short) 10, 0.0d);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 5, (int) (short) 0);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 1, 2);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray55);
        float[] floatArray61 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray55, (java.lang.Object) boolean67);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray55, (int) (short) 0, 1);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray71, (double) (byte) -1);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray73, (int) (byte) 100, 1);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray76, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray76);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray81, (int) 'a', 3);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray84);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray43);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray86, (double) 2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray79, (short) -1);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray79, (short) 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        long[] longArray59 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, '4');
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray68);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.add(strArray72, "{true,true}");
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray71, (java.lang.Object[]) strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray52, (java.lang.Object) longArray59, strArray72);
        java.lang.String[] strArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray72);
        java.lang.String[] strArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray72);
        java.lang.String[] strArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray72);
        java.lang.CharSequence[] charSequenceArray80 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.CharSequence[]) strArray79);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(charSequenceArray80);
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 1, 3);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray11, (short) (byte) 1, (int) (byte) -1);
        java.lang.Short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray11);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray11, (short) (byte) 0, 1);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.clone(shortArray71);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) 1);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray71);
        java.lang.Object[] objArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray80);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray11 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray11, 1L);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray21, ' ');
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray38 = new char[] { '#', 'a', 'a' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray38);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray38, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder15.append((java.lang.Object) ' ', (java.lang.Object) charArray38);
        java.lang.Long[] longArray49 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray49);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray51);
        char[] charArray56 = new char[] { 'a', '#', ' ' };
        char[][] charArray57 = new char[][] { charArray56 };
        char[][] charArray58 = org.apache.commons.lang3.ArrayUtils.toArray(charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder43.append((java.lang.Object[]) longArray51, (java.lang.Object[]) charArray58);
        long[] longArray64 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray64, 1L);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray64, 0L);
        long[] longArray73 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray73, 1L);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray73, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder43.append(longArray64, longArray73);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray64);
        java.lang.Long[] longArray85 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray85);
        long[] longArray87 = org.apache.commons.lang3.ArrayUtils.addAll(longArray79, longArray86);
        int int90 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray79, (long) 100, (int) (byte) 100);
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray79, (long) 3);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[-1, 32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[-1, 32, 1, -1, 0, 0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray12, '4');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray14);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, a, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, a, #]");
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        double[] doubleArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray0, 100.0d, (double) '4');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        int[] intArray0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray8);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray10, (int) (byte) 0);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray15, (int) (byte) 1);
        int[] intArray18 = new int[] {};
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray18, intArray19);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.addAll(intArray15, intArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(intArray14, intArray18);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(intArray18, (int) 'a');
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray18, (int) (byte) 1);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray0, intArray18);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray40 = new java.lang.Byte[][] { byteArray33, byteArray39 };
        java.lang.Byte[][] byteArray43 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray40, (int) '#', 10);
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray50);
        java.lang.Byte[][] byteArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray40, (java.lang.Object) intArray50);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray50, 1);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray50, (int) '4');
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.addAll(intArray18, intArray56);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray18);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append(true, false);
        long[] longArray55 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray55, 1L);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray55, (long) (short) 100);
        long[] longArray66 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.subarray(longArray66, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray66);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray66);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray66, (long) 5);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.clone(longArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder0.append(longArray55, longArray74);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (-1));
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray21);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray21);
        java.lang.Integer[] intArray24 = org.apache.commons.lang3.ArrayUtils.toObject(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray24, 100);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray26);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.subarray(intArray26, (int) '4', 7);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray34);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray34, (int) (byte) 1, 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(floatArray34, (float) 'a');
        float[] floatArray47 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray47);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray47);
        float[] floatArray54 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray57 = new float[] { (byte) -1, 1L };
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray57, (float) 10L);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray54, floatArray57);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray47, floatArray57);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray68);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray68);
        java.lang.Class<?> wildcardClass71 = intArray68.getClass();
        boolean boolean73 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray57, (java.lang.Object) wildcardClass71, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder0.append(floatArray34, floatArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder0.append((double) (short) 10, (double) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((byte) 10, (byte) 10);
        java.lang.Boolean boolean81 = equalsBuilder80.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        byte[] byteArray4 = new byte[] {};
        byte[] byteArray9 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray4, byteArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) -1);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) -1);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray4);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray4, (int) (byte) -1, (int) '4');
        long[] longArray27 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.subarray(longArray27, 3, (int) (byte) 0);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray27);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray38, true);
        java.lang.String[] strArray44 = new java.lang.String[] { "4", "1" };
        boolean boolean45 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean31, (java.lang.Object) true, strArray44);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray44);
        java.lang.String[] strArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray44);
        boolean boolean48 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray20, strArray47);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray20, (byte) -1, 6);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        float[] floatArray46 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray46);
        float[] floatArray53 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray56 = new float[] { (byte) -1, 1L };
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 10L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray56);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray56);
        float[] floatArray66 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray56, floatArray66);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray75 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray75);
        float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.remove(floatArray75, (int) (short) 1);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray69, floatArray78);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray79, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder34.append(floatArray66, floatArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((byte) 100, (byte) 0);
        equalsBuilder85.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder85.append((double) 10, (double) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray16 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray20 = new char[] { '#', 'a', 'a' };
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.addAll(charArray16, charArray20);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray16, ' ');
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray33, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder10.append((java.lang.Object) ' ', (java.lang.Object) charArray33);
        java.lang.Long[] longArray44 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray44);
        java.lang.Long[] longArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray46);
        char[] charArray51 = new char[] { 'a', '#', ' ' };
        char[][] charArray52 = new char[][] { charArray51 };
        char[][] charArray53 = org.apache.commons.lang3.ArrayUtils.toArray(charArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder38.append((java.lang.Object[]) longArray46, (java.lang.Object[]) charArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder38.append(true, false);
        long[] longArray62 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray62, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        long[] longArray67 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder38.append(longArray64, longArray67);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray64);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray64);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray64, (long) (short) 10);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[-1, 0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[0, -1, 32]");
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray10, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((float) 'a', (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder36.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder36.append((short) (byte) 100, (short) (byte) 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, (int) (byte) 10, (int) (short) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray16, (short) (byte) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray16);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) '4');
        java.lang.Boolean[] booleanArray6 = null;
        java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray0, (java.lang.Object) booleanArray6);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (-1.0f), (double) '4');
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 10L, (double) 1.0f);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray36, (double) 3);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) 0L, (int) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), (int) (short) 100, (double) 100.0f);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray32);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (short) -1);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 100, (int) ' ', (double) 9);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) (short) 0, (int) (short) 10, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray36, byteArray41);
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (byte) -1);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.clone(byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 100);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(byteArray52, (byte) 0);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.clone(byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder35.append(byteArray41, byteArray52);
        float[] floatArray64 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray64);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray64, (int) (byte) 1, 0);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.add(floatArray69, (float) (short) 0);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) (short) 100);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray71, (float) (short) 100);
        float[] floatArray81 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray81);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray81, 0.0f);
        java.lang.Float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray81);
        java.lang.Object[] objArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray85);
        float[] floatArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray85);
        float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray85, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder35.append(floatArray75, floatArray89);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray89);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[0.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray4, doubleArray9, doubleArray14, doubleArray19 };
        java.lang.Double[][] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        java.util.Map<java.lang.Object, java.lang.Object> objMap22 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray20);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) doubleArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) doubleArray20);
        java.lang.Double[] doubleArray32 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray32);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray32);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray32);
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray32);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, (double) (-1.0f));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Double[][] doubleArray40 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (int) ' ', doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(objMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray49, false);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray49, false);
        java.lang.String str55 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray53, "{}");
        boolean[] booleanArray62 = new boolean[] { false, false, false, true, false, false };
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray62);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray62, true);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray62, true);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray62);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray68);
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray73);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray74);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray74, true);
        boolean[] booleanArray83 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray83, (int) (byte) 0, 0);
        boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray74, booleanArray86);
        int int90 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray86, false, (int) (byte) 1);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray68, booleanArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder44.append(booleanArray53, booleanArray68);
        boolean[] booleanArray94 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray68, 0);
        boolean[] booleanArray97 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray68, (int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray97);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[true, true]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{true,true}" + "'", str55, "{true,true}");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[]");
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray87), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(booleanArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray94), "[false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray97), "[]");
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray15 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, (int) (byte) 1, 0);
        float[] floatArray23 = new float[] { (byte) -1, 1L };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) 10L);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray20, floatArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray23);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray28, (float) 'a');
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.add(floatArray28, 0.0f);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray28);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(floatArray28, 100.0f);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        java.lang.Integer[][][][][][] intArray0 = null;
        java.lang.Integer[][][] intArray1 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray2 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray3 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][][] intArray4 = new java.lang.Integer[][][][] { intArray1, intArray2, intArray3 };
        java.lang.Integer[][][] intArray5 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray6 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray7 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][][] intArray8 = new java.lang.Integer[][][][] { intArray5, intArray6, intArray7 };
        java.lang.Integer[][][] intArray9 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray10 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray11 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][][] intArray12 = new java.lang.Integer[][][][] { intArray9, intArray10, intArray11 };
        java.lang.Integer[][][] intArray13 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray14 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray15 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][][] intArray16 = new java.lang.Integer[][][][] { intArray13, intArray14, intArray15 };
        java.lang.Integer[][][][][] intArray17 = new java.lang.Integer[][][][][] { intArray4, intArray8, intArray12, intArray16 };
        java.lang.Integer[][][][][] intArray18 = org.apache.commons.lang3.ArrayUtils.clone(intArray17);
        java.lang.Integer[][][][][][] intArray19 = org.apache.commons.lang3.ArrayUtils.add(intArray0, intArray17);
        java.lang.Integer[][][][][][] intArray20 = null;
        java.lang.Integer[][][] intArray21 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray22 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray23 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][][] intArray24 = new java.lang.Integer[][][][] { intArray21, intArray22, intArray23 };
        java.lang.Integer[][][] intArray25 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray26 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray27 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][][] intArray28 = new java.lang.Integer[][][][] { intArray25, intArray26, intArray27 };
        java.lang.Integer[][][] intArray29 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray30 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray31 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][][] intArray32 = new java.lang.Integer[][][][] { intArray29, intArray30, intArray31 };
        java.lang.Integer[][][] intArray33 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray34 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray35 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][][] intArray36 = new java.lang.Integer[][][][] { intArray33, intArray34, intArray35 };
        java.lang.Integer[][][][][] intArray37 = new java.lang.Integer[][][][][] { intArray24, intArray28, intArray32, intArray36 };
        java.lang.Integer[][][][][] intArray38 = org.apache.commons.lang3.ArrayUtils.clone(intArray37);
        java.lang.Integer[][][][][][] intArray39 = org.apache.commons.lang3.ArrayUtils.add(intArray20, intArray37);
        java.lang.Integer[][][][][][] intArray40 = org.apache.commons.lang3.ArrayUtils.add(intArray19, intArray37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Integer[][][][][][] intArray42 = org.apache.commons.lang3.ArrayUtils.remove(intArray19, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        java.lang.Short[] shortArray14 = new java.lang.Short[] {};
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) 1);
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray17);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray17, (int) (byte) 100, 0);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray22);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        java.lang.Integer[] intArray27 = org.apache.commons.lang3.ArrayUtils.toObject(intArray26);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.clone(intArray26);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray18);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray18);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, 'a');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray2, charArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray20);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.subarray(charArray20, 10, 5);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.clone(charArray27);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Object[] objArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray3);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3, (long) ' ');
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3, (long) '#');
        java.lang.Object[] objArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray3);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray3);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray10);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray10, (long) 5);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray10, 0L);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, (float) (byte) 100, (int) '4');
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, 1.0f);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray10, (float) (short) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray10);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray7);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        java.lang.String[] strArray32 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray41 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.remove(floatArray41, (int) (short) 1);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray35, floatArray44);
        boolean boolean46 = strList33.equals((java.lang.Object) floatArray45);
        int int47 = strList33.size();
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray48, (int) (byte) 1);
        boolean boolean51 = strList33.contains((java.lang.Object) int50);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58, (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 1);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray60);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray65, (byte) 100);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray67, (byte) 10);
        boolean boolean70 = strList33.contains((java.lang.Object) byteArray67);
        boolean boolean72 = strList33.add("4");
        boolean boolean73 = strList9.containsAll((java.util.Collection<java.lang.String>) strList33);
        strList9.clear();
        long[] longArray81 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.subarray(longArray81, 3, (int) (byte) 0);
        long[] longArray85 = org.apache.commons.lang3.ArrayUtils.clone(longArray84);
        boolean boolean86 = strList9.remove((java.lang.Object) longArray84);
        java.lang.Object[] objArray87 = strList9.toArray();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[]");
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.Object[] objArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) booleanArray6);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[false, false, true, true, false]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        equalsBuilder28.reset();
        java.lang.Character[] charArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray51);
        char[] charArray58 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray62 = new char[] { '#', 'a', 'a' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.addAll(charArray58, charArray62);
        java.lang.String str64 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray58);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray51, charArray58);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray75 = new char[] { '#', 'a', 'a' };
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.addAll(charArray71, charArray75);
        java.lang.String str77 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray71);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray71);
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray58, (java.lang.Object) charArray78, false);
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, '4');
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray83);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder28.append(charArray78, charArray83);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.add(charArray83, (int) (byte) 0, 'a');
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray89);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{4,#,a,4,#}" + "'", str64, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{4,#,a,4,#}" + "'", str77, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (short) 1, 1);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray17, false);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, true);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) 10L, (int) (byte) 1, (double) (byte) 100);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.add(doubleArray11, (double) (short) 0);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, 1, (int) (short) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 0.0, 10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (byte) 100);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray11, (float) 2);
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray11);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.clone(floatArray11);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        boolean[] booleanArray0 = null;
        boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, (int) (byte) 0, false);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray3, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false]");
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 1, (int) (short) 0);
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.clone(shortArray26);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray26, (int) (byte) 100, (int) (byte) -1);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.clone(shortArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray19, shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.add(shortArray31, (short) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[100]");
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray4);
        java.lang.Short[] shortArray6 = new java.lang.Short[] {};
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) 1);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray11, (short) -1);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) 1);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray4);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) 1, 0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, 0, (byte) 10);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(byteArray15, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray21, intArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) (byte) 0);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray27, (int) (byte) 1);
        int[] intArray30 = new int[] {};
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray30, intArray31);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.addAll(intArray27, intArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder13.append(intArray26, intArray30);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(intArray30, (int) 'a');
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray12, intArray30);
        java.lang.Integer[] intArray38 = org.apache.commons.lang3.ArrayUtils.toObject(intArray12);
        java.lang.Integer[] intArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray38);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertNotNull(intArray39);
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray7);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 1, 100, 100, 0]");
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        boolean[] booleanArray0 = null;
        boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray0, (int) (short) 10, 4);
        org.junit.Assert.assertNull(booleanArray3);
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray13, (java.lang.Object) (byte) -1, (int) (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray25, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray38 = new char[] { '#', 'a', 'a' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray38);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray34, ' ');
        char[] charArray47 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray51 = new char[] { '#', 'a', 'a' };
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.addAll(charArray47, charArray51);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray51, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder28.append((java.lang.Object) ' ', (java.lang.Object) charArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder28.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append(false, false);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray27, (java.lang.Object) equalsBuilder68);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray18, byteArray27);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(byteArray73, (byte) 0);
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray73, 8, (int) (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0, 0, 100, -1, -1, 0, 100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        short[] shortArray22 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray22, (short) (byte) 0);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray22);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray22);
        java.lang.Class<?> wildcardClass31 = shortArray30.getClass();
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[100, 0, 0, 1, -1, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, 'a');
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray23);
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray34 = new char[] { '#', 'a', 'a' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray34);
        java.lang.String str36 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray30);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray23, charArray30);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray47 = new char[] { '#', 'a', 'a' };
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.addAll(charArray43, charArray47);
        java.lang.String str49 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray43);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray43);
        boolean boolean52 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray30, (java.lang.Object) charArray50, false);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.remove(charArray30, 0);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray30);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray20);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{4,#,a,4,#}" + "'", str36, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{4,#,a,4,#}" + "'", str49, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        long[] longArray26 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray26);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray26, (java.lang.Object) booleanArray37);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray37, true);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray40, true, (int) (byte) 1);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray40);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, false);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray46);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true, true, true, false, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[true, true, true, false, true, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, true, true, false, true, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[true, true, true, false, true, false]");
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.add(booleanArray25, true);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, true, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, true, false, false, true, true]");
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 1, (int) (short) 0);
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.clone(shortArray26);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray26, (int) (byte) 100, (int) (byte) -1);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.clone(shortArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray19, shortArray31);
        java.lang.Short[] shortArray33 = new java.lang.Short[] {};
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) 0);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray38, (short) -1);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray38, (short) 0);
        short[] shortArray48 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray48, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray52 = new java.lang.Short[] {};
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) 1);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray48, shortArray55);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray48, (short) 0, 0);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.add(shortArray48, (int) (byte) 0, (short) 0);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray62, (short) (byte) 1, (int) (short) 0);
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray62, (short) (byte) -1, 0);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray62, (int) (byte) 100, (int) (byte) 100);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray42, shortArray71);
        java.lang.Short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray71);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray71);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray71);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray7, (int) (short) 0, (long) 10);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray7);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[10, 0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 1, 100, 100, 0]");
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray23, 100, (int) 'a');
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[]");
        org.junit.Assert.assertNotNull(floatArray27);
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        java.lang.Long[] longArray3 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray7 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray11 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[][] longArray12 = new java.lang.Long[][] { longArray3, longArray7, longArray11 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder13.append((int) (byte) 0, (int) (byte) 10);
        java.lang.Long[][] longArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray12, (java.lang.Object) equalsBuilder19);
        java.lang.Long[][] longArray21 = org.apache.commons.lang3.ArrayUtils.toArray(longArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray21);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) 100);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray30, byteArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) -1);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray30);
        float[] floatArray42 = new float[] { (byte) -1, 1L };
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray42, (float) 10L);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray42, (float) (short) 100);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.clone(floatArray42);
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray48);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray30, (java.lang.Object) floatArray49);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.add(byteArray30, (byte) -1);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(shortArray3, (short) (byte) 10);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.remove(shortArray3, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (byte) 10);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 1.0d);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray37, 0.0d);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, 1.0d, 1, (double) 4);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, 10.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        long[] longArray9 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray9);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, (long) (short) 100);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) '#');
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray7, (java.lang.Object) longArray20, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray23, false);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        java.lang.Boolean[] booleanArray32 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray32);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray26, booleanArray35);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray36, false);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray36, true);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) (short) 10, 8, (double) 100.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.subarray(charArray13, (int) 'a', (int) (short) 10);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.add(charArray17, (int) (short) 0, '4');
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '4');
        java.lang.Character[] charArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray24);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray25);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray20);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray2, charArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(charArray30, '#');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        java.util.stream.Stream[] streamArray1 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray2 = (java.util.stream.Stream<java.lang.String>[]) streamArray1;
        java.util.stream.Stream<java.lang.String>[] strStreamArray3 = org.apache.commons.lang3.ArrayUtils.clone((java.util.stream.Stream<java.lang.String>[]) streamArray1);
        java.util.stream.Stream<java.lang.String>[] strStreamArray4 = org.apache.commons.lang3.ArrayUtils.clone(strStreamArray3);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strStreamArray3);
        org.junit.Assert.assertNotNull(streamArray1);
        org.junit.Assert.assertNotNull(strStreamArray2);
        org.junit.Assert.assertNotNull(strStreamArray3);
        org.junit.Assert.assertNotNull(strStreamArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray17, (byte) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray20, (byte) 100);
        java.lang.Byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray20);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) byteArray20, 3);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray28, false, (int) '#');
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.add(booleanArray28, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, true, true, false, false]");
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        double[] doubleArray56 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray56, (double) (byte) 100, 1.0d);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray56, 2, (int) 'a');
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray56, (double) '4');
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray52, doubleArray56);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray52, (double) 100.0f, (int) (short) 0);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray52, (double) 100);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray52, 10.0d);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray72);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray73, (double) 10L, (double) 10);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 0.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 0.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) (byte) 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray5);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[100, 0, 0, 1, -1]");
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        double[] doubleArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray0, (double) 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        long[] longArray52 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray54);
        long[] longArray57 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder28.append(longArray54, longArray57);
        float[] floatArray62 = new float[] { (short) -1, 10, (short) 1 };
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray62, (int) '4', (int) (byte) 100);
        float[] floatArray68 = new float[] { (byte) -1, 1L };
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray68, (float) 10L);
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray68, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder28.append((java.lang.Object) floatArray62, (java.lang.Object) floatArray72);
        java.lang.Float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray72);
        float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray72, (int) (short) 10, (int) (short) 100);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[]");
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray14, true);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, 5);
        boolean[] booleanArray28 = new boolean[] { false, false, false, true, false, false };
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray28);
        boolean[] booleanArray36 = new boolean[] { false, false, false, true, false, false };
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray28, booleanArray36);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray36, true);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray14, booleanArray40);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray41, true);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray41, (int) (short) 1, (int) (byte) -1);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, true, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]");
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, (int) '#', (int) (short) 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray42, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder19.append((java.lang.Object) ' ', (java.lang.Object) charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray60);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray61, intArray62);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(intArray62, (int) '4');
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.add(intArray62, (int) (short) 100);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray62);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray62);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray62, (int) (short) 1);
        int[] intArray72 = new int[] {};
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray72, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder53.append(intArray62, intArray73);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray73);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.subarray(intArray73, 100, 100);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray79);
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.add(intArray79, (int) '4');
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = org.apache.commons.lang3.ArrayUtils.remove(intArray82, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[52]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[52]");
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        long[] longArray0 = null;
        long[] longArray1 = null;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.addAll(longArray0, longArray1);
        org.junit.Assert.assertNull(longArray2);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) 1, (int) '#', (double) 0.0f);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, (int) (short) 0, (int) '#');
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray39, (int) (byte) -1, (int) (short) 10);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) 8);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[8.0]");
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) 0);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) (-1), 7, (double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        short[] shortArray6 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) (byte) 0, (int) (short) -1);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 1);
        java.lang.Short[] shortArray12 = new java.lang.Short[] {};
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 1);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) -1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) 0);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray21);
        java.lang.Short[] shortArray23 = new java.lang.Short[] {};
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) 1);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray26, (short) 0);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray26);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray26, (short) (byte) 10, (int) (short) -1);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray26, (short) (byte) 0, (int) (byte) 0);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray26);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray36);
        short[] shortArray43 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray43, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray47 = new java.lang.Short[] {};
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) 1);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray43, shortArray50);
        java.lang.Short[] shortArray52 = new java.lang.Short[] {};
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) 1);
        java.lang.Short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray55);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray55);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray37, shortArray43);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(shortArray43, (short) 100);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray43);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray43, (short) 0, 7);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        boolean[] booleanArray0 = new boolean[] {};
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, (int) (byte) 10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 0, 10.0f);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray11, (float) '#');
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        java.lang.Character[] charArray6 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray13 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray20 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[][] charArray21 = new java.lang.Character[][] { charArray6, charArray13, charArray20 };
        java.lang.Character[][][] charArray22 = new java.lang.Character[][][] { charArray21 };
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23, '4');
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32);
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray25, (java.lang.Object) byteArray32, true);
        java.lang.Character[] charArray41 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray42 = new java.lang.Character[][] { charArray41 };
        java.lang.Character[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray32, (java.lang.Object[]) charArray43);
        java.lang.Character[][][] charArray45 = org.apache.commons.lang3.ArrayUtils.add(charArray22, charArray43);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray22, (java.lang.Object[]) intArray48);
        java.lang.Integer[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray48, 9);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray48);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray54);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        java.lang.Integer[] intArray6 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(intArray4, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 0);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 0);
        java.lang.Short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[-1, 0, 0, 1]");
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray5);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray19 = new char[] { '#', 'a', 'a' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray15, charArray19);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray15, ' ');
        char[] charArray28 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray32 = new char[] { '#', 'a', 'a' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray32);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray32, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder9.append((java.lang.Object) ' ', (java.lang.Object) charArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder9.append((int) (short) 1, 10);
        boolean boolean41 = equalsBuilder9.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder9.appendSuper(false);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray7, (java.lang.Object) equalsBuilder43);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 1, -1, 10]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray45);
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) (-1), (int) '4');
        long[] longArray16 = null;
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray16);
        java.lang.Long[] longArray23 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray23);
        java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray25);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray27);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.addAll(longArray17, longArray27);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 1L);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1, 0, 100, 100, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray17, true);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray17, false);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray27);
        java.lang.Byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray28);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray28, (byte) 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray31, (byte) 100);
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray31);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray17, (java.lang.Object) byteArray31, 3);
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray17);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray17, true);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray5, booleanArray39);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray39);
        boolean[] booleanArray47 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray47, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray47);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.add(booleanArray47, 5, false);
        boolean[] booleanArray61 = new boolean[] { false, false, false, true, false, false };
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray61);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray61, (int) (short) 1);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray54, booleanArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray54);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) booleanArray39, (java.lang.Object) booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[true, true, true, false, true, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        int[] intArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray0, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, 0, 0);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.subarray(charArray21, (int) '#', (int) (short) 100);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.subarray(charArray25, (int) '4', (int) (byte) -1);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.stream.Stream<java.lang.String> strStream36 = strList34.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream37 = strList34.stream();
        java.util.Spliterator<java.lang.String> strSpliterator38 = strList34.spliterator();
        java.lang.String[] strArray43 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray52 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray52);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.remove(floatArray52, (int) (short) 1);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray46, floatArray55);
        boolean boolean57 = strList44.equals((java.lang.Object) floatArray56);
        int int58 = strList44.size();
        java.util.stream.Stream<java.lang.String> strStream59 = strList44.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList44.spliterator();
        boolean boolean61 = strList34.retainAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean62 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray28, (java.lang.Object) boolean61);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strSpliterator38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (short) 10);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toObject(longArray9);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray9, 8, (long) 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray10);
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) (-1));
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, (long) 1);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray16, (long) 5);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.subarray(longArray18, 8, (int) (byte) 100);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[]");
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        java.lang.Short[] shortArray8 = new java.lang.Short[] {};
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray11, 1, (int) (byte) 100);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.add(shortArray15, (short) (byte) 10);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[10]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray10, (float) (byte) 1);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray19, 0.0f);
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray29);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray29, (int) (byte) 1, 0);
        float[] floatArray37 = new float[] { (byte) -1, 1L };
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray37, (float) 10L);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray34, floatArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray37);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray19, floatArray37);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray19);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray19);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray10, floatArray19);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.add(floatArray10, (float) 8);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[8.0]");
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        byte[] byteArray20 = new byte[] {};
        byte[] byteArray25 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray20, byteArray25);
        java.lang.Byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray25);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27);
        java.lang.Boolean[] booleanArray32 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray32);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray32);
        int int35 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray34);
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray39);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, true);
        boolean[] booleanArray49 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (byte) 0, 0);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray40, booleanArray52);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray53);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray34, booleanArray53);
        boolean[] booleanArray57 = new boolean[] { true };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray61);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray62, false);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray62);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray62, true);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray57, booleanArray62);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray34, booleanArray68);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray27, (java.lang.Object) booleanArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray69);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray69, false);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray69);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray69, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 1, -1, 10]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true, true, true, false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 4 + "'", int73 == 4);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        float[] floatArray11 = new float[] { (byte) -1, 1L };
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray11, (float) 10L);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) int13);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, true, true, false]");
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, (int) (short) 100, 0);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(intArray11, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        boolean[] booleanArray0 = new boolean[] {};
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true, (int) '4');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray3, true, 8);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, 0, true);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true]");
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        boolean[] booleanArray0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray7 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray11 = new char[] { '#', 'a', 'a' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray11);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray7, ' ');
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray24, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder1.append((java.lang.Object) ' ', (java.lang.Object) charArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder1.append((int) (short) 1, 10);
        boolean[] booleanArray39 = new boolean[] { false, false, false, true, false, false };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray39);
        boolean[] booleanArray47 = new boolean[] { false, false, false, true, false, false };
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray47);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray39, booleanArray47);
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray53);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray54, false);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray54, false);
        boolean[] booleanArray64 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray64, (int) (byte) 0, 0);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray64, 4, (int) '4');
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray58, booleanArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder1.append(booleanArray47, booleanArray58);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray47);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray47, false);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[true]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        boolean[] booleanArray0 = new boolean[] {};
        boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray0, true);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray2);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100L, 2, (double) (short) -1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray7, (double) (-1L));
        double[] doubleArray17 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray17, (double) (byte) 100, 1.0d);
        double[] doubleArray25 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray17, doubleArray25);
        float[] floatArray31 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray34 = new float[] { (byte) -1, 1L };
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) 10L);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray31, floatArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray25, (java.lang.Object) boolean37);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, (int) (short) 0, 1);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray7, doubleArray42);
        java.lang.Double[] doubleArray47 = new java.lang.Double[] { 10.0d, 1.0d };
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray47);
        double[] doubleArray52 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray52, (double) (byte) 100, 1.0d);
        double[] doubleArray60 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray52, doubleArray60);
        float[] floatArray66 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray69 = new float[] { (byte) -1, 1L };
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray69, (float) 10L);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray66, floatArray69);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray60, (java.lang.Object) boolean72);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, (int) (short) 0, 1);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray76, (double) (byte) -1);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray78, (int) (byte) 100, 1);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray81, (int) (byte) -1, (int) (short) 100);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray48, doubleArray81);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray42, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray42, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        double[] doubleArray0 = null;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray0, (double) 9);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        equalsBuilder0.reset();
        double[] doubleArray39 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) (byte) 100, 1.0d);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray47);
        float[] floatArray53 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray56 = new float[] { (byte) -1, 1L };
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 10L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray56);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray47, (java.lang.Object) boolean59);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, (int) (short) 0, 1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray47);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 1.0f, (-1));
        java.lang.Double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray68);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) (-1), (java.lang.Object) doubleArray69);
        java.lang.Character[] charArray77 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray77);
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray77, ' ');
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray77);
        java.lang.Character[] charArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder0.append((java.lang.Object[]) doubleArray69, (java.lang.Object[]) charArray81);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray69);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        short[] shortArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray0, (short) -1, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray6);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray9);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) '4', (int) (short) 0);
        long[] longArray17 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 0L);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray21, (long) (byte) 1, (int) (short) 1);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray21, (long) 3, (int) 'a');
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(longArray21, (long) 7);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.remove(longArray21, (int) (byte) 0);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray11);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(longArray11, (long) (-1));
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, -1, 32]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[-1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray24);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.remove(intArray24, 0);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray27, 4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[4]");
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray9);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        long[] longArray0 = null;
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.subarray(longArray0, (int) (byte) -1, 3);
        org.junit.Assert.assertNull(longArray3);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray7);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray19 = new char[] { '#', 'a', 'a' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray15, charArray19);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray15, ' ');
        char[] charArray28 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray32 = new char[] { '#', 'a', 'a' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray32);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray32, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder9.append((java.lang.Object) ' ', (java.lang.Object) charArray32);
        float[] floatArray43 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray43);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray43, (int) (byte) 1, 0);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(floatArray43, (float) 'a');
        float[] floatArray56 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray56);
        float[] floatArray63 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray66 = new float[] { (byte) -1, 1L };
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray66, (float) 10L);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray63, floatArray66);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray56, floatArray66);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray77);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray77);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray66, (java.lang.Object) wildcardClass80, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder9.append(floatArray43, floatArray66);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray7, (java.lang.Object) floatArray66, (int) (byte) -1);
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray86, (long) 100);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 3 + "'", int88 == 3);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 0);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray59, (short) 0, (int) '#');
        int int78 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray59, (short) (byte) 100, 100);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        float[] floatArray46 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray46);
        float[] floatArray53 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray56 = new float[] { (byte) -1, 1L };
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 10L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray56);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray56);
        float[] floatArray66 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray56, floatArray66);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray75 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray75);
        float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.remove(floatArray75, (int) (short) 1);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray69, floatArray78);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray79, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder34.append(floatArray66, floatArray81);
        float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray66);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.remove(floatArray83, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        float[] floatArray12 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, 0.0f);
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        long[] longArray18 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray16, (java.lang.Object) longArray18);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray18);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.subarray(longArray21, (int) (short) 10, (int) 'a');
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.subarray(longArray21, 5, 4);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray21, (long) (byte) -1, 4);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray21);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[-1, 0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray21 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 100L, 2, (double) (short) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 100.0f, (int) (short) 100);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray22);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 0.0d, 7);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0, -1.0, 100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, -1.0, 10.0, 52.0]");
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray40);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) (byte) 0, (double) 2);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.add(doubleArray40, (double) (byte) 100);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) (short) 1);
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) 0L, (int) (short) 1, (double) 6);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray13 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, (long) 0);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray13);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1]");
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        char[] charArray3 = new char[] { 'a', '#', ' ' };
        char[][] charArray4 = new char[][] { charArray3 };
        char[][] charArray5 = org.apache.commons.lang3.ArrayUtils.toArray(charArray4);
        java.lang.Object obj6 = new java.lang.Object();
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray5, obj6, 0);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray5);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) -1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray10);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.remove(byteArray13, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, -1, 0]");
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, true);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, true, (int) (byte) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) -1, (int) '4');
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray42, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder19.append((java.lang.Object) ' ', (java.lang.Object) charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((double) 0.0f, 0.0d);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 1);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) -1);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray70 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray65, byteArray70);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray65, (byte) -1);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray65, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder50.append(byteArray64, byteArray65);
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray64);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.contains(byteArray0, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        java.lang.Object obj0 = null;
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray7);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 100L, 2, (double) (short) -1);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 100.0f, (int) (short) 100);
        double[] doubleArray19 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray19, (double) (byte) 100, 1.0d);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray19, doubleArray27);
        float[] floatArray33 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray36 = new float[] { (byte) -1, 1L };
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray36, (float) 10L);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray33, floatArray36);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray27, (java.lang.Object) boolean39);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, (int) (short) 0, 1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray27);
        double[] doubleArray48 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray48, (double) (byte) 100, 1.0d);
        double[] doubleArray56 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray48, doubleArray56);
        float[] floatArray62 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray65 = new float[] { (byte) -1, 1L };
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray65, (float) 10L);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray62, floatArray65);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray56, (java.lang.Object) boolean68);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray56);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray44, doubleArray56);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray8, doubleArray44);
        java.lang.Double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray73);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray44, doubleArray74);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray74);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, (byte) 100);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.clone(byteArray21);
        long[] longArray24 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray24);
        java.lang.Long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toObject(longArray24);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray26, (long) (short) 1);
        boolean boolean29 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray22, (java.lang.Object) longArray28);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray22, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[-1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 0, -1, 100, 0, 0, 100]");
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        java.lang.Character[] charArray6 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray13 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray20 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[][] charArray21 = new java.lang.Character[][] { charArray6, charArray13, charArray20 };
        java.lang.Character[][][] charArray22 = new java.lang.Character[][][] { charArray21 };
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23, '4');
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32);
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray25, (java.lang.Object) byteArray32, true);
        java.lang.Character[] charArray41 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray42 = new java.lang.Character[][] { charArray41 };
        java.lang.Character[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray32, (java.lang.Object[]) charArray43);
        java.lang.Character[][][] charArray45 = org.apache.commons.lang3.ArrayUtils.add(charArray22, charArray43);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray22, (java.lang.Object[]) intArray48);
        java.lang.Integer[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray51, 2);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray53, 0);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.clone(intArray53);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray56, 8, 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        java.lang.Long[] longArray0 = null;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) (byte) 0);
        org.junit.Assert.assertNull(longArray2);
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray10 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray10, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray10);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray10);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toObject(longArray16);
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17, (long) 'a');
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray19);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray22 = org.apache.commons.lang3.ArrayUtils.remove(longArray6, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean[] booleanArray31 = new boolean[] { false, false, false, true, false, false };
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray23, booleanArray31);
        short[] shortArray38 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean33, (java.lang.Object) shortArray38);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray38);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray44, (short) 1);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(shortArray44, (short) 1);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray44, (short) (byte) 100, (int) (short) 10);
        java.lang.Short[] shortArray52 = new java.lang.Short[] {};
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) 1);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray55, (short) 0);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray55);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray55, (short) (byte) 10, (int) (short) -1);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(shortArray55, (short) 10);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray55);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray44, (short) 100, (int) 'a');
        java.lang.Short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray44);
        java.lang.Short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray68);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray68, (short) 0);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[-1, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[-1, 0, 0, 1]");
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((int) (short) 0, (int) (byte) 100);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray63 = new char[] { '#', 'a', 'a' };
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray63);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray63, 'a', (int) (byte) 0);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray63, '4');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.clone(charArray63);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77, true);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray79, true);
        double[] doubleArray85 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray85, (double) (byte) 100, 1.0d);
        int int92 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray85, 100.0d, (int) (short) 1, (double) 1L);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean81, (java.lang.Object) doubleArray85);
        java.lang.Double[] doubleArray94 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray85);
        java.lang.Double[] doubleArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray94);
        double[] doubleArray97 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray94, (double) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder50.append((java.lang.Object) charArray70, (java.lang.Object) doubleArray94);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a, a]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray13 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, (long) 0);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray13);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, (long) 100);
        char[] charArray28 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray32 = new char[] { '#', 'a', 'a' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray32);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.subarray(charArray32, (int) 'a', (int) (short) 10);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray32, '4');
        char[] charArray44 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray48 = new char[] { '#', 'a', 'a' };
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.addAll(charArray44, charArray48);
        java.lang.String str50 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray44);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray44);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.addAll(charArray32, charArray51);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.clone(charArray32);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.remove(charArray32, (int) (short) 1);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray20, (java.lang.Object) charArray55);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray55, '#', (int) (short) 10);
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray55, 'a');
        java.lang.Character[] charArray62 = org.apache.commons.lang3.ArrayUtils.toObject(charArray61);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray61);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, -1]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{4,#,a,4,#}" + "'", str50, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray6 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, (int) (short) 1);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray9);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, (float) (byte) 10);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray0, 0.0f);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, 0.0f, 6);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray14, (float) 4);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[10.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, (float) 10);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 5, (float) 7);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.remove(floatArray11, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0, 7.0]");
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        equalsBuilder50.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder50.append((long) (short) -1, (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((double) '4', (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append(2, (int) (short) 0);
        boolean boolean61 = equalsBuilder60.isEquals();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 3);
        java.lang.Integer[] intArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Short[] shortArray34 = new java.lang.Short[] {};
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 1);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 0);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray39, (short) -1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray39, (short) 0);
        java.lang.String[] strArray45 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.lang.String[] strArray50 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.stream.Stream<java.lang.String> strStream53 = strList51.parallelStream();
        java.lang.String[] strArray56 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.stream.Stream<java.lang.String> strStream59 = strList57.parallelStream();
        boolean boolean60 = strList51.addAll((java.util.Collection<java.lang.String>) strList57);
        java.lang.Object obj61 = null;
        boolean boolean62 = strList57.equals(obj61);
        int int63 = strList57.size();
        boolean boolean64 = strList46.removeAll((java.util.Collection<java.lang.String>) strList57);
        java.lang.String[] strArray67 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.stream.Stream<java.lang.String> strStream70 = strList68.parallelStream();
        boolean boolean71 = strList57.addAll((java.util.Collection<java.lang.String>) strList68);
        java.lang.String[] strArray73 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.lang.String[] strArray78 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.stream.Stream<java.lang.String> strStream81 = strList79.parallelStream();
        java.lang.String[] strArray84 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.stream.Stream<java.lang.String> strStream87 = strList85.parallelStream();
        boolean boolean88 = strList79.addAll((java.util.Collection<java.lang.String>) strList85);
        java.lang.Object obj89 = null;
        boolean boolean90 = strList85.equals(obj89);
        int int91 = strList85.size();
        boolean boolean92 = strList74.removeAll((java.util.Collection<java.lang.String>) strList85);
        java.util.Iterator<java.lang.String> strItor93 = strList85.iterator();
        boolean boolean94 = strList57.retainAll((java.util.Collection<java.lang.String>) strList85);
        java.util.Spliterator<java.lang.String> strSpliterator95 = strList57.spliterator();
        boolean boolean97 = strList57.add("{100,0,1,-1}");
        boolean boolean98 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray22, (java.lang.Object) shortArray39, (java.util.Collection<java.lang.String>) strList57);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strStream81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2 + "'", int91 == 2);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strItor93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strSpliterator95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, (long) (short) 100);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray8, (long) '#', 100);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (short) 10);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, 0L);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray11, (long) 7);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray10, (float) (byte) 1);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13);
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray14, (float) (short) -1, 7);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(1.0f, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('#', '#');
        java.util.stream.Stream[] streamArray52 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray53 = (java.util.stream.Stream<java.lang.String>[]) streamArray52;
        java.util.stream.Stream<java.lang.String>[] strStreamArray54 = org.apache.commons.lang3.ArrayUtils.clone((java.util.stream.Stream<java.lang.String>[]) streamArray52);
        java.util.stream.Stream<java.lang.String>[] strStreamArray55 = org.apache.commons.lang3.ArrayUtils.toArray((java.util.stream.Stream<java.lang.String>[]) streamArray52);
        java.lang.String[] strArray58 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream62 = strList59.stream();
        java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[] strBaseStreamArray63 = org.apache.commons.lang3.ArrayUtils.add((java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[]) strStreamArray55, (java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>) strStream62);
        boolean[] booleanArray67 = new boolean[] { true, true, true };
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray67, true);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray67, false);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray67);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray72, false, 1);
        java.lang.Boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder47.append((java.lang.Object[]) strStreamArray55, (java.lang.Object[]) booleanArray76);
        boolean[] booleanArray78 = null;
        java.lang.Boolean[] booleanArray84 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray84);
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray85);
        boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray85, false);
        java.lang.Boolean[] booleanArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray85);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray85, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder47.append(booleanArray78, booleanArray91);
        java.lang.Boolean boolean93 = equalsBuilder47.build();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(streamArray52);
        org.junit.Assert.assertNotNull(strStreamArray53);
        org.junit.Assert.assertNotNull(strStreamArray54);
        org.junit.Assert.assertNotNull(strStreamArray55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strBaseStreamArray63);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray88), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.remove(byteArray0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        byte[] byteArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 0);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray0);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 10, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.remove(byteArray0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray9);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray9);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4', (int) (byte) 1);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(charArray9, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray14, true);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, 5);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray14, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray23);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.add(booleanArray23, 6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, true, false, false]");
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        java.lang.Short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray3, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.subarray(charArray28, (int) 'a', (int) (short) 10);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '4');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray28);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray0);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray20);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray20, 0.0f, (-1));
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray36);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray36);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray36, (int) (byte) -1, (int) ' ');
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray41);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray41, 10, (int) '#');
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray41, 10.0f, 9);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        boolean[] booleanArray3 = new boolean[] { true, true, true };
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray3, false);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false, 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) (byte) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.remove(shortArray11, 3);
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray14);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, 0.0d, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        boolean boolean35 = equalsBuilder34.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.appendSuper(true);
        boolean boolean38 = equalsBuilder34.isEquals();
        java.lang.Boolean boolean39 = equalsBuilder34.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray12);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, (int) (byte) -1, (int) (short) 100);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) 'a', (int) (short) 100);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray35);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray35);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray40, (int) (byte) 100, (int) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) -1 };
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 0);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray3, 1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray19 = new char[] { '#', 'a', 'a' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray15, charArray19);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray15, ' ');
        char[] charArray28 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray32 = new char[] { '#', 'a', 'a' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray32);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray32, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder9.append((java.lang.Object) ' ', (java.lang.Object) charArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder9.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((long) 4, (long) (short) 1);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray47, byteArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray47, (byte) -1);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray47, (byte) -1);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray47, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray47);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray67, (byte) 1);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(byteArray69, (byte) 100);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(byteArray69, (byte) 1);
        java.lang.Byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray69);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray74, (byte) 100);
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.add(byteArray76, (byte) 10);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder43.append(byteArray47, byteArray76);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray76);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 10);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (short) 100, (double) 'a');
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 0.0, 1.0]");
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        java.util.RandomAccess[] randomAccessArray0 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray1 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[][] randomAccessArray2 = new java.util.RandomAccess[][] { randomAccessArray0, randomAccessArray1 };
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.util.stream.Stream<java.lang.String> strStream17 = strList7.parallelStream();
        boolean boolean19 = strList7.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray24 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.remove(floatArray33, (int) (short) 1);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray27, floatArray36);
        boolean boolean38 = strList25.equals((java.lang.Object) floatArray37);
        int int39 = strList25.size();
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray40, (int) (byte) 1);
        boolean boolean43 = strList25.contains((java.lang.Object) int42);
        boolean boolean44 = strList7.addAll((java.util.Collection<java.lang.String>) strList25);
        java.lang.String[] strArray49 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray58 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray58);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.remove(floatArray58, (int) (short) 1);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray52, floatArray61);
        boolean boolean63 = strList50.equals((java.lang.Object) floatArray62);
        int int64 = strList50.size();
        boolean boolean65 = strList7.removeAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Iterator<java.lang.String> strItor66 = strList50.iterator();
        java.util.Iterator<java.lang.String> strItor67 = strList50.iterator();
        java.util.RandomAccess[] randomAccessArray68 = new java.util.RandomAccess[] { strList50 };
        java.util.RandomAccess[] randomAccessArray69 = org.apache.commons.lang3.ArrayUtils.clone(randomAccessArray68);
        java.lang.String[][] strArray70 = new java.lang.String[][] {};
        java.lang.String[][] strArray71 = org.apache.commons.lang3.ArrayUtils.clone(strArray70);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.CharSequence[][]) strArray70);
        java.lang.Object[] objArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) strArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) randomAccessArray69, (java.lang.Object) objArray73);
        java.util.RandomAccess[] randomAccessArray75 = org.apache.commons.lang3.ArrayUtils.clone(randomAccessArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.RandomAccess[][] randomAccessArray76 = org.apache.commons.lang3.ArrayUtils.add(randomAccessArray2, (int) (byte) 100, randomAccessArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(randomAccessArray0);
        org.junit.Assert.assertNotNull(randomAccessArray1);
        org.junit.Assert.assertNotNull(randomAccessArray2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(randomAccessArray68);
        org.junit.Assert.assertNotNull(randomAccessArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(randomAccessArray75);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (byte) -1);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray13);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray14);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, -1]");
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        long[] longArray11 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray9, (java.lang.Object) longArray11);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (-1L));
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) 1, (int) '#', (double) 0.0f);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, (int) (short) 0, (int) '#');
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray39, (int) (byte) -1, (int) (short) 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray43, (double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) (byte) 0);
        java.lang.Short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.clone(shortArray5);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, 9, (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        long[] longArray59 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, '4');
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray68);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.add(strArray72, "{true,true}");
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray71, (java.lang.Object[]) strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray52, (java.lang.Object) longArray59, strArray72);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, 0.0d);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray52);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray79, (double) 4);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray49, false);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray49, false);
        java.lang.String str55 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray53, "{}");
        boolean[] booleanArray62 = new boolean[] { false, false, false, true, false, false };
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray62);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray62, true);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray62, true);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray62);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray68);
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray73);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray74);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray74, true);
        boolean[] booleanArray83 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray83, (int) (byte) 0, 0);
        boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray74, booleanArray86);
        int int90 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray86, false, (int) (byte) 1);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray68, booleanArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder44.append(booleanArray53, booleanArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder92.append((float) (-1L), 0.0f);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[true, true]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{true,true}" + "'", str55, "{true,true}");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[]");
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray87), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray19);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, 'a', (int) '4');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 0, ' ');
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '4');
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray19);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray19);
        java.lang.Character[] charArray32 = org.apache.commons.lang3.ArrayUtils.toObject(charArray31);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ ]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        java.lang.String[] strArray1 = new java.lang.String[] { "{1.0,0.0,10.0,-1.0,1.0,-1.0,0.0,10.0,-1.0}" };
        java.lang.String[][] strArray2 = new java.lang.String[][] { strArray1 };
        java.lang.String[] strArray4 = new java.lang.String[] { "{1.0,0.0,10.0,-1.0,1.0,-1.0,0.0,10.0,-1.0}" };
        java.lang.String[][] strArray5 = new java.lang.String[][] { strArray4 };
        java.lang.String[] strArray7 = new java.lang.String[] { "{1.0,0.0,10.0,-1.0,1.0,-1.0,0.0,10.0,-1.0}" };
        java.lang.String[][] strArray8 = new java.lang.String[][] { strArray7 };
        java.lang.String[][][] strArray9 = new java.lang.String[][][] { strArray2, strArray5, strArray8 };
        java.lang.String[][] strArray11 = new java.lang.String[][] {};
        java.lang.String[][] strArray12 = org.apache.commons.lang3.ArrayUtils.clone(strArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.CharSequence[][]) strArray11);
        java.lang.String[][] strArray14 = org.apache.commons.lang3.ArrayUtils.clone(strArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[][][] strArray15 = org.apache.commons.lang3.ArrayUtils.add(strArray9, 6, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray3, (short) 1);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.clone(shortArray6);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 1, 5);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(shortArray6, (short) 1);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        boolean boolean12 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray2, (java.lang.Object) byteArray9, true);
        java.lang.Character[] charArray18 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray19 = new java.lang.Character[][] { charArray18 };
        java.lang.Character[][] charArray20 = org.apache.commons.lang3.ArrayUtils.toArray(charArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray9, (java.lang.Object[]) charArray20);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray29, (byte) 1);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray31, (byte) 100);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray31, (byte) 1);
        java.lang.Byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray31);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray36, (byte) 100);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.add(byteArray38, (byte) 10);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.clone(byteArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray40);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.remove(byteArray40, 3);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray51, (byte) 1);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(byteArray53, (byte) 100);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(byteArray53, (byte) 1);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray64, (byte) 1);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray66, (int) (byte) 0, (int) (byte) 1);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray53, byteArray69);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray53, (byte) 10);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.add(byteArray53, (byte) -1);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray40, byteArray74);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray74);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(byteArray74, (byte) 0);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray74, (byte) 10);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 0, -1, -1, 100, 0, 0, 0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 0, (int) '#');
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, 100, -1, -1, 0]");
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean[] booleanArray31 = new boolean[] { false, false, false, true, false, false };
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray23, booleanArray31);
        short[] shortArray38 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean33, (java.lang.Object) shortArray38);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray38);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray44, (short) 1);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.clone(shortArray44);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray47, 4, (int) (short) 10);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[-1, 0, 0]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        int int6 = strList3.size();
        java.lang.String[] strArray9 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.stream.Stream<java.lang.String> strStream12 = strList10.parallelStream();
        java.lang.String[] strArray15 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.stream.Stream<java.lang.String> strStream18 = strList16.parallelStream();
        boolean boolean19 = strList10.addAll((java.util.Collection<java.lang.String>) strList16);
        java.lang.Object obj20 = null;
        boolean boolean21 = strList16.equals(obj20);
        java.lang.Object[] objArray22 = strList16.toArray();
        java.util.AbstractCollection[] abstractCollectionArray24 = new java.util.AbstractCollection[2];
        @SuppressWarnings("unchecked")
        java.util.AbstractCollection<java.lang.String>[] strCollectionArray25 = (java.util.AbstractCollection<java.lang.String>[]) abstractCollectionArray24;
        strCollectionArray25[0] = strList3;
        strCollectionArray25[1] = strList16;
        java.util.AbstractCollection<java.lang.String>[] strCollectionArray32 = org.apache.commons.lang3.ArrayUtils.subarray(strCollectionArray25, (-1), (int) '#');
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.util.Collection<java.lang.String>[]) strCollectionArray25);
        // The following exception was thrown during execution in test generation
        try {
            java.util.AbstractCollection<java.lang.String>[] strCollectionArray35 = org.apache.commons.lang3.ArrayUtils.remove(strCollectionArray25, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[4, hi!]");
        org.junit.Assert.assertNotNull(abstractCollectionArray24);
        org.junit.Assert.assertNotNull(strCollectionArray25);
        org.junit.Assert.assertNotNull(strCollectionArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray12);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) (byte) 1, 0);
        float[] floatArray28 = new float[] { (byte) -1, 1L };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray28, (float) 10L);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.clone(floatArray28);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray14, (java.lang.Object) floatArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray14);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, (long) (byte) -1, (-1));
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.add(longArray1, (int) (byte) 1, (long) 2);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        java.lang.Class<?> wildcardClass44 = longArray43.getClass();
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1, 2]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray22 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.remove(floatArray22, (int) (short) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray16, floatArray25);
        boolean boolean27 = strList14.equals((java.lang.Object) floatArray26);
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray33, (float) 1);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray26, floatArray33);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray26);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.add(floatArray26, (-1), 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.Object[] objArray28 = strList13.toArray();
        java.lang.String[] strArray31 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.parallelStream();
        java.lang.String[] strArray37 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.parallelStream();
        boolean boolean41 = strList32.addAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.Object obj42 = null;
        boolean boolean43 = strList38.equals(obj42);
        java.util.Spliterator<java.lang.String> strSpliterator44 = strList38.spliterator();
        boolean boolean45 = strList13.retainAll((java.util.Collection<java.lang.String>) strList38);
        double[] doubleArray49 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray49, (double) (byte) 100, 1.0d);
        double[] doubleArray57 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray49, doubleArray57);
        float[] floatArray63 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray66 = new float[] { (byte) -1, 1L };
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray66, (float) 10L);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray63, floatArray66);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray57, (java.lang.Object) boolean69);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray57, (int) (short) 0, 1);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray57);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray74);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray74, (double) (-1.0f), (double) '4');
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray74, (double) 3);
        boolean boolean81 = strList38.equals((java.lang.Object) boolean80);
        java.util.stream.Stream<java.lang.String> strStream82 = strList38.parallelStream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strStream82);
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray2);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray2, ' ', (-1));
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray2);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray2);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray9);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray9);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.subarray(charArray25, (int) 'a', (int) (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray25, '4');
        char[] charArray37 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray41 = new char[] { '#', 'a', 'a' };
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.addAll(charArray37, charArray41);
        java.lang.String str43 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray37);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray37);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray44);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.clone(charArray25);
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.remove(charArray25, (int) (short) 1);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray48, '4', (int) (short) 10);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray52, '#');
        char[] charArray62 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray66 = new char[] { '#', 'a', 'a' };
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray62, charArray66);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray66, ' ', 2);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.subarray(charArray66, 0, (int) (byte) 10);
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.add(charArray73, ' ');
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray56, charArray75);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.addAll(charArray48, charArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray48);
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray48);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray79);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{4,#,a,4,#}" + "'", str43, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a, a,  ]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#a#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#a#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a, #, a, a,  ]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a#aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a#aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, #, a, a, #]");
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray3, (int) '#');
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray12);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray13, intArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 0);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) 'a');
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray14);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray14);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.addAll(intArray3, intArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, 0);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray33);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray34, intArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray35, (int) (byte) 0);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray35);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray40, (int) (byte) 1);
        int[] intArray43 = new int[] {};
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray43, intArray44);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.addAll(intArray40, intArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder26.append(intArray39, intArray43);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray43);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray48, 2);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray48, (int) 'a', 100);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray48, (int) (short) 1);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.add(intArray56, (int) (byte) 1);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray56, (int) '4', (int) (short) -1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray56);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.clone(floatArray10);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(floatArray10, 1.0f);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        long[] longArray59 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, '4');
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray68);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.add(strArray72, "{true,true}");
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray71, (java.lang.Object[]) strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray52, (java.lang.Object) longArray59, strArray72);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, 0, (double) 100);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray52);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray80, (double) (short) 1);
        java.lang.Double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (-1));
        java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) longArray5);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{0,1,100,100,0}" + "'", str10, "{0,1,100,100,0}");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0, 1, 100, 100, 0]");
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.remove(floatArray5, (int) (short) 1);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (short) 100);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray4, false);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray4, false);
        boolean[] booleanArray14 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, (int) (byte) 0, 0);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, 4, (int) '4');
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray20);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray20, false);
        boolean[] booleanArray30 = new boolean[] { false, false, false, true, false, false };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray20, booleanArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray38);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray38, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[true, false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100L, 2, (double) (short) -1);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100.0f, (int) (short) 100);
        double[] doubleArray18 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, 1.0d);
        double[] doubleArray26 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray26);
        float[] floatArray32 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray35 = new float[] { (byte) -1, 1L };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, (float) 10L);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray32, floatArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray26, (java.lang.Object) boolean38);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, (int) (short) 0, 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray55);
        float[] floatArray61 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray55, (java.lang.Object) boolean67);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray55);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray7, doubleArray43);
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray72);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray73);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray43, 0.0d);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray76, (double) ' ');
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 10.0, -1.0]");
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray8, true, 4);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray13, false);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, true, false]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray19, 0.0f);
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        long[] longArray25 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray23, (java.lang.Object) longArray25);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.addAll(longArray13, longArray25);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.subarray(longArray28, (int) (short) 10, (int) 'a');
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray28, (long) 3, (int) (short) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray4, longArray28);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray4);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 100);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray21);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray22, intArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray23, (int) '4');
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.add(intArray23, 1);
        long[] longArray35 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.subarray(longArray35, 3, (int) (byte) 0);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray35);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray46, true);
        java.lang.String[] strArray52 = new java.lang.String[] { "4", "1" };
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean39, (java.lang.Object) true, strArray52);
        java.lang.String[] strArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray52);
        java.lang.String[] strArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray54);
        java.lang.String[] strArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray55);
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray55);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray8, (java.lang.Object) intArray28, strArray57);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.clone(intArray28);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray28, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.add(floatArray8, (float) 0L);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray10, (float) (short) 10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray10);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray10, (float) 0L);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, (float) 1L, 5);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append((short) 10, (short) -1);
        java.lang.Boolean boolean38 = equalsBuilder37.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        byte[] byteArray0 = null;
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7, (byte) 1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 1);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 1);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray22, (int) (byte) 0, (int) (byte) 1);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray9, byteArray25);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.add(byteArray25, (byte) 1);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray28, (byte) 100);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray30);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.clone(byteArray0);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 1]");
        org.junit.Assert.assertNull(byteArray32);
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        java.lang.Short[] shortArray7 = new java.lang.Short[] {};
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray7);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray7, (short) 1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray3, (java.lang.Object) (short) 1, (int) (byte) 100);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, false);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray11, false);
        boolean[] booleanArray21 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray21, (int) (byte) 0, 0);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray21, 4, (int) '4');
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray27);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray27);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray4, (int) (short) 0);
        java.lang.Boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[true]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 0);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        java.lang.Byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray13);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray14);
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, (float) 'a');
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean[] booleanArray19 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 0, 0);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray36 = new char[] { '#', 'a', 'a' };
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray32, charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray32, ' ');
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray49 = new char[] { '#', 'a', 'a' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray49);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray49, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder26.append((java.lang.Object) ' ', (java.lang.Object) charArray49);
        java.lang.Long[] longArray60 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray60);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray62);
        char[] charArray67 = new char[] { 'a', '#', ' ' };
        char[][] charArray68 = new char[][] { charArray67 };
        char[][] charArray69 = org.apache.commons.lang3.ArrayUtils.toArray(charArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder54.append((java.lang.Object[]) longArray62, (java.lang.Object[]) charArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder54.append(true, false);
        long[] longArray78 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray78, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray80);
        long[] longArray83 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder54.append(longArray80, longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) (byte) -1, (double) 1L);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray25, (java.lang.Object) equalsBuilder87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray13, (java.lang.Object[]) booleanArray25);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25, true);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray91, false, 0);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[true, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append(false, true);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray44, (byte) 1);
        java.lang.Byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray44);
        java.lang.Object[] objArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray47);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray47);
        java.lang.Byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray49);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray49, (byte) 1);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray49);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 1);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray62, (byte) 100);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(byteArray62, (byte) 1);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray73, (byte) 1);
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray75, (int) (byte) 0, (int) (byte) 1);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray62, byteArray78);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) 10);
        byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray62);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.clone(byteArray82);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray83);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.remove(byteArray84, (int) (short) 1);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.contains(byteArray84, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder37.append(byteArray53, byteArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder37.appendSuper(true);
        equalsBuilder91.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) (byte) 100);
        java.lang.Short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) (byte) 100, 1);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray16, (short) -1);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Object[] objArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray16);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[#, a, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[#, a, a]");
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Object[] objArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray3);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, (long) (byte) 100);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.add(longArray5, (long) (byte) 100);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[100]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[]");
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray4, ' ');
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, '#');
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(charArray6, ' ');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[ ]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(2, (int) 'a');
        equalsBuilder36.reset();
        equalsBuilder36.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '#');
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, 0.0f);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        float[] floatArray44 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray44);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray44, (int) (byte) 1, 0);
        float[] floatArray52 = new float[] { (byte) -1, 1L };
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, (float) 10L);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray49, floatArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray52);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray52);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray57);
        java.lang.String[] strArray63 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray72 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray72);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.remove(floatArray72, (int) (short) 1);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray66, floatArray75);
        boolean boolean77 = strList64.equals((java.lang.Object) floatArray76);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray76);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray76, (-1.0f));
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.clone(floatArray76);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray76);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray76, (int) (short) 1, 100);
        float[] floatArray88 = org.apache.commons.lang3.ArrayUtils.add(floatArray85, 1, (float) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray88);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0, -1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[35.0, 10.0, 0.0, 100.0]");
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray8 = new float[] { (short) -1, 10, (short) 1 };
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray8, (int) '4', (int) (byte) 100);
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray14, (float) (short) 100);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(floatArray8, floatArray18);
        boolean[] booleanArray25 = new boolean[] { true, true, true };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray25, true);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray25, false);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36, false);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder21.append(booleanArray30, booleanArray40);
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray46, true);
        boolean[] booleanArray55 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray55, (int) (byte) 0, 0);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray46, booleanArray58);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray59);
        boolean[] booleanArray64 = new boolean[] { true, true, true };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray64, true);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray64, false);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray64);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray69, false, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder41.append(booleanArray60, booleanArray69);
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray69, 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[true, true]");
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        boolean boolean22 = equalsBuilder21.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder21.append((long) 3, (long) (short) 10);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.clone(shortArray71);
        java.lang.Short[] shortArray78 = new java.lang.Short[] {};
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray78);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray78, (short) 1);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.clone(shortArray81);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray82, (short) (byte) -1, (int) (short) 100);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray82);
        short[] shortArray87 = null;
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray82, shortArray87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray71, shortArray88);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray88);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray88);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray88);
        int int96 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray88, (short) 10, 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100L, 2, (double) (short) -1);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100.0f, (int) (short) 100);
        double[] doubleArray18 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, 1.0d);
        double[] doubleArray26 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray26);
        float[] floatArray32 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray35 = new float[] { (byte) -1, 1L };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, (float) 10L);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray32, floatArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray26, (java.lang.Object) boolean38);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, (int) (short) 0, 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray55);
        float[] floatArray61 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray55, (java.lang.Object) boolean67);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray55);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray7, doubleArray43);
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray72);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray73);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray73, (double) (short) 0);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray4, false);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray4);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray4, true);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true]");
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(charArray9, '4');
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, 'a', (-1));
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray9);
        java.lang.String str37 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{#,a,a}" + "'", str37, "{#,a,a}");
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10, (int) (byte) 1);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, (double) 100.0f);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, 100.0d, (int) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (short) -1);
        java.lang.Double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[][] intArray21 = new java.lang.Integer[][] { intArray6, intArray13, intArray20 };
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[][] intArray43 = new java.lang.Integer[][] { intArray28, intArray35, intArray42 };
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[][] intArray65 = new java.lang.Integer[][] { intArray50, intArray57, intArray64 };
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 5, (-1), (-1), 100, 1, 5 };
        java.lang.Integer[][] intArray87 = new java.lang.Integer[][] { intArray72, intArray79, intArray86 };
        java.lang.Integer[][][] intArray88 = new java.lang.Integer[][][] { intArray21, intArray43, intArray65, intArray87 };
        java.lang.Integer[][][] intArray89 = org.apache.commons.lang3.ArrayUtils.toArray(intArray88);
        java.lang.Object[][][] objArray90 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Object[][][]) intArray88);
        java.lang.Object obj91 = null;
        java.lang.Integer[][][] intArray92 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray88, obj91);
        java.lang.Cloneable[] cloneableArray93 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Cloneable[]) intArray92);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertNotNull(cloneableArray93);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 100);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (short) 1);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (byte) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray8);
        java.lang.Integer[] intArray21 = org.apache.commons.lang3.ArrayUtils.toObject(intArray8);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray23 = new int[] {};
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray23, intArray24);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray24, (int) '#', (int) (short) 100);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(intArray24, (int) ' ');
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(intArray24, 7);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray24);
        java.lang.Integer[] intArray34 = org.apache.commons.lang3.ArrayUtils.toObject(intArray8);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray34);
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        boolean[] booleanArray69 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray69, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray69);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder28.append(booleanArray69, booleanArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder28.append((long) (short) 100, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder28.append((byte) 100, (byte) 100);
        equalsBuilder28.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (short) -1);
        java.lang.Double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray33);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray33);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray35, 3);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        java.lang.Integer[] intArray6 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        long[] longArray13 = new long[] { (short) 1, 2, 10L, (-1L), 7, 2 };
        long[] longArray20 = new long[] { (short) 1, 2, 10L, (-1L), 7, 2 };
        long[] longArray27 = new long[] { (short) 1, 2, 10L, (-1L), 7, 2 };
        long[] longArray34 = new long[] { (short) 1, 2, 10L, (-1L), 7, 2 };
        long[][] longArray35 = new long[][] { longArray13, longArray20, longArray27, longArray34 };
        long[][][] longArray36 = new long[][][] { longArray35 };
        long[] longArray37 = new long[] {};
        long[] longArray38 = new long[] {};
        long[] longArray39 = new long[] {};
        long[] longArray40 = new long[] {};
        long[] longArray41 = new long[] {};
        long[] longArray42 = new long[] {};
        long[][] longArray43 = new long[][] { longArray37, longArray38, longArray39, longArray40, longArray41, longArray42 };
        long[] longArray44 = new long[] {};
        long[] longArray45 = new long[] {};
        long[] longArray46 = new long[] {};
        long[] longArray47 = new long[] {};
        long[] longArray48 = new long[] {};
        long[] longArray49 = new long[] {};
        long[][] longArray50 = new long[][] { longArray44, longArray45, longArray46, longArray47, longArray48, longArray49 };
        long[] longArray51 = new long[] {};
        long[] longArray52 = new long[] {};
        long[] longArray53 = new long[] {};
        long[] longArray54 = new long[] {};
        long[] longArray55 = new long[] {};
        long[] longArray56 = new long[] {};
        long[][] longArray57 = new long[][] { longArray51, longArray52, longArray53, longArray54, longArray55, longArray56 };
        long[][][] longArray58 = new long[][][] { longArray43, longArray50, longArray57 };
        long[][][] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray36, longArray58);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray6, (java.lang.Object[]) longArray36);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[1, 2, 10, -1, 7, 2]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[1, 2, 10, -1, 7, 2]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[1, 2, 10, -1, 7, 2]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[1, 2, 10, -1, 7, 2]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1, 0]");
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray6 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, (int) (short) 1);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray9);
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, '4');
        java.lang.Character[] charArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray14, ' ');
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.toObject(charArray16);
        float[] floatArray18 = new float[] {};
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray17, (java.lang.Object) floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray18);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10);
        float[] floatArray23 = null;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray23);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray47 = new java.lang.Byte[][] { byteArray40, byteArray46 };
        java.lang.Byte[][] byteArray50 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray47, (int) '#', 10);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        java.lang.Byte[][] byteArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray47, (java.lang.Object) intArray57);
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Short[] shortArray61 = null;
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder34.append((java.lang.Object[]) intArray57, (java.lang.Object[]) shortArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        long[] longArray77 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.subarray(longArray77, 3, (int) (byte) 0);
        java.lang.Long[] longArray86 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray86);
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray86, (long) (short) 10);
        long[] longArray90 = org.apache.commons.lang3.ArrayUtils.clone(longArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder64.append(longArray80, longArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append('a', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder91.append((short) (byte) 100, (short) 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[]");
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray90), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray2);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray10);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray10, (long) '4');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray14);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) 1);
        java.lang.Float[] floatArray16 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray16);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray16);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray16, (float) (short) 10);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray20, 5, (float) 1L);
        java.lang.String[] strArray28 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray37 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.remove(floatArray37, (int) (short) 1);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray31, floatArray40);
        boolean boolean42 = strList29.equals((java.lang.Object) floatArray41);
        float[] floatArray48 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray48, (float) 1);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray41, floatArray48);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray52);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray10, floatArray20);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 0.0, 10.0, -1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 0.0, 10.0, -1.0, 100.0, -1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0, 1.0, -1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray7, (int) (byte) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(intArray7, 100);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        double[] doubleArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray0, (double) 1L, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, (float) 'a');
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean[] booleanArray19 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 0, 0);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray36 = new char[] { '#', 'a', 'a' };
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray32, charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray32, ' ');
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray49 = new char[] { '#', 'a', 'a' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray49);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray49, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder26.append((java.lang.Object) ' ', (java.lang.Object) charArray49);
        java.lang.Long[] longArray60 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray60);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray62);
        char[] charArray67 = new char[] { 'a', '#', ' ' };
        char[][] charArray68 = new char[][] { charArray67 };
        char[][] charArray69 = org.apache.commons.lang3.ArrayUtils.toArray(charArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder54.append((java.lang.Object[]) longArray62, (java.lang.Object[]) charArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder54.append(true, false);
        long[] longArray78 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray78, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray80);
        long[] longArray83 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder54.append(longArray80, longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) (byte) -1, (double) 1L);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray25, (java.lang.Object) equalsBuilder87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray13, (java.lang.Object[]) booleanArray25);
        float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13);
        float[] floatArray92 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray90, (float) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray94 = org.apache.commons.lang3.ArrayUtils.remove(floatArray92, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray18);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.add(byteArray18, (int) ' ', (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        java.lang.Object[] objArray0 = null;
        java.lang.Boolean[] booleanArray4 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4);
        int int7 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray6);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray0, (java.lang.Object) booleanArray6);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (byte) 100, (int) (short) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, 2, (int) (byte) 100);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true]");
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray4, (float) '4');
        float[] floatArray13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray27 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray27);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.remove(floatArray27, (int) (short) 1);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray21, floatArray30);
        boolean boolean32 = strList19.equals((java.lang.Object) floatArray31);
        float[] floatArray38 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray38);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray38, (float) 1);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray31, floatArray38);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray13, floatArray38);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray13);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray4);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        boolean[] booleanArray69 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray69, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray69);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder28.append(booleanArray69, booleanArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder28.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder28.append('4', 'a');
        equalsBuilder28.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray10, (byte) 100);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray12);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.add(byteArray12, (byte) 0);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray12);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100, 0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray8 = null;
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray7, (short) 10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray7, (short) (byte) 1);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray7);
        short[] shortArray15 = null;
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray15);
        java.lang.String[] strArray21 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray30 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.remove(floatArray30, (int) (short) 1);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray33);
        boolean boolean35 = strList22.equals((java.lang.Object) floatArray34);
        strList22.clear();
        java.util.List[] listArray38 = new java.util.List[1];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.String>[] strListArray39 = (java.util.List<java.lang.String>[]) listArray38;
        strListArray39[0] = strList22;
        java.util.List<java.lang.String>[] strListArray42 = null;
        java.util.List<java.lang.String>[] strListArray43 = org.apache.commons.lang3.ArrayUtils.addAll(strListArray39, strListArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) shortArray7, (java.lang.Object) strListArray43);
        java.util.Collection<java.lang.String>[] strCollectionArray45 = org.apache.commons.lang3.ArrayUtils.clone((java.util.Collection<java.lang.String>[]) strListArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strListArray43);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(listArray38);
        org.junit.Assert.assertNotNull(strListArray39);
        org.junit.Assert.assertNotNull(strListArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strCollectionArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray2);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray10);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray10, (long) 'a', 7);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray10, (long) '#');
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray19 = org.apache.commons.lang3.ArrayUtils.add(longArray10, 7, (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray5);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray5, true, 7);
        java.lang.Boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false, (-1));
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, '4');
        java.lang.Character[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84, ' ');
        java.lang.Object[] objArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray84);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray80, (java.lang.Object) charArray84);
        short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[]");
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        long[] longArray52 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray54);
        long[] longArray57 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder28.append(longArray54, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((short) (byte) 1, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder58.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append(6, (int) (short) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(10.0d, (double) 0L);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) 'a');
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray50, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray50);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray50, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder31.append((java.lang.Object) 'a', (java.lang.Object) intArray55);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.add(intArray55, 0);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray58);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray58);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray60, (int) '4');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray0 = new java.lang.reflect.GenericDeclaration[] {};
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray1 = new java.lang.reflect.GenericDeclaration[] {};
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray2 = new java.lang.reflect.GenericDeclaration[] {};
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray3 = new java.lang.reflect.GenericDeclaration[] {};
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray4 = new java.lang.reflect.GenericDeclaration[][] { genericDeclarationArray0, genericDeclarationArray1, genericDeclarationArray2, genericDeclarationArray3 };
        double[] doubleArray8 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray8, (double) (byte) 100, 1.0d);
        double[] doubleArray16 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray8, doubleArray16);
        float[] floatArray22 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray25 = new float[] { (byte) -1, 1L };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) 10L);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray22, floatArray25);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray16, (java.lang.Object) boolean28);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray16, (int) (short) 0, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray16);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray33);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) (-1.0f), (double) '4');
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(genericDeclarationArray4, (java.lang.Object) doubleArray33);
        java.lang.reflect.AnnotatedElement[] annotatedElementArray40 = null;
        java.lang.reflect.AnnotatedElement[][] annotatedElementArray41 = org.apache.commons.lang3.ArrayUtils.add((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray38, (int) (short) 0, annotatedElementArray40);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) annotatedElementArray41, (java.lang.Object) shortArray42);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) shortArray42);
        org.junit.Assert.assertNotNull(genericDeclarationArray0);
        org.junit.Assert.assertNotNull(genericDeclarationArray1);
        org.junit.Assert.assertNotNull(genericDeclarationArray2);
        org.junit.Assert.assertNotNull(genericDeclarationArray3);
        org.junit.Assert.assertNotNull(genericDeclarationArray4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(genericDeclarationArray38);
        org.junit.Assert.assertNotNull(annotatedElementArray41);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray6);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 5, (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, 100L);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray6, (long) 7);
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.remove(longArray17, 0);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, (long) (short) -1);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray17, (long) (byte) -1);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[1, -1, 1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 0);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray9);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(byteArray21, (byte) 100);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(byteArray21, (byte) 1);
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray21);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26, (byte) 100);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray28, (byte) 10);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.clone(byteArray30);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray9, byteArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray30);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray30, (byte) 1);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray30, (int) (byte) -1, (int) 'a');
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 1, 100, 1, -1, 0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[10, 0, -1, -1, 100, 0, 0]");
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1]");
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray12);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) (byte) 1, 0);
        float[] floatArray28 = new float[] { (byte) -1, 1L };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray28, (float) 10L);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.clone(floatArray28);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray14, (java.lang.Object) floatArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray14);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, (long) (byte) -1, (-1));
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.remove(longArray1, 0);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.add(longArray1, (long) (byte) 1);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray1, (long) 100);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[-1]");
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray57);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.subarray(intArray57, 5, (int) (byte) 1);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.add(intArray62, (int) (short) 0);
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray62, 6);
        java.lang.Integer[] intArray67 = org.apache.commons.lang3.ArrayUtils.toObject(intArray62);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertNotNull(intArray67);
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58, (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 1);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray60);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray65, (byte) 100);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray67, (byte) 10);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder34.append(byteArray38, byteArray67);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) (byte) -1, (int) '4');
        java.lang.Byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray38);
        java.lang.Byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray38);
        java.lang.Byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray76);
        java.lang.Byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray76);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertNotNull(byteArray78);
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, (float) (-1L));
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray13, 1, (int) (short) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(floatArray23, (float) 'a');
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.remove(floatArray23, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 0);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.add(byteArray14, (byte) 10);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, -1, 10, -1, -1, 100, -1, 10]");
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) '#', 1, (double) (byte) 100);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray32);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray28, (int) (short) 0);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray42);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, (int) (short) 1, 0);
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray5);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray8);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray8, 8, 0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.clone(charArray0);
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '#');
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(charArray7, ' ');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, (int) (byte) 0, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray12);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (byte) 10);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 1.0d);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray37, 0.0d);
        double[] doubleArray43 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray43, (double) (byte) 100, 1.0d);
        double[] doubleArray51 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray43, doubleArray51);
        float[] floatArray57 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray60 = new float[] { (byte) -1, 1L };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray60, (float) 10L);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray57, floatArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray51, (java.lang.Object) boolean63);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (int) (short) 0, 1);
        int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray67, (double) (short) 100, 0, 10.0d);
        double[] doubleArray75 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray75, (double) (byte) 100, 1.0d);
        double[] doubleArray83 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray75, doubleArray83);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray67, doubleArray83);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray67);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray67);
        double[] doubleArray92 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray67);
        int int96 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray37, (double) '#', (int) '#', (double) 100);
        double[] doubleArray98 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray37, 2);
        double[] doubleArray99 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 10.0, 0.0, 1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray99), "[-1.0, 10.0, 0.0, 1.0]");
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream8 = strList5.stream();
        java.util.Spliterator<java.lang.String> strSpliterator9 = strList5.spliterator();
        int int10 = strList5.size();
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray12, (long) (byte) 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray12);
        boolean boolean19 = strList5.equals((java.lang.Object) boolean18);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Integer[] intArray25 = org.apache.commons.lang3.ArrayUtils.toObject(intArray24);
        java.lang.Integer[] intArray26 = org.apache.commons.lang3.ArrayUtils.toObject(intArray24);
        short[] shortArray32 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray32, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray36 = new java.lang.Short[] {};
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36, (short) 1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray32, shortArray39);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray39, (int) '4', (int) (short) 0);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray39, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray39);
        java.lang.String[] strArray52 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray61 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.remove(floatArray61, (int) (short) 1);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray55, floatArray64);
        boolean boolean66 = strList53.equals((java.lang.Object) floatArray65);
        int int67 = strList53.size();
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray68, (int) (byte) 1);
        boolean boolean71 = strList53.contains((java.lang.Object) int70);
        java.lang.Object[] objArray72 = strList53.toArray();
        boolean boolean73 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray26, (java.lang.Object) shortArray47, (java.util.Collection<java.lang.String>) strList53);
        boolean boolean74 = strList5.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.Object[] objArray75 = strList5.toArray();
        java.util.stream.Stream<java.lang.String> strStream76 = strList5.parallelStream();
        int int77 = strList5.size();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strSpliterator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!, {}, {4,#,a,4,#}, 4, {}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!, {}, {4,#,a,4,#}, 4, {}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertNotNull(strStream76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77 == 8);
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, (int) (byte) -1, (int) (short) 100);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) 'a', (int) (short) 100);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 1L);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 0L, (int) (byte) 1);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray35, (int) 'a', (int) ' ');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, 2);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray22);
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(intArray35, 1);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.addAll(intArray22, intArray35);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray35, 10, (int) (byte) 0);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray35, (int) (short) 0);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(intArray35, (int) (short) 100);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray35);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) (short) 10);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray9, 5, (float) 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray9);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.add(floatArray9, 7, (float) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[100.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 0.0, 10.0, -1.0, 100.0, 1.0]");
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray0, 'a');
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray0);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray0);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) -1, (int) '4');
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 2, (int) (byte) 10);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.clone(byteArray0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray6);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.remove(longArray6, 2);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) 9);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) '#', (int) (short) 100);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[100, -1, -1, 1, 10]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        int[] intArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, 3, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        long[] longArray59 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, '4');
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray68);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.add(strArray72, "{true,true}");
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray71, (java.lang.Object[]) strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray52, (java.lang.Object) longArray59, strArray72);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, 0.0d);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray78, (double) 100, (int) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) 3);
        java.lang.Object obj10 = null;
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) doubleArray6, obj10);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (short) -1);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray54);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray55);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) '#');
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, 0.0d);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) (byte) 10);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, 1.0d);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray66, 0.0d);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray68, 1.0d, 1, (double) 4);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray28, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 0.0, 10.0, -1.0, -1.0, -1.0, 10.0, 1.0]");
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray0, (java.lang.Object[]) intArray7);
        java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (short) 100, (int) (short) 100);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        float[] floatArray15 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, 0.0f);
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        long[] longArray21 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray21);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray19, (java.lang.Object) longArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray21);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(longArray8, (long) 6);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray27);
        java.lang.Object obj29 = null;
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) longArray27, obj29);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray27, (long) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray35 = org.apache.commons.lang3.ArrayUtils.add(longArray32, 7, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[-1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[-1]");
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray32);
        double[] doubleArray42 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray42, (double) (byte) 100, 1.0d);
        double[] doubleArray50 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray42, doubleArray50);
        float[] floatArray56 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray59 = new float[] { (byte) -1, 1L };
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray59, (float) 10L);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray56, floatArray59);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray50, (java.lang.Object) boolean62);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray50, (int) (short) 0, 1);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray66, (double) (byte) -1);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray68, (int) (byte) 100, 1);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray71, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray71);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray71);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray71);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (int) (short) -1, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) -1, (int) '4');
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray42, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder19.append((java.lang.Object) ' ', (java.lang.Object) charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((double) 0.0f, 0.0d);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 1);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) -1);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray70 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray65, byteArray70);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray65, (byte) -1);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray65, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder50.append(byteArray64, byteArray65);
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray64);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray77, (byte) 1);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray77, (byte) 10, (int) '4');
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray3, (int) '#');
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray12);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray13, intArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 0);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) 'a');
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray14);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray14);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.addAll(intArray3, intArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, 0);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray30);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.clone(intArray31);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray32, 10);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.add(intArray32, (-1));
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray44 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray48 = new char[] { '#', 'a', 'a' };
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.addAll(charArray44, charArray48);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray44, ' ');
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray61 = new char[] { '#', 'a', 'a' };
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.addAll(charArray57, charArray61);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray61, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder38.append((java.lang.Object) ' ', (java.lang.Object) charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append(10.0d, (double) 0L);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray79);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray80, intArray81);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.contains(intArray81, (int) '4');
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray81);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.add(intArray81, (int) 'a');
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int90 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray88, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray88);
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.add(intArray88, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder69.append((java.lang.Object) 'a', (java.lang.Object) intArray93);
        int[] intArray96 = org.apache.commons.lang3.ArrayUtils.add(intArray93, 0);
        int[] intArray97 = org.apache.commons.lang3.ArrayUtils.addAll(intArray36, intArray93);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, -1, 2, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[-1, -1, 2, 1, -1, -1]");
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        java.lang.Byte[][][][] byteArray0 = new java.lang.Byte[][][][] {};
        boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray0);
        java.lang.Byte[][][][] byteArray4 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (short) 0, (int) (short) 0);
        java.lang.Cloneable[][][] cloneableArray5 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Cloneable[][][]) byteArray0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(cloneableArray5);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray18);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19, false);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray24);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray24, false, (int) (short) 0);
        java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray24);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray24, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, true, false, false, false, true, true, false, false]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        short[] shortArray27 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray31 = new java.lang.Short[] {};
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray27, shortArray34);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) 0, 0);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray42 = null;
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(shortArray41, shortArray46);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray46);
        java.lang.Long[] longArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray49);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray51);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray51);
        java.lang.Long[] longArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray54);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray54);
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray56, (long) (byte) 10);
        long[] longArray63 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray63, 1L);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray63);
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.addAll(longArray56, longArray63);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray51, longArray67);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) shortArray46, (java.lang.Object) longArray51);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray72 = org.apache.commons.lang3.ArrayUtils.add(longArray51, (int) '4', (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10, (int) (byte) 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) 10, (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        long[] longArray59 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, '4');
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray68);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.add(strArray72, "{true,true}");
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray71, (java.lang.Object[]) strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray52, (java.lang.Object) longArray59, strArray72);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, 0.0d);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray78, (double) 6);
        double[] doubleArray84 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray84, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray84);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray84, (double) (short) 1, (int) (short) 100);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray84);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray84);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray78, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray96 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray78, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, false);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (byte) 100, 100);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray6, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray33);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray34, intArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray35, (int) (byte) 0);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray35);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray40, (int) (byte) 1);
        int[] intArray43 = new int[] {};
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray43, intArray44);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.addAll(intArray40, intArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder26.append(intArray39, intArray43);
        short[] shortArray53 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray53, shortArray60);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) 0, 0);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.add(shortArray53, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray68 = null;
        java.lang.Short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray68);
        java.lang.Short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray69);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray69, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder26.append(shortArray67, shortArray72);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray72);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray72, (short) (byte) 1);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray6, (java.lang.Object) shortArray72);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray72, (short) 10);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) 100);
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray27);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray27, (byte) -1);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray27, (byte) 100);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.clone(byteArray27);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray13 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, (long) 0);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray13);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray25 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(longArray25, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray25);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(longArray25, (long) (short) 100);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        long[] longArray37 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, (long) 0);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.addAll(longArray25, longArray37);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray25);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray25);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        byte[] byteArray20 = new byte[] {};
        byte[] byteArray25 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray20, byteArray25);
        java.lang.Byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray25);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27);
        java.lang.Boolean[] booleanArray32 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray32);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray32);
        int int35 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray34);
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray39);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, true);
        boolean[] booleanArray49 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (byte) 0, 0);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray40, booleanArray52);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray53);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray34, booleanArray53);
        boolean[] booleanArray57 = new boolean[] { true };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray61);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray62, false);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray62);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray62, true);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray57, booleanArray62);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray34, booleanArray68);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray27, (java.lang.Object) booleanArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray69);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray69, false);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray69, false, (int) (byte) 1);
        java.lang.Boolean[] booleanArray80 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray80);
        boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray81, (int) (short) 10, 3);
        boolean[] booleanArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray84);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray69, booleanArray85);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray69);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 1, -1, 10]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true, true, true, false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 4 + "'", int73 == 4);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[]");
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) 100);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray30, byteArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) -1);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray30);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray46, (byte) 1);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(byteArray48, (byte) 100);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(byteArray48, (byte) 1);
        java.lang.Byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray48);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray53, (byte) 100);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.add(byteArray55, (byte) 10);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.clone(byteArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray57);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.add(byteArray57, (byte) 100);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray24, byteArray57);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray24);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray24, (byte) 1, (-1));
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, 1, (byte) 10);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 10]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0]");
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray19);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, 'a', (int) '4');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 0, ' ');
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '4');
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray19);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray19);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray34 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 10, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ ]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, a, a]");
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        java.lang.Object[] objArray0 = null;
        double[] doubleArray4 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, (double) (byte) 100, 1.0d);
        double[] doubleArray12 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray12);
        float[] floatArray18 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray21 = new float[] { (byte) -1, 1L };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 10L);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray18, floatArray21);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray12, (java.lang.Object) boolean24);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray12);
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray26);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray27);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27, (double) '#');
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27, 0.0d);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27, (double) (byte) 10);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27, 1.0d);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray38, 0.0d);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(objArray0, (java.lang.Object) 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        double[] doubleArray54 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray54, (double) (byte) 100, 1.0d);
        double[] doubleArray62 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray54, doubleArray62);
        float[] floatArray68 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray71 = new float[] { (byte) -1, 1L };
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) 10L);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray68, floatArray71);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray62, (java.lang.Object) boolean74);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray62);
        java.lang.Double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray76);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray77, (double) (-1));
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray80, (double) 10L, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder50.append(doubleArray79, doubleArray80);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.add(doubleArray80, (double) 10.0f);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray86, (double) (short) 100, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray15, 100, (int) (byte) 0);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray15);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray15);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.remove(byteArray21, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(charArray5, '4');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray5, '4');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(charArray10, '#');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.clone(shortArray2);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) -1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] {};
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray9, (short) 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray9);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray9, (short) (byte) 10, (int) (short) -1);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(shortArray9, (short) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray2, shortArray9);
        java.lang.Short[] shortArray19 = null;
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray19);
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray20);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20, (short) (byte) -1);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20, (short) (byte) 0);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray25, (short) 10);
        java.lang.Short[] shortArray28 = new java.lang.Short[] {};
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28, (short) 1);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28, (short) 0);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray33, (short) -1);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.add(shortArray35, (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray27, shortArray35);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray2, shortArray35);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray40, (int) (short) 10, 0);
        java.lang.Class<?> wildcardClass44 = shortArray40.getClass();
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[10]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[10]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        short[] shortArray1 = new short[] { (short) 10 };
        short[] shortArray3 = new short[] { (short) 10 };
        short[] shortArray5 = new short[] { (short) 10 };
        short[] shortArray7 = new short[] { (short) 10 };
        short[][] shortArray8 = new short[][] { shortArray1, shortArray3, shortArray5, shortArray7 };
        short[][] shortArray9 = org.apache.commons.lang3.ArrayUtils.clone(shortArray8);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray19 = new char[] { '#', 'a', 'a' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray15, charArray19);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray19, (int) 'a', (int) (short) 10);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.add(charArray19, '4');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray19, '4');
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.toObject(charArray19);
        short[][] shortArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray9, (java.lang.Object) charArray19);
        char[] charArray30 = null;
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray30);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[10]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[10]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[10]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[10]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, a, a]");
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray14, true);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, 5);
        boolean[] booleanArray28 = new boolean[] { false, false, false, true, false, false };
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray28);
        boolean[] booleanArray36 = new boolean[] { false, false, false, true, false, false };
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray28, booleanArray36);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray36, true);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray14, booleanArray40);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray41);
        boolean[] booleanArray49 = new boolean[] { false, false, false, true, false, false };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray49);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray49, (int) (short) 1);
        java.lang.Boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray52);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray53);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray41, booleanArray54);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray41, true, 4);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray41, (int) (byte) 1, 10);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.add(booleanArray61, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, true, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, true, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, true, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, true, false, false, false, false, false, false, false]");
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        double[] doubleArray0 = null;
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray0, (double) (byte) 100);
        org.junit.Assert.assertNull(doubleArray2);
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (short) 10);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray8, (long) (short) 10);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        float[] floatArray18 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray18);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.clone(floatArray18);
        long[] longArray23 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(longArray23, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray23);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        long[] longArray33 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray33, 1L);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray28, longArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray18, (java.lang.Object) longArray28);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray8, (java.lang.Object) longArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray8, 0L);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray41, (long) 'a');
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[100, 100, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toObject(longArray3);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray3);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.add(longArray3, (long) (short) 100);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray3, (long) 1);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray3, (long) 10, 0);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray3, (-1), (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[-1]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        java.util.Iterator<java.lang.String> strItor41 = strList3.iterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strItor41);
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray6);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, (int) (byte) 10, (int) (short) -1);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (int) (byte) -1, (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (short) 100, (long) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 3);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray24);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray32);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray33, intArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray34, (int) (byte) 0);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray34, (int) 'a');
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray34);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray34, 2, (int) '4');
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray34);
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray51);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray52, intArray53);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray53, (int) (byte) 0);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray53);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.subarray(intArray53, 0, 0);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray60);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray68);
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray69, intArray70);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray70, (int) (byte) 0);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray70);
        short[] shortArray80 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray80, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray80);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray80, (short) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray80);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray70, (java.lang.Object) shortArray80);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.addAll(intArray60, intArray70);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray44, intArray60);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray24, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = org.apache.commons.lang3.ArrayUtils.remove(intArray44, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[3]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, (long) '4');
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, (long) (short) 100, (int) '#');
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray1, 0L);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, (long) (byte) 0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        java.lang.Byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray11);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) 100);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 1L, 0L };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17, 0L);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17, 100L);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray22, (-1L), (int) (byte) 100);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray22);
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray11, (java.lang.Object) boolean26, true);
        long[] longArray33 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray33, 1L);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray33, (long) 2, 1);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray11, (java.lang.Object) longArray33);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray33);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray42 = org.apache.commons.lang3.ArrayUtils.remove(longArray33, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[0, -1, 1, 32]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, 0.0f);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        float[] floatArray44 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray44);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray44, (int) (byte) 1, 0);
        float[] floatArray52 = new float[] { (byte) -1, 1L };
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, (float) 10L);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray49, floatArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray52);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray52);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray57);
        float[] floatArray64 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        float[] floatArray70 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray73 = new float[] { (byte) -1, 1L };
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray73, (float) 10L);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray70, floatArray73);
        java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray70);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray65, (java.lang.Object) floatArray77);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray65, (float) (short) 10);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray58, floatArray80);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.clone(floatArray80);
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        short[] shortArray89 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray89, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray93 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray89);
        short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray89, (short) (byte) 0);
        boolean boolean96 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray83, (java.lang.Object) shortArray95);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0, -1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(shortArray93);
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray95), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(charArray5, '4');
        char[] charArray14 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray18 = new char[] { '#', 'a', 'a' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.addAll(charArray14, charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray14, ' ');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.add(charArray21, ' ');
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray24);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray5, charArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray27);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray27, '4');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 4, (int) '4');
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, true, true, true]");
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.subarray(charArray28, (int) 'a', (int) (short) 10);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '4');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray28);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray28);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '#');
        char[] charArray40 = null;
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray28, charArray40);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, a, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray6 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, (int) (short) 1);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray9);
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, '4');
        java.lang.Character[] charArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray14, ' ');
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.toObject(charArray16);
        float[] floatArray18 = new float[] {};
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray17, (java.lang.Object) floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray18);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        boolean[] booleanArray0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray7 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray11 = new char[] { '#', 'a', 'a' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray11);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray7, ' ');
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray24, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder1.append((java.lang.Object) ' ', (java.lang.Object) charArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder1.append((int) (short) 1, 10);
        boolean[] booleanArray39 = new boolean[] { false, false, false, true, false, false };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray39);
        boolean[] booleanArray47 = new boolean[] { false, false, false, true, false, false };
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray47);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray39, booleanArray47);
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray53);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray54, false);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray54, false);
        boolean[] booleanArray64 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray64, (int) (byte) 0, 0);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray64, 4, (int) '4');
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray58, booleanArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder1.append(booleanArray47, booleanArray58);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray47);
        java.lang.Boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray47);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[true]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray75);
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58, (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 1);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray60);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray65, (byte) 100);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray67, (byte) 10);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder34.append(byteArray38, byteArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder34.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((int) ' ', (int) (short) 100);
        java.lang.String[] strArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray80 = org.apache.commons.lang3.ArrayUtils.add(strArray78, "{true,true}");
        java.lang.String[] strArray83 = org.apache.commons.lang3.ArrayUtils.subarray(strArray78, 0, 2);
        java.lang.Object[] objArray84 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder77.append((java.lang.Object[]) strArray78, objArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((short) (byte) 1, (short) (byte) 100);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray57);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray65);
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray66, intArray67);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(intArray67, (int) '4');
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.add(intArray67, (int) (short) 100);
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.addAll(intArray57, intArray72);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.subarray(intArray57, 7, (int) (byte) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray53, false);
        boolean[] booleanArray63 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, (int) (byte) 0, 0);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, 4, (int) '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray57, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(booleanArray46, booleanArray57);
        java.lang.Boolean boolean72 = equalsBuilder71.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder71.append((byte) -1, (byte) 1);
        java.lang.Boolean boolean76 = equalsBuilder71.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + false + "'", boolean72, false);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + false + "'", boolean76, false);
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append(0L, (long) 'a');
        equalsBuilder0.reset();
        char[] charArray11 = new char[] { '4', '4' };
        char[] charArray14 = new char[] { '4', '4' };
        char[] charArray17 = new char[] { '4', '4' };
        char[][] charArray18 = new char[][] { charArray11, charArray14, charArray17 };
        char[] charArray21 = new char[] { '4', '4' };
        char[] charArray24 = new char[] { '4', '4' };
        char[] charArray27 = new char[] { '4', '4' };
        char[][] charArray28 = new char[][] { charArray21, charArray24, charArray27 };
        char[] charArray31 = new char[] { '4', '4' };
        char[] charArray34 = new char[] { '4', '4' };
        char[] charArray37 = new char[] { '4', '4' };
        char[][] charArray38 = new char[][] { charArray31, charArray34, charArray37 };
        char[] charArray41 = new char[] { '4', '4' };
        char[] charArray44 = new char[] { '4', '4' };
        char[] charArray47 = new char[] { '4', '4' };
        char[][] charArray48 = new char[][] { charArray41, charArray44, charArray47 };
        char[][][] charArray49 = new char[][][] { charArray18, charArray28, charArray38, charArray48 };
        char[] charArray53 = new char[] { 'a', '#', ' ' };
        char[][] charArray54 = new char[][] { charArray53 };
        char[][] charArray55 = org.apache.commons.lang3.ArrayUtils.toArray(charArray54);
        char[][][] charArray56 = org.apache.commons.lang3.ArrayUtils.add(charArray49, charArray54);
        long[] longArray59 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(longArray59, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray59);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray59);
        java.lang.Long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toObject(longArray65);
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray66, (long) 'a');
        char[][][] charArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray49, (java.lang.Object) longArray66);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray66);
        java.lang.Float[][][] floatArray71 = new java.lang.Float[][][] {};
        java.lang.Float[][][] floatArray74 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray71, 100, 100);
        java.lang.Cloneable[] cloneableArray75 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Cloneable[]) floatArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder0.append((java.lang.Object[]) longArray66, (java.lang.Object[]) floatArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((long) 4, (long) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[-1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[-1]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[-1]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertNotNull(cloneableArray75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray10 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.remove(floatArray19, (int) (short) 1);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray13, floatArray22);
        boolean boolean24 = strList11.equals((java.lang.Object) floatArray23);
        int int25 = strList11.size();
        java.util.stream.Stream<java.lang.String> strStream26 = strList11.parallelStream();
        boolean boolean27 = strList3.addAll((java.util.Collection<java.lang.String>) strList11);
        strList11.clear();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.stream.Stream<java.lang.String> strStream36 = strList34.parallelStream();
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray40);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray41, (int) (short) 10, 3);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray44);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray44);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray44, true, 0);
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList34, (java.lang.Object) booleanArray44, false);
        java.lang.String[] strArray53 = new java.lang.String[] { "{-1.0,100.0,100.0,10.0,35.0}" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        boolean boolean56 = strList34.containsAll((java.util.Collection<java.lang.String>) strList54);
        boolean boolean57 = strList11.addAll((java.util.Collection<java.lang.String>) strList34);
        java.lang.Long[][] longArray58 = new java.lang.Long[][] {};
        java.lang.Long[][] longArray59 = new java.lang.Long[][] {};
        java.lang.Long[][] longArray60 = new java.lang.Long[][] {};
        java.lang.Long[][] longArray61 = new java.lang.Long[][] {};
        java.lang.Long[][] longArray62 = new java.lang.Long[][] {};
        java.lang.Long[][][] longArray63 = new java.lang.Long[][][] { longArray58, longArray59, longArray60, longArray61, longArray62 };
        java.lang.Long[][][] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Long[][][] longArray65 = strList11.toArray(longArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertNotNull(longArray64);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.clone(charArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray0, '4', 10);
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '#');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray7, (int) '4', 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#]");
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) (byte) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray11, (short) 0);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.remove(shortArray11, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray11, (short) 1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 0);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray9);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray9);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.add(byteArray9, 2, (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray9);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100, -1, 10, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 'a');
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) 10, 10.0d);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (byte) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) 3, (double) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, (int) '#', (int) (short) -1);
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (-1.0d), (double) 7);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (-1));
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0]");
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(charArray5, '4');
        char[] charArray14 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray18 = new char[] { '#', 'a', 'a' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.addAll(charArray14, charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray14, ' ');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.add(charArray21, ' ');
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray24);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray5, charArray27);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray27);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray27, 'a', 1);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray8 = new boolean[] {};
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray8);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, false);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray15, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray15, true);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true]");
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        double[] doubleArray0 = null;
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, (double) 5);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[5.0]");
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, 3, false);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray14, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true, false, false, true, true]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 0);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray14);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray14, 0, (int) ' ');
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.clone(byteArray18);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray18, (byte) -1, (int) (short) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 6 + "'", int22 == 6);
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.remove(byteArray0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), (-1.0d) };
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray2);
        double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray2);
        double[] doubleArray8 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray8, (double) (byte) 100, 1.0d);
        double[] doubleArray16 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray8, doubleArray16);
        float[] floatArray22 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray25 = new float[] { (byte) -1, 1L };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) 10L);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray22, floatArray25);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray16, (java.lang.Object) boolean28);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray16, (int) (short) 0, 1);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray32, (double) (byte) -1);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, (int) (byte) 100, 1);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray34, (double) 10, 0, 1.0d);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray34, (double) (-1.0f), (int) (short) 1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, 0, 0);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray34, (double) (short) 10);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray34);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray50, 1.0d, 0);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray0);
        java.lang.Short[] shortArray2 = new java.lang.Short[] {};
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) 1);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.clone(shortArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) -1, (int) (short) 100);
        java.lang.Short[] shortArray10 = new java.lang.Short[] {};
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) 1);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray6, shortArray13);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray13, 1, (int) (byte) 100);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray17, (short) (byte) 10);
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.clone(shortArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) -1);
        java.lang.Short[] shortArray26 = new java.lang.Short[] {};
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26, (short) 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray29, (short) 0);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray29);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray29, (short) (byte) 10, (int) (short) -1);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(shortArray29, (short) 10);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray22, shortArray29);
        java.lang.Short[] shortArray39 = null;
        java.lang.Short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray39);
        java.lang.Short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray40);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) (byte) -1);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) (byte) 0);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.add(shortArray45, (short) 10);
        java.lang.Short[] shortArray48 = new java.lang.Short[] {};
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48, (short) 1);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48, (short) 0);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray53, (short) -1);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.add(shortArray55, (short) 1);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray47, shortArray55);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray55);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray17, shortArray59);
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray0, shortArray17);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[10]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[10]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[10]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (short) (byte) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray5);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[10]");
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        java.lang.Double[] doubleArray39 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray44 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray49 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray55 = new java.lang.Double[][] { doubleArray39, doubleArray44, doubleArray49, doubleArray54 };
        java.lang.Double[][] doubleArray56 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray55);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray56);
        java.util.Map<java.lang.Object, java.lang.Object> objMap58 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray56);
        boolean[] booleanArray64 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray64, (int) (byte) 0, 0);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray64, 4, (int) '4');
        java.lang.Boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray64);
        java.lang.Double[][] doubleArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray56, (java.lang.Object) booleanArray64);
        short[] shortArray78 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray78, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray78);
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray78, (short) (byte) 0);
        java.lang.Short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder34.append((java.lang.Object[]) doubleArray72, (java.lang.Object[]) shortArray85);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85, (short) 0);
        short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.remove(shortArray88, 1);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.contains(shortArray90, (short) 10);
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray90, (short) (byte) -1, (int) (short) 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objMap58);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, 0.0d);
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        java.lang.Double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray18);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(10.0d, (double) 0L);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) 'a');
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray50, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray50);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray50, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder31.append((java.lang.Object) 'a', (java.lang.Object) intArray55);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.add(intArray55, 0);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray55, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray12);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.clone(charArray13);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.subarray(charArray13, (int) ' ', 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray17);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray13);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[1.0, -1.0]");
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, (int) (short) 10, 0.0d);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 5, (int) (short) 0);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100, (double) 7);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 6, (-1));
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray46, (double) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray6);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray6, (long) (-1));
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, 1, -1, 1, -1, 100, -1]");
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 100);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (short) 1);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (byte) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray8);
        java.lang.Integer[] intArray21 = org.apache.commons.lang3.ArrayUtils.toObject(intArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray8);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray21);
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, (int) (short) 10, 0.0d);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 5, (int) (short) 0);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 1, 2);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray55);
        float[] floatArray61 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray55, (java.lang.Object) boolean67);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray55, (int) (short) 0, 1);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray71, (double) (byte) -1);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray73, (int) (byte) 100, 1);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray76, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray76);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray81, (int) 'a', 3);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray84);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray84, (double) 7, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        java.lang.Byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray11);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) 100);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 1L, 0L };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17, 0L);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17, 100L);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray22, (-1L), (int) (byte) 100);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray22);
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray11, (java.lang.Object) boolean26, true);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 1, 100, 1, -1]");
    }
}

