import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest22 {

    public static boolean debug = false;

    @Test
    public void test11001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11001");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray29);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.add(intArray30, (int) (short) 0, 5);
        java.lang.Integer[] intArray34 = org.apache.commons.lang3.ArrayUtils.toObject(intArray33);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray44 = new char[] { '#', 'a', 'a' };
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray40, charArray44);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray40, ' ');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray47);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(charArray48, ' ');
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray48, 'a');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.subarray(charArray48, 8, (int) (byte) 10);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray34, (java.lang.Object) (byte) 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[5, -1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test11002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11002");
        int[] intArray0 = null;
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray1, (int) (byte) -1, (int) (short) -1);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray1, (int) (byte) 100);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test11003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11003");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray0, intArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, ' ');
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder3.append((java.lang.Object) ' ', (java.lang.Object) charArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder3.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray44);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray45, intArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(intArray46, (int) '4');
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.add(intArray46, (int) (short) 100);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray46);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray46, (int) (short) 1);
        int[] intArray56 = new int[] {};
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray56, intArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder37.append(intArray46, intArray57);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.addAll(intArray1, intArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray57);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray57, 3, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray66 = org.apache.commons.lang3.ArrayUtils.remove(intArray57, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test11004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11004");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        equalsBuilder50.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder50.append((long) 8, (long) 'a');
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder54);
    }

    @Test
    public void test11005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11005");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray40 = org.apache.commons.lang3.ArrayUtils.remove(longArray29, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11006");
        boolean[] booleanArray5 = new boolean[] { false, true, false, false, false };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14);
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray8, (java.lang.Object) byteArray16);
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 100);
        boolean[] booleanArray30 = new boolean[] { false, false, false, true, false, false };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray38);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray30, false);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray30, false);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray30, (int) (byte) 100, 100);
        java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray47);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray16, (java.lang.Object) booleanArray48);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[]");
    }

    @Test
    public void test11007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11007");
        java.lang.Character[] charArray6 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray13 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray20 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[][] charArray21 = new java.lang.Character[][] { charArray6, charArray13, charArray20 };
        java.lang.Character[][][] charArray22 = new java.lang.Character[][][] { charArray21 };
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23, '4');
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32);
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray25, (java.lang.Object) byteArray32, true);
        java.lang.Character[] charArray41 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray42 = new java.lang.Character[][] { charArray41 };
        java.lang.Character[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray32, (java.lang.Object[]) charArray43);
        java.lang.Character[][][] charArray45 = org.apache.commons.lang3.ArrayUtils.add(charArray22, charArray43);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray22, (java.lang.Object[]) intArray48);
        java.lang.Integer[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray48, 9);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray53, (int) (byte) 100);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.subarray(intArray53, 0, 100);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray53, (int) '#', 10);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray53);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray53, (int) (byte) 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 0, 100]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 0]");
    }

    @Test
    public void test11008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11008");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray10, (float) (short) 0);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (short) 100);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.clone(floatArray12);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, (int) (short) -1, (float) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[0.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[0.0]");
    }

    @Test
    public void test11009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11009");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, (int) (short) 1);
        short[] shortArray34 = new short[] { (short) 10 };
        short[] shortArray36 = new short[] { (short) 10 };
        short[] shortArray38 = new short[] { (short) 10 };
        short[] shortArray40 = new short[] { (short) 10 };
        short[][] shortArray41 = new short[][] { shortArray34, shortArray36, shortArray38, shortArray40 };
        short[][] shortArray42 = org.apache.commons.lang3.ArrayUtils.clone(shortArray41);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray52 = new char[] { '#', 'a', 'a' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.addAll(charArray48, charArray52);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.subarray(charArray52, (int) 'a', (int) (short) 10);
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.add(charArray52, '4');
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray52, '4');
        java.lang.Character[] charArray61 = org.apache.commons.lang3.ArrayUtils.toObject(charArray52);
        short[][] shortArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray42, (java.lang.Object) charArray52);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray52);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray52);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray64);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.subarray(charArray64, 3, (int) (byte) 1);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(charArray64, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[10]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[10]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[10]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[10]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#aa#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#aa#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, a, a, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test11010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11010");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray4, (float) '4');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray12, (float) (short) 10);
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray21);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray21, (int) (byte) 1, 0);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) 'a');
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray21);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.clone(floatArray15);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 10.0, -1.0, 97.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 10.0, -1.0, 97.0, 10.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 10.0, -1.0, 97.0, 10.0]");
    }

    @Test
    public void test11011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11011");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, 0.0d, (int) (byte) 100, (-1.0d));
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 100L);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        double[] doubleArray24 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray24, (double) (byte) 100, 1.0d);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray24, 2, (int) 'a');
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray24);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (int) (short) 1, (double) (-1L));
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) 10.0f, (int) 'a');
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test11012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11012");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.add(longArray6, (int) (byte) 1, (long) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.add(longArray6, 1, (long) 100);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.subarray(longArray14, (int) ' ', 0);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 10, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[0, 100, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[]");
    }

    @Test
    public void test11013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11013");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray57);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray57);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test11014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11014");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray5 = null;
        float[] floatArray6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray14, floatArray23);
        boolean boolean25 = strList12.equals((java.lang.Object) floatArray24);
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray31);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(floatArray5, floatArray6);
        long[] longArray44 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.subarray(longArray44, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray44);
        java.lang.Long[] longArray49 = org.apache.commons.lang3.ArrayUtils.toObject(longArray44);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray44);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toObject(longArray44);
        long[] longArray58 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.subarray(longArray58, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray58);
        long[] longArray64 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(longArray64, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        long[] longArray74 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray74, 1L);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray69, longArray76);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.addAll(longArray58, longArray76);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray76, (long) 1, 5);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.subarray(longArray76, (int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append(longArray44, longArray84);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray44);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.contains(longArray44, (long) (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[-1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test11015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11015");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray8);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (short) 1);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray15, (int) (short) -1);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(intArray15, 2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11016");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray11 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray11, 1L);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray21, ' ');
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray38 = new char[] { '#', 'a', 'a' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray38);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray38, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder15.append((java.lang.Object) ' ', (java.lang.Object) charArray38);
        java.lang.Long[] longArray49 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray49);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray51);
        char[] charArray56 = new char[] { 'a', '#', ' ' };
        char[][] charArray57 = new char[][] { charArray56 };
        char[][] charArray58 = org.apache.commons.lang3.ArrayUtils.toArray(charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder43.append((java.lang.Object[]) longArray51, (java.lang.Object[]) charArray58);
        long[] longArray64 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray64, 1L);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray64, 0L);
        long[] longArray73 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray73, 1L);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray73, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder43.append(longArray64, longArray73);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray64, (long) (byte) 100);
        int int84 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray64, 10L);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray64, (long) 11);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[0, -1, 1, 32]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[-1, 32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[0, -1, 1, 32]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test11017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11017");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int4 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray3);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test11018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11018");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray2);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray10);
        long[] longArray14 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray10, longArray14);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray10);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11019");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray11);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray21, ' ');
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray38 = new char[] { '#', 'a', 'a' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray38);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray38, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder15.append((java.lang.Object) ' ', (java.lang.Object) charArray38);
        float[] floatArray49 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray49);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray49, (int) (byte) 1, 0);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(floatArray49, (float) 'a');
        float[] floatArray62 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray62);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray62);
        float[] floatArray69 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray72 = new float[] { (byte) -1, 1L };
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray72, (float) 10L);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray69, floatArray72);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray62, floatArray72);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray83);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray83);
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray72, (java.lang.Object) wildcardClass86, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder15.append(floatArray49, floatArray72);
        int int91 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray13, (java.lang.Object) floatArray72, (int) (byte) -1);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray72, 10.0f);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray72);
        java.lang.Float[] floatArray95 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray72);
        float[] floatArray97 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray95, (float) (short) 100);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(floatArray95);
        org.junit.Assert.assertNotNull(floatArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray97), "[-1.0, 1.0]");
    }

    @Test
    public void test11020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11020");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 0, (short) (byte) 10);
        byte[] byteArray46 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.add(byteArray46, (byte) -1);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) 0);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray48, (byte) -1);
        byte[] byteArray59 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.add(byteArray59, (byte) -1);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.add(byteArray61, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder36.append(byteArray52, byteArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder36.append('4', 'a');
        equalsBuilder36.reset();
        java.lang.Boolean[] booleanArray74 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray74);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray75);
        boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray75);
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray77);
        boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray78, (int) (byte) -1, (int) 'a');
        boolean[] booleanArray82 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder36.append(booleanArray81, booleanArray82);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[100, -1, 10, -1, -1, 100, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[100, -1, 10, -1, -1, 100, -1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test11021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11021");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, 1);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray13, 9);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.subarray(intArray13, 0, (int) (short) 10);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray13, 8);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 8]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test11022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11022");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        short[] shortArray27 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray31 = new java.lang.Short[] {};
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray27, shortArray34);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) 0, 0);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray42 = null;
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(shortArray41, shortArray46);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray46, (short) 0, (int) 'a');
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray46, (short) 0);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray46, (short) (byte) 10, 1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray46);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test11023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11023");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Boolean boolean64 = equalsBuilder63.build();
        equalsBuilder63.reset();
        java.lang.Long[] longArray71 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray71);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray71, (long) (short) 10);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.clone(longArray74);
        long[] longArray77 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray75, (long) (short) 0);
        java.lang.Long[] longArray80 = new java.lang.Long[] { 1L, 0L };
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray80);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.clone(longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder63.append(longArray77, longArray82);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray77);
        java.lang.Long[] longArray85 = org.apache.commons.lang3.ArrayUtils.toObject(longArray77);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.subarray(longArray77, (int) ' ', (int) (byte) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[0, 100, 100, 1]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[]");
    }

    @Test
    public void test11024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11024");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray4, '#');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray6, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray8, 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray22 = new char[] { '#', 'a', 'a' };
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray18, charArray22);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray18, ' ');
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray35 = new char[] { '#', 'a', 'a' };
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.addAll(charArray31, charArray35);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray35, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder12.append((java.lang.Object) ' ', (java.lang.Object) charArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder12.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append(2, 5);
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray47);
        java.lang.Character[] charArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray51);
        char[] charArray58 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray62 = new char[] { '#', 'a', 'a' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.addAll(charArray58, charArray62);
        java.lang.String str64 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray58);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray51, charArray58);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray75 = new char[] { '#', 'a', 'a' };
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.addAll(charArray71, charArray75);
        java.lang.String str77 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray71);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray71);
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray58, (java.lang.Object) charArray78, false);
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.toObject(charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder43.append((java.lang.Object[]) doubleArray47, (java.lang.Object[]) charArray81);
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81);
        char[] charArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray83, 'a');
        char[] charArray87 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray83, '#');
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.add(charArray87, '#');
        char[] charArray90 = null;
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.addAll(charArray89, charArray90);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray10, charArray91);
        int int95 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray91, ' ', 9);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{4,#,a,4,#}" + "'", str64, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{4,#,a,4,#}" + "'", str77, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "4a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "4a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[4, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4a4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4a4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4, a, 4, #, #]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4a4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4a4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, a, 4, #, #]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test11025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11025");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.lang.String[] strArray36 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.parallelStream();
        boolean boolean40 = strList31.addAll((java.util.Collection<java.lang.String>) strList37);
        java.util.stream.Stream<java.lang.String> strStream41 = strList31.parallelStream();
        boolean boolean43 = strList31.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray48 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray57 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.remove(floatArray57, (int) (short) 1);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray51, floatArray60);
        boolean boolean62 = strList49.equals((java.lang.Object) floatArray61);
        int int63 = strList49.size();
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (byte) 1);
        boolean boolean67 = strList49.contains((java.lang.Object) int66);
        boolean boolean68 = strList31.addAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String[] strArray73 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray82 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.remove(floatArray82, (int) (short) 1);
        float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray76, floatArray85);
        boolean boolean87 = strList74.equals((java.lang.Object) floatArray86);
        int int88 = strList74.size();
        boolean boolean89 = strList31.removeAll((java.util.Collection<java.lang.String>) strList74);
        boolean boolean90 = strList9.contains((java.lang.Object) strList74);
        int int91 = strList74.size();
        java.util.Spliterator<java.lang.String> strSpliterator92 = strList74.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator93 = strList74.spliterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 4 + "'", int91 == 4);
        org.junit.Assert.assertNotNull(strSpliterator92);
        org.junit.Assert.assertNotNull(strSpliterator93);
    }

    @Test
    public void test11026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11026");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) -1 };
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 1);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(byteArray12, (byte) 100);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray12, (byte) 1);
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray17, (java.lang.Object) (byte) -1, (int) (byte) 10);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray17, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray22, (byte) 1);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(byteArray22, (byte) 10);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray22, 10, (int) '4');
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray3, byteArray22);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test11027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11027");
        char[] charArray6 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray13 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray20 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray27 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray34 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[][] charArray35 = new char[][] { charArray6, charArray13, charArray20, charArray27, charArray34 };
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.subarray(charArray46, (int) 'a', (int) (short) 10);
        char[][] charArray51 = org.apache.commons.lang3.ArrayUtils.add(charArray35, (int) (short) 1, charArray50);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray52, '#');
        char[] charArray62 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray66 = new char[] { '#', 'a', 'a' };
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray62, charArray66);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray62, ' ');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray52, charArray62);
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray70, 'a');
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.addAll(charArray50, charArray70);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray50, 'a', 6);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray86 = new char[] { '#', 'a', 'a' };
        char[] charArray87 = org.apache.commons.lang3.ArrayUtils.addAll(charArray82, charArray86);
        java.lang.String str88 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray82);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray82);
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray82, 'a', 0);
        char[] charArray93 = org.apache.commons.lang3.ArrayUtils.addAll(charArray50, charArray82);
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray50, '4');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "{4,#,a,4,#}" + "'", str88, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2 + "'", int92 == 2);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test11028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11028");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        double[] doubleArray8 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray8, (double) (byte) 100, 1.0d);
        double[] doubleArray16 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray8, doubleArray16);
        float[] floatArray22 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray25 = new float[] { (byte) -1, 1L };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) 10L);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray22, floatArray25);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray16, (java.lang.Object) boolean28);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray16);
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray31, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray31);
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray31);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray4, (java.lang.Object) doubleArray35, (int) (byte) 100);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.subarray(charArray38, 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray43 = org.apache.commons.lang3.ArrayUtils.remove(charArray41, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
    }

    @Test
    public void test11029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11029");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((float) (byte) 100, (float) 1L);
        java.lang.Double[] doubleArray44 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray49 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray59 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray60 = new java.lang.Double[][] { doubleArray44, doubleArray49, doubleArray54, doubleArray59 };
        java.lang.Double[][] doubleArray61 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray61);
        java.util.Map<java.lang.Object, java.lang.Object> objMap63 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray61);
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67, true);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray61, (java.lang.Object) booleanArray67);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "class [Ljava.lang.Integer;", "{true,true}", "class [Ljava.lang.Integer;", "100", "{{},{}}", "{-1,1,0,0,100}" };
        java.lang.CharSequence[] charSequenceArray85 = new java.lang.CharSequence[] { "class [Ljava.lang.Integer;", "{true,true}", "class [Ljava.lang.Integer;", "100", "{{},{}}", "{-1,1,0,0,100}" };
        java.lang.CharSequence[][] charSequenceArray86 = new java.lang.CharSequence[][] { charSequenceArray78, charSequenceArray85 };
        java.lang.String[][] strArray87 = new java.lang.String[][] {};
        java.lang.String[][] strArray88 = org.apache.commons.lang3.ArrayUtils.clone(strArray87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.CharSequence[][]) strArray87);
        java.lang.String[][] strArray90 = org.apache.commons.lang3.ArrayUtils.clone(strArray87);
        java.lang.CharSequence[][] charSequenceArray91 = org.apache.commons.lang3.ArrayUtils.addAll(charSequenceArray86, (java.lang.CharSequence[][]) strArray87);
        java.lang.CharSequence[][] charSequenceArray94 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.CharSequence[][]) strArray87, 4, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder36.append((java.lang.Object[]) booleanArray67, (java.lang.Object[]) charSequenceArray94);
        boolean[] booleanArray97 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67, true);
        boolean[] booleanArray99 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67, true);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objMap63);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertNotNull(charSequenceArray85);
        org.junit.Assert.assertNotNull(charSequenceArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(charSequenceArray91);
        org.junit.Assert.assertNotNull(charSequenceArray94);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(booleanArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray97), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray99), "[false, true, true]");
    }

    @Test
    public void test11030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11030");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray29);
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray29);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray31, (double) 0L);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray31);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray34, (double) 10L, (double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test11031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11031");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray36, byteArray41);
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (byte) -1);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.clone(byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 100);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(byteArray52, (byte) 0);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.clone(byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder35.append(byteArray41, byteArray52);
        java.lang.Short[] shortArray59 = new java.lang.Short[] {};
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59, (short) 1);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.clone(shortArray62);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray62, (short) 1);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.clone(shortArray65);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray65, (short) (byte) 1, 5);
        short[] shortArray74 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray74, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray74);
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray78, (short) (byte) 0);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray80, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder35.append(shortArray65, shortArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((byte) 0, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append(0, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((short) 1, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append(true, false);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test11032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11032");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        short[] shortArray18 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray18, (short) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray18);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray8, (java.lang.Object) shortArray18);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) 0);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, 3, (short) 0);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray31, (short) 10, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[-1, 1, 0, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test11033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11033");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray8, (long) ' ');
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray12);
    }

    @Test
    public void test11034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11034");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray6 = new java.lang.Character[][] { charArray5 };
        java.lang.Character[][] charArray7 = org.apache.commons.lang3.ArrayUtils.toArray(charArray6);
        java.util.Map<java.lang.Object, java.lang.Object> objMap8 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray6);
        java.lang.Character[][] charArray9 = org.apache.commons.lang3.ArrayUtils.toArray(charArray6);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17);
        java.lang.Byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray18);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray18, (byte) -1);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray18, (byte) 100);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray23, 0, (int) (short) 100);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.clone(byteArray23);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray6, (java.lang.Object) byteArray27, (int) (byte) 100);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertNotNull(objMap8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test11035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11035");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (short) 1, 1);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray6, true);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray27 = new boolean[] { false, false, false, true, false, false };
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray27);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray27, true);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray27, true);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray33, true);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, true, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test11036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11036");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray13);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.clone(floatArray13);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray18, (int) (byte) 1, 2);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray18, floatArray22);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray23);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray24, (int) (short) 0, (-1));
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray24);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11037");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9);
        java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test11038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11038");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray47 = new java.lang.Byte[][] { byteArray40, byteArray46 };
        java.lang.Byte[][] byteArray50 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray47, (int) '#', 10);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        java.lang.Byte[][] byteArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray47, (java.lang.Object) intArray57);
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Short[] shortArray61 = null;
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder34.append((java.lang.Object[]) intArray57, (java.lang.Object[]) shortArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        long[] longArray77 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.subarray(longArray77, 3, (int) (byte) 0);
        java.lang.Long[] longArray86 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray86);
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray86, (long) (short) 10);
        long[] longArray90 = org.apache.commons.lang3.ArrayUtils.clone(longArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder64.append(longArray80, longArray89);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray93 = org.apache.commons.lang3.ArrayUtils.remove(longArray80, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[]");
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray90), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test11039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11039");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray31, (double) 7);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 0L);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray31);
        double[] doubleArray40 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray40, (double) (byte) 100, 1.0d);
        double[] doubleArray48 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray48);
        float[] floatArray54 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray57 = new float[] { (byte) -1, 1L };
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray57, (float) 10L);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray54, floatArray57);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray48, (java.lang.Object) boolean60);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray48, (int) (short) 0, 1);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray64, (double) (byte) -1);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, (int) (byte) 100, 1);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 0, (int) (short) 10);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray72, (int) (byte) 10, 100);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray72);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray72, (double) 1L, (double) 10);
        double[] doubleArray80 = null;
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray72, doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0]");
    }

    @Test
    public void test11040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11040");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray13, (java.lang.Object) (byte) -1, (int) (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray18, 3, (int) (short) -1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.add(byteArray18, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, -1, -1, 100, 0, 0, 0]");
    }

    @Test
    public void test11041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11041");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.add(charArray23, '#');
        char[] charArray36 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray40 = new char[] { '#', 'a', 'a' };
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray40);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray40, ' ', 2);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.subarray(charArray40, 0, (int) (byte) 10);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray30, charArray47);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray47);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray47, ' ', (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray55 = org.apache.commons.lang3.ArrayUtils.add(charArray47, (-1), 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test11042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11042");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray12);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.clone(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray12, charArray15);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray15, '4', (int) '4');
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray15);
        char[] charArray23 = null;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray15, charArray23);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test11043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11043");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Short[] shortArray35 = new java.lang.Short[] {};
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35, (short) 1);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35, (short) 0);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray40, (short) -1);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray40, (short) 0);
        short[] shortArray50 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray50, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray54 = new java.lang.Short[] {};
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) 1);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray50, shortArray57);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray50, (short) 0, 0);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.add(shortArray50, (int) (byte) 0, (short) 0);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray64, (short) (byte) 1, (int) (short) 0);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray64, (short) (byte) -1, 0);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray64, (int) (byte) 100, (int) (byte) 100);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray73);
        java.lang.Short[] shortArray75 = new java.lang.Short[] {};
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75, (short) 1);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.clone(shortArray78);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray79, (short) (byte) -1, (int) (short) 100);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray79);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.contains(shortArray83, (short) (byte) 100);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray83, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder34.append(shortArray44, shortArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((long) 5, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append(10.0d, (double) 'a');
        equalsBuilder91.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test11044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11044");
        char[] charArray2 = new char[] { '4', '4' };
        char[] charArray5 = new char[] { '4', '4' };
        char[] charArray8 = new char[] { '4', '4' };
        char[][] charArray9 = new char[][] { charArray2, charArray5, charArray8 };
        char[] charArray12 = new char[] { '4', '4' };
        char[] charArray15 = new char[] { '4', '4' };
        char[] charArray18 = new char[] { '4', '4' };
        char[][] charArray19 = new char[][] { charArray12, charArray15, charArray18 };
        char[] charArray22 = new char[] { '4', '4' };
        char[] charArray25 = new char[] { '4', '4' };
        char[] charArray28 = new char[] { '4', '4' };
        char[][] charArray29 = new char[][] { charArray22, charArray25, charArray28 };
        char[] charArray32 = new char[] { '4', '4' };
        char[] charArray35 = new char[] { '4', '4' };
        char[] charArray38 = new char[] { '4', '4' };
        char[][] charArray39 = new char[][] { charArray32, charArray35, charArray38 };
        char[][][] charArray40 = new char[][][] { charArray9, charArray19, charArray29, charArray39 };
        char[] charArray44 = new char[] { 'a', '#', ' ' };
        char[][] charArray45 = new char[][] { charArray44 };
        char[][] charArray46 = org.apache.commons.lang3.ArrayUtils.toArray(charArray45);
        char[][][] charArray47 = org.apache.commons.lang3.ArrayUtils.add(charArray40, charArray45);
        long[] longArray50 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(longArray50, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray50);
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray50);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toObject(longArray56);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57, (long) 'a');
        char[][][] charArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray40, (java.lang.Object) longArray57);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.remove(longArray61, 0);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray63, (long) (short) 100);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray65, 0L);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[-1]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test11045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11045");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray36 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray40 = new char[] { '#', 'a', 'a' };
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray40);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray36, ' ');
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray53 = new char[] { '#', 'a', 'a' };
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray49, charArray53);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray53, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder30.append((java.lang.Object) ' ', (java.lang.Object) charArray53);
        java.lang.Long[] longArray64 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray64);
        java.lang.Long[] longArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray66);
        char[] charArray71 = new char[] { 'a', '#', ' ' };
        char[][] charArray72 = new char[][] { charArray71 };
        char[][] charArray73 = org.apache.commons.lang3.ArrayUtils.toArray(charArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder58.append((java.lang.Object[]) longArray66, (java.lang.Object[]) charArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder58.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder58.append((float) (byte) -1, 0.0f);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray29, (java.lang.Object) 0.0f, (int) (short) 100);
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray29);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.clone(intArray83);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 1, 0, 10, -1, 1]");
    }

    @Test
    public void test11046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11046");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray12, '4');
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, ' ');
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray27, '4');
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(charArray29, '4');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.add(charArray29, '#');
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray14, charArray33);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray44 = new char[] { '#', 'a', 'a' };
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray40, charArray44);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray44, ' ', 1);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray58 = new char[] { '#', 'a', 'a' };
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.addAll(charArray54, charArray58);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray44, charArray59);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.add(charArray59, 'a');
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray14, charArray59);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, 4, #, #]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4##aaa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4##aaa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #, #, a, a, a]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test11047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11047");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class[] classArray4 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        java.lang.Class[][] classArray13 = new java.lang.Class[4][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray14 = (java.lang.Class<?>[][]) classArray13;
        wildcardClassArray14[0] = wildcardClassArray2;
        wildcardClassArray14[1] = classArray4;
        wildcardClassArray14[2] = classArray7;
        wildcardClassArray14[3] = classArray10;
        boolean[] booleanArray29 = new boolean[] { false, false, false, true, false, false };
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray29);
        boolean[] booleanArray37 = new boolean[] { false, false, false, true, false, false };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray29, booleanArray37);
        java.lang.Class<?>[][] wildcardClassArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(wildcardClassArray14, (java.lang.Object) boolean39);
        java.lang.Long[] longArray46 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray46);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray46);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.add(longArray48, (int) (short) 0, (long) 10);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) wildcardClassArray14, (java.lang.Object) (short) 0);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray53);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.clone(shortArray55);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray55, (int) (byte) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass60 = shortArray55.getClass();
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray14, (java.lang.Object) shortArray55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement[][] annotatedElementArray63 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.reflect.AnnotatedElement[][]) wildcardClassArray14, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray40);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[10, 0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test11048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11048");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, true);
        boolean[] booleanArray26 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (int) (byte) 0, 0);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray29);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, false, (int) (byte) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray29);
        java.lang.Boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35, false);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35, true);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray39, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test11049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11049");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray2);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray10);
        long[] longArray13 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray13);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, 0L);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray13, (long) (short) 10);
        long[] longArray25 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(longArray25, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray25);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(longArray25, (long) (short) 100);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray35);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray35, (long) (-1), (int) '4');
        long[] longArray40 = null;
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.addAll(longArray35, longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray42);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray42);
        java.lang.Long[] longArray45 = org.apache.commons.lang3.ArrayUtils.toObject(longArray44);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.subarray(longArray44, (int) '4', (int) (short) 0);
        long[] longArray50 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(longArray50, 0L);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray54, (long) (byte) 1, (int) (short) 1);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray54, (long) 3, (int) 'a');
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(longArray54, (long) 7);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.remove(longArray54, (int) (byte) 0);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.addAll(longArray44, longArray64);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.addAll(longArray35, longArray65);
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.add(longArray35, 0L);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.addAll(longArray13, longArray35);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.addAll(longArray10, longArray69);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray70, (long) (byte) -1, (-1));
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[-1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[-1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[-1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test11050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11050");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(true, true);
        long[] longArray38 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(longArray38, 0L);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 5, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder31.append(longArray38, longArray45);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray45, (long) 'a', 0);
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.add(longArray45, 1, (long) (short) 10);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) (byte) 100, (int) '#');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[-1, 10]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test11051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11051");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray22 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray22, (int) (byte) 0, 0);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray22, true);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray16, booleanArray22);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray6, (java.lang.Object) booleanArray16);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray30, true, (int) (byte) 100);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
    }

    @Test
    public void test11052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11052");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray34);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray34, (int) (byte) 1, 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(floatArray34, (float) 'a');
        float[] floatArray47 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray47);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray47);
        float[] floatArray54 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray57 = new float[] { (byte) -1, 1L };
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray57, (float) 10L);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray54, floatArray57);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray47, floatArray57);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray68);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray68);
        java.lang.Class<?> wildcardClass71 = intArray68.getClass();
        boolean boolean73 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray57, (java.lang.Object) wildcardClass71, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder0.append(floatArray34, floatArray57);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray34);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) ' ');
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.add(floatArray34, (float) (byte) 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
    }

    @Test
    public void test11053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11053");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 0);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray50, (short) -1);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray52, (short) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(shortArray38, shortArray55);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(shortArray60, (short) 10);
        java.lang.Short[] shortArray64 = new java.lang.Short[] {};
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) 1);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.clone(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.add(shortArray68, (short) -1);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray68);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray68, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder56.append(shortArray60, shortArray73);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray60, (short) (byte) -1, 4);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.remove(shortArray60, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test11054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11054");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream14 = strList3.stream();
        java.lang.String[] strArray16 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.lang.String[] strArray21 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.stream.Stream<java.lang.String> strStream24 = strList22.parallelStream();
        java.lang.String[] strArray27 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.parallelStream();
        boolean boolean31 = strList22.addAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.Object obj32 = null;
        boolean boolean33 = strList28.equals(obj32);
        int int34 = strList28.size();
        boolean boolean35 = strList17.removeAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String[] strArray38 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.stream.Stream<java.lang.String> strStream41 = strList39.parallelStream();
        boolean boolean42 = strList28.addAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.Object[] objArray43 = strList28.toArray();
        strList28.clear();
        boolean boolean46 = strList28.add("{0,1,100,100,0}");
        java.lang.Object[] objArray47 = strList28.toArray();
        boolean boolean48 = strList3.addAll((java.util.Collection<java.lang.String>) strList28);
        java.util.stream.Stream<java.lang.String> strStream49 = strList28.parallelStream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[{0,1,100,100,0}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[{0,1,100,100,0}]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strStream49);
    }

    @Test
    public void test11055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11055");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 0);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray0);
        byte[] byteArray17 = new byte[] {};
        byte[] byteArray22 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray17, (byte) -1);
        short[] shortArray27 = new short[] { (short) 10 };
        short[] shortArray29 = new short[] { (short) 10 };
        short[] shortArray31 = new short[] { (short) 10 };
        short[] shortArray33 = new short[] { (short) 10 };
        short[][] shortArray34 = new short[][] { shortArray27, shortArray29, shortArray31, shortArray33 };
        short[][] shortArray35 = org.apache.commons.lang3.ArrayUtils.clone(shortArray34);
        java.lang.String[] strArray38 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.stream.Stream<java.lang.String> strStream41 = strList39.parallelStream();
        java.lang.String[] strArray44 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.parallelStream();
        boolean boolean48 = strList39.addAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean50 = strList45.add("{4,#,a,4,#}");
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray17, (java.lang.Object) shortArray34, (java.util.Collection<java.lang.String>) strList45);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray52, 2, (int) (short) 100);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[10]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[10]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[10]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[10]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
    }

    @Test
    public void test11056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11056");
        short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.add(shortArray0, (short) 0);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.add(shortArray0, (short) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (int) (short) 100, (short) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[0]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[100]");
    }

    @Test
    public void test11057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11057");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append(0L, (long) 'a');
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.append('a', 'a');
        boolean[] booleanArray18 = new boolean[] { false, false, false, true, false, false };
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray18);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray18, true);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray18, true);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray18);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray18, true);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray18, false);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray18, false);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray35, (int) (short) 10, 3);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.add(longArray40, (long) '#');
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray38, (java.lang.Object) longArray51, true);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray54, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray56);
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray63);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray64);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray64);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray57, booleanArray66);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray67);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray68, 9, (int) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder0.append(booleanArray18, booleanArray68);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test11058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11058");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        strList5.clear();
        boolean boolean21 = strList5.contains((java.lang.Object) "");
        int int22 = strList5.size();
        java.util.Spliterator<java.lang.String> strSpliterator23 = strList5.spliterator();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strSpliterator23);
    }

    @Test
    public void test11059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11059");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) (byte) 1, (int) (short) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray5, (long) 3, (int) 'a');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray5, (long) 7);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, (int) (byte) 0);
        java.lang.Long[] longArray21 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray21);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray21, (long) (short) 10);
        java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray21);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray25, (long) (byte) -1);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.subarray(longArray27, 100, (int) (short) 0);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray27, (long) (byte) -1);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray32, (long) 8, 9);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray5, longArray32);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray32, (long) 3);
        java.lang.Class<?> wildcardClass39 = longArray32.getClass();
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test11060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11060");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray10);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray10, 9, 4);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
    }

    @Test
    public void test11061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11061");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(1.0f, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('#', '#');
        java.util.stream.Stream[] streamArray52 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray53 = (java.util.stream.Stream<java.lang.String>[]) streamArray52;
        java.util.stream.Stream<java.lang.String>[] strStreamArray54 = org.apache.commons.lang3.ArrayUtils.clone((java.util.stream.Stream<java.lang.String>[]) streamArray52);
        java.util.stream.Stream<java.lang.String>[] strStreamArray55 = org.apache.commons.lang3.ArrayUtils.toArray((java.util.stream.Stream<java.lang.String>[]) streamArray52);
        java.lang.String[] strArray58 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream62 = strList59.stream();
        java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[] strBaseStreamArray63 = org.apache.commons.lang3.ArrayUtils.add((java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[]) strStreamArray55, (java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>) strStream62);
        boolean[] booleanArray67 = new boolean[] { true, true, true };
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray67, true);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray67, false);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray67);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray72, false, 1);
        java.lang.Boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder47.append((java.lang.Object[]) strStreamArray55, (java.lang.Object[]) booleanArray76);
        java.lang.Boolean boolean78 = equalsBuilder47.build();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(streamArray52);
        org.junit.Assert.assertNotNull(strStreamArray53);
        org.junit.Assert.assertNotNull(strStreamArray54);
        org.junit.Assert.assertNotNull(strStreamArray55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strBaseStreamArray63);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertEquals("'" + boolean78 + "' != '" + false + "'", boolean78, false);
    }

    @Test
    public void test11062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11062");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray57);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.subarray(intArray57, 5, (int) (byte) 1);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.add(intArray62, (int) (short) 0);
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray62, 6);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray68 = org.apache.commons.lang3.ArrayUtils.remove(intArray66, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
    }

    @Test
    public void test11063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11063");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, 0, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray17);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray19, true);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray19, 3);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, true]");
    }

    @Test
    public void test11064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11064");
        float[] floatArray4 = new float[] { 1.0f, 5, (byte) -1, 0.0f };
        float[] floatArray9 = new float[] { 1.0f, 5, (byte) -1, 0.0f };
        float[] floatArray14 = new float[] { 1.0f, 5, (byte) -1, 0.0f };
        float[] floatArray19 = new float[] { 1.0f, 5, (byte) -1, 0.0f };
        float[] floatArray24 = new float[] { 1.0f, 5, (byte) -1, 0.0f };
        float[] floatArray29 = new float[] { 1.0f, 5, (byte) -1, 0.0f };
        float[][] floatArray30 = new float[][] { floatArray4, floatArray9, floatArray14, floatArray19, floatArray24, floatArray29 };
        float[][][] floatArray31 = new float[][][] { floatArray30 };
        float[][][] floatArray32 = org.apache.commons.lang3.ArrayUtils.toArray(floatArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray32);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[1.0, 5.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[1.0, 5.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[1.0, 5.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[1.0, 5.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[1.0, 5.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[1.0, 5.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test11065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11065");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray29 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.parallelStream();
        java.lang.String[] strArray40 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList35.addAll((java.util.Collection<java.lang.String>) strList41);
        java.lang.Object obj45 = null;
        boolean boolean46 = strList41.equals(obj45);
        int int47 = strList41.size();
        boolean boolean48 = strList30.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor49 = strList41.iterator();
        boolean boolean50 = strList13.retainAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator51 = strList13.spliterator();
        boolean boolean53 = strList13.add("{100,0,1,-1}");
        java.lang.Short[] shortArray54 = new java.lang.Short[] {};
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) 1);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.clone(shortArray57);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray58, (short) (byte) -1, (int) (short) 100);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray58);
        short[] shortArray63 = null;
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray58, shortArray63);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.add(shortArray64, (short) 100);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray64, (short) 0);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.clone(shortArray64);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray69, 1, 0);
        boolean boolean73 = strList13.equals((java.lang.Object) shortArray69);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray69);
        java.lang.Short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray74);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[100]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray75);
    }

    @Test
    public void test11066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11066");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.lang.String[] strArray36 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.parallelStream();
        boolean boolean40 = strList31.addAll((java.util.Collection<java.lang.String>) strList37);
        java.util.stream.Stream<java.lang.String> strStream41 = strList31.parallelStream();
        boolean boolean43 = strList31.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray48 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray57 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.remove(floatArray57, (int) (short) 1);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray51, floatArray60);
        boolean boolean62 = strList49.equals((java.lang.Object) floatArray61);
        int int63 = strList49.size();
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (byte) 1);
        boolean boolean67 = strList49.contains((java.lang.Object) int66);
        boolean boolean68 = strList31.addAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String[] strArray73 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray82 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.remove(floatArray82, (int) (short) 1);
        float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray76, floatArray85);
        boolean boolean87 = strList74.equals((java.lang.Object) floatArray86);
        int int88 = strList74.size();
        boolean boolean89 = strList31.removeAll((java.util.Collection<java.lang.String>) strList74);
        java.util.Iterator<java.lang.String> strItor90 = strList74.iterator();
        boolean boolean91 = strList13.retainAll((java.util.Collection<java.lang.String>) strList74);
        int int92 = strList74.size();
        java.util.Spliterator<java.lang.String> strSpliterator93 = strList74.spliterator();
        boolean boolean95 = strList74.add("class [Ljava.lang.Integer;");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 4 + "'", int92 == 4);
        org.junit.Assert.assertNotNull(strSpliterator93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test11067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11067");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        java.lang.Byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray11);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray13, (byte) 100);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.add(byteArray13, 5, (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray18);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 1, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 1, 100, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test11068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11068");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.remove(intArray26, (int) (byte) 1);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        float[] floatArray35 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray35);
        float[] floatArray42 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray45 = new float[] { (byte) -1, 1L };
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray45, (float) 10L);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray42, floatArray45);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray35, floatArray45);
        java.lang.Float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray50);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray51);
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray51);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray51);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray29, (java.lang.Object) floatArray54);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray29, 2, 9);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test11069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11069");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray18, (byte) 0);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.remove(byteArray18, 0);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray18);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray18, (byte) 10);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray18);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray18, (byte) -1, 6);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
    }

    @Test
    public void test11070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11070");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, (int) '#', (int) (short) 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray42, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder19.append((java.lang.Object) ' ', (java.lang.Object) charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray60);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray61, intArray62);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(intArray62, (int) '4');
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.add(intArray62, (int) (short) 100);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray62);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray62);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray62, (int) (short) 1);
        int[] intArray72 = new int[] {};
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray72, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder53.append(intArray62, intArray73);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray73);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.subarray(intArray73, 100, 100);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray79);
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.add(intArray79, (int) '4');
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray82);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.clone(intArray83);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray84);
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray85, (int) '#');
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray85, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray89);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[52]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[52]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[52]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[52]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[52]");
    }

    @Test
    public void test11071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11071");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 0);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray14);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11072");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14, (byte) 1);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray16, (byte) -1);
        boolean boolean19 = strList5.contains((java.lang.Object) (byte) -1);
        boolean boolean20 = strList5.isEmpty();
        boolean boolean22 = strList5.add("{1,1,100,1,-1}");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test11073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11073");
        long[] longArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray2 = org.apache.commons.lang3.ArrayUtils.remove(longArray0, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11074");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        long[] longArray9 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray9);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, (long) (short) 100);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) '#');
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray7, (java.lang.Object) longArray20, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray23, true);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray26);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray26, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]");
    }

    @Test
    public void test11075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11075");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (short) (byte) 10);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray5);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 100, 2);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (short) 100);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[10]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100]");
    }

    @Test
    public void test11076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11076");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0);
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0, (double) 11);
        java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray12, true);
        double[] doubleArray18 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, 1.0d);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, 100.0d, (int) (short) 1, (double) 1L);
        boolean boolean26 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean14, (java.lang.Object) doubleArray18);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray18);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (-1L), (double) 2);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test11077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11077");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, (float) (-1L));
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray13, 1, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray24);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test11078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11078");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append(false, false);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray44, byteArray49);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray44, (byte) -1);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray44, (byte) -1);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.clone(byteArray54);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray62, (byte) 1);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(byteArray64, (byte) 100);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(byteArray64, (byte) 1);
        java.lang.Byte[] byteArray75 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray75, (byte) 1);
        byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray77, (int) (byte) 0, (int) (byte) 1);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray64, byteArray80);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray64, (byte) 10);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.add(byteArray64, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder43.append(byteArray55, byteArray64);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray55);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray55);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray55);
        byte[] byteArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray89);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[]");
    }

    @Test
    public void test11079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11079");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        long[] longArray11 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray9, (java.lang.Object) longArray11);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (-1L));
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) (byte) 1, (int) (short) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, 2, (int) (byte) 10);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.clone(floatArray15);
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray29, 0.0f);
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray39 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray39);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray39);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray39, (int) (byte) 1, 0);
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray47);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray29, floatArray47);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray29, (int) (short) -1, (int) (short) 10);
        float[] floatArray60 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray63 = new float[] { (byte) -1, 1L };
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray63, (float) 10L);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray60, floatArray63);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray60, (float) '4');
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray68);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.add(floatArray68, (float) (short) 10);
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray29, floatArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray29);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[100.0, 10.0, -1.0, 97.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 100.0, 100.0, 10.0, 35.0, 100.0, 10.0, -1.0, 97.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test11080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11080");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 0);
        java.lang.Short[] shortArray10 = new java.lang.Short[] {};
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) 1);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray14);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray14, (short) (byte) 1);
        short[] shortArray23 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray23, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray23);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray23, (short) (byte) 0);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray29, (short) (byte) 10);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray29, (short) (byte) -1);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray29);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray34, (short) -1, (int) (byte) 100);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.add(shortArray34, 0, (short) 100);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(shortArray34, (short) (byte) -1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray14, shortArray34);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray34, (short) (byte) 100);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray45);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray45, (short) 100);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[100, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[100, 100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test11081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11081");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((long) 100, (long) '#');
        float[] floatArray41 = null;
        float[] floatArray47 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray47);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray47);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray47, (int) (byte) 1, 0);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray52, 4, (int) '4');
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.clone(floatArray52);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, (float) 7);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder37.append(floatArray41, floatArray52);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
    }

    @Test
    public void test11082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11082");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        boolean boolean9 = strList5.add("{-1,-1}");
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray22 = new java.lang.Byte[][] { byteArray15, byteArray21 };
        java.lang.Byte[][] byteArray25 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray22, (int) '#', 10);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray32);
        java.lang.Byte[][] byteArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray22, (java.lang.Object) intArray32);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray32, (int) (short) -1);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray32, (int) ' ');
        java.lang.Integer[] intArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray32, 3);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray54 = new java.lang.Byte[][] { byteArray47, byteArray53 };
        java.lang.Byte[][] byteArray57 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray54, (int) '#', 10);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray64);
        java.lang.Byte[][] byteArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray54, (java.lang.Object) intArray64);
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray64, (int) (short) -1);
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray64, (int) ' ');
        java.lang.Integer[] intArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray64);
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray71);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray72, (int) (byte) 10);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray74, (int) (short) 100, 2);
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.addAll(intArray41, intArray74);
        boolean boolean79 = strList5.remove((java.lang.Object) intArray41);
        strList5.clear();
        java.lang.String[] strArray83 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.stream.Stream<java.lang.String> strStream86 = strList84.parallelStream();
        java.lang.String[] strArray89 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.stream.Stream<java.lang.String> strStream92 = strList90.parallelStream();
        boolean boolean93 = strList84.addAll((java.util.Collection<java.lang.String>) strList90);
        java.lang.Object obj94 = null;
        boolean boolean95 = strList90.equals(obj94);
        java.util.stream.Stream<java.lang.String> strStream96 = strList90.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream97 = strList90.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream98 = strList90.stream();
        boolean boolean99 = strList5.retainAll((java.util.Collection<java.lang.String>) strList90);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 1, 0, 10, -1, 1, -1, 1, 0, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strStream86);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strStream92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strStream96);
        org.junit.Assert.assertNotNull(strStream97);
        org.junit.Assert.assertNotNull(strStream98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test11083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11083");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) (byte) 1, (int) (short) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray5, (long) 3, (int) 'a');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray5, (long) 7);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, (int) (byte) 0);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.add(longArray15, 0, (long) '4');
        float[] floatArray24 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray24);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray24);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.add(floatArray27, (float) 0L);
        float[] floatArray35 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray35);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray35, (int) (byte) 1, 0);
        float[] floatArray43 = new float[] { (byte) -1, 1L };
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray43, (float) 10L);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray40, floatArray43);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray43);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.clone(floatArray43);
        float[] floatArray54 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray54, 0.0f);
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        long[] longArray60 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray60);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray58, (java.lang.Object) longArray60);
        float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray58, (float) (-1L));
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray43, floatArray64);
        java.lang.Float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.remove(floatArray64, (int) (byte) 0);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray29, floatArray64);
        java.util.Collection<java.lang.String> strCollection70 = null;
        boolean boolean71 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0, (java.lang.Object) floatArray29, strCollection70);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[52]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[-1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test11084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11084");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) (-1), (int) (byte) -1, (double) 1.0f);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 100L, 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test11085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11085");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        long[] longArray8 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(longArray8, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray8);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(longArray8, (long) (short) 100);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        long[] longArray20 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray20);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(longArray20, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray20);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(longArray20, (long) 0);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.addAll(longArray8, longArray20);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray27, longArray29);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray4, longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray4);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.subarray(longArray35, 5, (int) (byte) -1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(longArray38, (long) (byte) 1);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test11086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11086");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.Object[] objArray28 = strList13.toArray();
        java.lang.String[] strArray31 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.parallelStream();
        java.lang.String[] strArray37 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.parallelStream();
        boolean boolean41 = strList32.addAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.Object obj42 = null;
        boolean boolean43 = strList38.equals(obj42);
        java.util.Spliterator<java.lang.String> strSpliterator44 = strList38.spliterator();
        boolean boolean45 = strList13.retainAll((java.util.Collection<java.lang.String>) strList38);
        short[] shortArray51 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray51, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray55 = new java.lang.Short[] {};
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray55);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray55, (short) 1);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray51, shortArray58);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray51, (short) 10);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray51);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray62, (short) (byte) 1);
        boolean boolean65 = strList38.remove((java.lang.Object) (byte) 1);
        java.lang.String[] strArray67 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.lang.String[] strArray72 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.stream.Stream<java.lang.String> strStream75 = strList73.parallelStream();
        java.lang.String[] strArray78 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.stream.Stream<java.lang.String> strStream81 = strList79.parallelStream();
        boolean boolean82 = strList73.addAll((java.util.Collection<java.lang.String>) strList79);
        java.lang.Object obj83 = null;
        boolean boolean84 = strList79.equals(obj83);
        int int85 = strList79.size();
        boolean boolean86 = strList68.removeAll((java.util.Collection<java.lang.String>) strList79);
        java.lang.String[] strArray89 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.stream.Stream<java.lang.String> strStream92 = strList90.parallelStream();
        boolean boolean93 = strList79.addAll((java.util.Collection<java.lang.String>) strList90);
        boolean boolean94 = strList79.isEmpty();
        boolean boolean95 = strList38.retainAll((java.util.Collection<java.lang.String>) strList79);
        java.util.stream.Stream<java.lang.String> strStream96 = strList79.parallelStream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[100, 0, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strStream75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strStream92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strStream96);
    }

    @Test
    public void test11087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11087");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 0);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 100);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray8);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test11088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11088");
        java.lang.Object[] objArray0 = null;
        java.lang.Float[][][] floatArray1 = new java.lang.Float[][][] {};
        java.lang.Float[][][] floatArray4 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray1, 100, 100);
        java.lang.Cloneable[] cloneableArray5 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Cloneable[]) floatArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray0, (java.lang.Object[]) floatArray4);
        java.lang.Object[] objArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray4);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(cloneableArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
    }

    @Test
    public void test11089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11089");
        boolean[] booleanArray0 = new boolean[] {};
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.stream.Stream<java.lang.String> strStream16 = strList14.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.stream.Stream<java.lang.String> strStream22 = strList20.parallelStream();
        boolean boolean23 = strList14.addAll((java.util.Collection<java.lang.String>) strList20);
        java.util.stream.Stream<java.lang.String> strStream24 = strList14.parallelStream();
        boolean boolean26 = strList14.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray31 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray40 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.remove(floatArray40, (int) (short) 1);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray43);
        boolean boolean45 = strList32.equals((java.lang.Object) floatArray44);
        int int46 = strList32.size();
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray47, (int) (byte) 1);
        boolean boolean50 = strList32.contains((java.lang.Object) int49);
        boolean boolean51 = strList14.addAll((java.util.Collection<java.lang.String>) strList32);
        boolean boolean52 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int4, (java.lang.Object) charArray5, (java.util.Collection<java.lang.String>) strList14);
        java.lang.String[] strArray55 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.parallelStream();
        java.lang.String[] strArray61 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.stream.Stream<java.lang.String> strStream64 = strList62.parallelStream();
        boolean boolean65 = strList56.addAll((java.util.Collection<java.lang.String>) strList62);
        java.util.stream.Stream<java.lang.String> strStream66 = strList56.parallelStream();
        boolean boolean67 = strList14.retainAll((java.util.Collection<java.lang.String>) strList56);
        char[] charArray73 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray77 = new char[] { '#', 'a', 'a' };
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.addAll(charArray73, charArray77);
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.subarray(charArray77, (int) 'a', (int) (short) 10);
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.add(charArray77, '4');
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray77);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains(charArray77, '#');
        java.lang.Class<?> wildcardClass87 = charArray77.getClass();
        boolean boolean88 = strList56.equals((java.lang.Object) wildcardClass87);
        java.util.stream.Stream<java.lang.String> strStream89 = strList56.stream();
        java.lang.Object obj90 = null;
        boolean boolean91 = strList56.contains(obj90);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strStream16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test11090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11090");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.util.Iterator<java.lang.String> strItor34 = strList31.iterator();
        boolean boolean35 = strList9.containsAll((java.util.Collection<java.lang.String>) strList31);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList9.removeAll((java.util.Collection<java.lang.String>) strList41);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY;
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 100, 10);
        boolean boolean49 = strList9.equals((java.lang.Object) 10);
        strList9.clear();
        strList9.clear();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test11091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11091");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray7, 3, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray7, 11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[]");
    }

    @Test
    public void test11092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11092");
        double[] doubleArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray0, (double) (short) 0, 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test11093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11093");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, (int) (short) 100, 0);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray9);
        java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.toObject(intArray10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray19);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray20, intArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray21, (int) (byte) 0);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray21);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray29, intArray30);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.addAll(intArray26, intArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder12.append(intArray25, intArray29);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(intArray29, (int) 'a');
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.addAll(intArray10, intArray29);
        java.lang.Integer[] intArray37 = org.apache.commons.lang3.ArrayUtils.toObject(intArray29);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray37);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray37);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
    }

    @Test
    public void test11094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11094");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (short) 10);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray9, (long) (short) 0);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray9, (long) 3);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[0, 1, 100, 100, 0]");
    }

    @Test
    public void test11095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11095");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        long[] longArray59 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, '4');
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray68);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.add(strArray72, "{true,true}");
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray71, (java.lang.Object[]) strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray52, (java.lang.Object) longArray59, strArray72);
        long[] longArray77 = null;
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.addAll(longArray59, longArray77);
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, (int) (short) -1, 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[100]");
    }

    @Test
    public void test11096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11096");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray6);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray16, (java.lang.Object) intArray23);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray28, (byte) 10);
        java.lang.String[] strArray34 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean9, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList35.parallelStream();
        short[] shortArray44 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray44, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray48 = new java.lang.Short[] {};
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48, (short) 1);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray44, shortArray51);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray44);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.add(shortArray44, (int) (byte) 0, (short) 0);
        boolean boolean57 = strList35.remove((java.lang.Object) shortArray56);
        java.lang.String[] strArray60 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream64 = strList61.stream();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray71);
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray72, intArray73);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(intArray73, (int) '4');
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.add(intArray73, (int) (short) 100);
        boolean boolean79 = strList61.contains((java.lang.Object) intArray78);
        boolean boolean80 = strList35.addAll((java.util.Collection<java.lang.String>) strList61);
        java.util.stream.Stream<java.lang.String> strStream81 = strList61.parallelStream();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strStream81);
    }

    @Test
    public void test11097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11097");
        org.apache.commons.lang3.ArrayUtils arrayUtils0 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils arrayUtils1 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0, arrayUtils1 };
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray2 };
        org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray4 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray3 };
        org.apache.commons.lang3.ArrayUtils arrayUtils5 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils arrayUtils6 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray7 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils5, arrayUtils6 };
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray7 };
        org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray9 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray8 };
        org.apache.commons.lang3.ArrayUtils[][][][] arrayUtilsArray10 = new org.apache.commons.lang3.ArrayUtils[][][][] { arrayUtilsArray4, arrayUtilsArray9 };
        org.apache.commons.lang3.ArrayUtils[][][][] arrayUtilsArray13 = org.apache.commons.lang3.ArrayUtils.subarray(arrayUtilsArray10, 2, (int) '#');
        org.apache.commons.lang3.ArrayUtils[][][][] arrayUtilsArray16 = org.apache.commons.lang3.ArrayUtils.subarray(arrayUtilsArray10, 0, (int) (short) 100);
        org.junit.Assert.assertNotNull(arrayUtilsArray2);
        org.junit.Assert.assertNotNull(arrayUtilsArray3);
        org.junit.Assert.assertNotNull(arrayUtilsArray4);
        org.junit.Assert.assertNotNull(arrayUtilsArray7);
        org.junit.Assert.assertNotNull(arrayUtilsArray8);
        org.junit.Assert.assertNotNull(arrayUtilsArray9);
        org.junit.Assert.assertNotNull(arrayUtilsArray10);
        org.junit.Assert.assertNotNull(arrayUtilsArray13);
        org.junit.Assert.assertNotNull(arrayUtilsArray16);
    }

    @Test
    public void test11098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11098");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8, (double) 10L);
        double[] doubleArray15 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray15, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray15);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) (short) 1, (int) (short) 100);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) (byte) 10, 0);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (short) 0, 7);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 1L, (double) ' ');
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '4', 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test11099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11099");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder0.append(0.0f, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder0.append(false, true);
        boolean[] booleanArray34 = new boolean[] { false, false, false, true, false, false };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray34);
        boolean[] booleanArray42 = new boolean[] { false, false, false, true, false, false };
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray34, booleanArray42);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray42, true);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray42, true, 5);
        boolean[] booleanArray56 = new boolean[] { false, false, false, true, false, false };
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray56);
        boolean[] booleanArray64 = new boolean[] { false, false, false, true, false, false };
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray56, booleanArray64);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray64, true);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray42, booleanArray68);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray69);
        java.lang.Boolean[] booleanArray74 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray74);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray74);
        java.lang.Boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder0.append(booleanArray70, booleanArray76);
        float[] floatArray79 = null;
        float[] floatArray85 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray85);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray85, 0.0f);
        java.lang.Float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray85);
        long[] longArray91 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray91);
        int int93 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray89, (java.lang.Object) longArray91);
        float[] floatArray95 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray89, (float) (-1L));
        float[] floatArray96 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray79, floatArray95);
        boolean boolean97 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) booleanArray70, (java.lang.Object) floatArray96);
        float[] floatArray98 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray96);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, true, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, true, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray91), "[-1]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(floatArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray95), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray96), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(floatArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray98), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test11100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11100");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray7);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray8, (float) 10);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test11101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11101");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray40);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) (byte) 0, (double) 2);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.add(doubleArray40, (double) (byte) 100);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) (short) 1);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, 0, (int) (byte) -1);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 100);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) int69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
    }

    @Test
    public void test11102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11102");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) (byte) 1, (int) (short) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray5, (long) 3, (int) 'a');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray5, (long) 7);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, (int) (byte) 0);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.add(longArray5, (long) 3);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1, 3]");
    }

    @Test
    public void test11103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11103");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) -1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray11);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(byteArray11, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test11104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11104");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray8, 10, (int) ' ');
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray11, (int) 'a', (int) 'a');
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.clone(byteArray11);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
    }

    @Test
    public void test11105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11105");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        long[] longArray35 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.subarray(longArray35, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray35);
        java.lang.Long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toObject(longArray35);
        long[] longArray42 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(longArray42, 0L);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray42, (long) (byte) 0);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray42, (long) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder28.append(longArray35, longArray42);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.subarray(longArray35, (int) (short) 1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
    }

    @Test
    public void test11106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11106");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, 3);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 1, (int) (short) -1);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray19);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20, (double) 2);
        java.lang.Object[] objArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1.0, 10.0, 52.0]");
    }

    @Test
    public void test11107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11107");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray29, ' ');
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray46, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder23.append((java.lang.Object) ' ', (java.lang.Object) charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder23.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append(2, 5);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray21, (java.lang.Object) 2, 0);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray21, (float) 5);
        float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray21, (float) (short) 10);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray63, (float) (byte) 1);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test11108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11108");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 0);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (short) -1, (int) (byte) 0);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0, -1.0, 3.0]");
    }

    @Test
    public void test11109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11109");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray23, true);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test11110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11110");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray40, longArray52);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray59);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray59, (long) '4');
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray59, (long) (short) 0, 2);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test11111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11111");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, '4');
        java.lang.Character[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84, ' ');
        java.lang.Object[] objArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray84);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray80, (java.lang.Object) charArray84);
        java.lang.Object[] objArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray80);
        java.lang.Class<?> wildcardClass90 = objArray89.getClass();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test11112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11112");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (byte) 100);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) 0);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray13, 0.0f);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray13);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11113");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray70 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray71 = new java.lang.Byte[][] { byteArray64, byteArray70 };
        java.lang.Byte[][] byteArray74 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray71, (int) '#', 10);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81);
        java.lang.Byte[][] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray71, (java.lang.Object) intArray81);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81, 1);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.remove(intArray85, (int) (byte) 1);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray87);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.clone(intArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray58, intArray88);
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.subarray(intArray88, (int) (byte) 1, 5);
        int[] intArray95 = org.apache.commons.lang3.ArrayUtils.add(intArray93, 6);
        boolean boolean97 = org.apache.commons.lang3.ArrayUtils.contains(intArray95, 8);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 10, -1, 1, 6]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11114");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray32, (int) (short) 10, 3);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray35);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        java.lang.Boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray37);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray26, (java.lang.Object) booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38, true);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38, false);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray43);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test11115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11115");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, false, (int) (byte) 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, false, (int) (short) 100);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, true);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray22, false, (int) (byte) 1);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test11116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11116");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray10);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 1, 100, 1, 1]");
    }

    @Test
    public void test11117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11117");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, 0.0d, (int) (byte) 100, (-1.0d));
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 100L);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        double[] doubleArray24 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray24, (double) (byte) 100, 1.0d);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray24, 2, (int) 'a');
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray24);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) 0L);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray31, (double) (short) 100, (double) (short) 0);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0, -1.0, 10.0, 52.0]");
    }

    @Test
    public void test11118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11118");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) 2, (int) 'a');
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, (long) 1);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, (long) (byte) 1);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.add(longArray14, (long) 100);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1, 100]");
    }

    @Test
    public void test11119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11119");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 10, 0);
        double[] doubleArray17 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray17, (double) (byte) 100, 1.0d);
        double[] doubleArray25 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray17, doubleArray25);
        float[] floatArray31 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray34 = new float[] { (byte) -1, 1L };
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) 10L);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray31, floatArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray25, (java.lang.Object) boolean37);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, (int) (short) 0, 1);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray46 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, (double) (byte) 100, 1.0d);
        double[] doubleArray54 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray46, doubleArray54);
        float[] floatArray60 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray63 = new float[] { (byte) -1, 1L };
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray63, (float) 10L);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray60, floatArray63);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray54, (java.lang.Object) boolean66);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray42, doubleArray54);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray54);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray54, 100, (int) 'a');
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray73, 0.0d, (double) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test11120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11120");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        boolean boolean35 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append((float) 1L, (float) (short) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
    }

    @Test
    public void test11121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11121");
        long[] longArray0 = null;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray1);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        java.lang.Object[] objArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray4);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray6, (long) (byte) 100);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray0, longArray8);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test11122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11122");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (byte) -1);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        java.lang.Object[] objArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray13);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray13);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray13);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[-1, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1, -1]");
    }

    @Test
    public void test11123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11123");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray17, (byte) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray20, (byte) 100);
        java.lang.Byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray20);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) byteArray20, 3);
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray29);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray29);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray29);
        boolean[] booleanArray38 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray38, (int) (byte) 0, 0);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray38, true);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray32, booleanArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray38);
        long[] longArray52 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.subarray(longArray52, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray52, (java.lang.Object) booleanArray63);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray63, true);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray66, true, (int) (byte) 1);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray38, booleanArray66);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray38);
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) booleanArray38);
        java.lang.Boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        java.lang.Boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray73);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[true, true, true, false, true, false, true]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
    }

    @Test
    public void test11124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11124");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray17, (float) 10);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray17);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray20, (float) 1L);
        float[] floatArray28 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray28, (int) (byte) 1, 0);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.add(floatArray33, (float) (short) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray22, floatArray33);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray36, (float) '#');
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[0.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test11125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11125");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray12, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray12);
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray12);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray12);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray12, (short) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray12, (short) -1, (int) (short) -1);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray12, (short) 0);
        java.lang.Short[] shortArray30 = new java.lang.Short[] {};
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30, (short) 1);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.clone(shortArray33);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray34, (short) (byte) -1, (int) (short) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray34);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray29, shortArray34);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
    }

    @Test
    public void test11126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11126");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray19, 0.0f);
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        long[] longArray25 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray23, (java.lang.Object) longArray25);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.addAll(longArray13, longArray25);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.subarray(longArray28, (int) (short) 10, (int) 'a');
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray28, (long) 3, (int) (short) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray4, longArray28);
        float[] floatArray41 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray41);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.clone(floatArray41);
        long[] longArray46 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray46, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray46);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        long[] longArray56 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray56, 1L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray51, longArray58);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray41, (java.lang.Object) longArray51);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray51, (long) (byte) 10, 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray28, longArray51);
        float[] floatArray70 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray70);
        java.lang.Long[] longArray77 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray77);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray71, (java.lang.Object) longArray78);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.clone(longArray78);
        java.lang.Long[] longArray81 = org.apache.commons.lang3.ArrayUtils.toObject(longArray80);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray81);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.addAll(longArray28, longArray82);
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray28, (long) 6);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.contains(longArray28, (long) (short) 1);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray28);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[-1]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[0, 1, 100, 100, 0, -1, 0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[0, 1, 100, 100, 0, -1]");
    }

    @Test
    public void test11127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11127");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) '#', 1, (double) (byte) 100);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray32);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray28, (int) (short) 0);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, 0.0d);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, 10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test11128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11128");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3, (short) (byte) 100);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) -1, 6);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test11129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11129");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray4, false);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray4, false);
        boolean[] booleanArray14 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, (int) (byte) 0, 0);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, 4, (int) '4');
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray20);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray20, false);
        boolean[] booleanArray30 = new boolean[] { false, false, false, true, false, false };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray20, booleanArray38);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray41, true);
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray47);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray47, true);
        java.lang.Boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray47);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray51);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray52, false, (-1));
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) 'a', (-1));
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray43, booleanArray58);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.add(booleanArray43, 3, false);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[true, false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test11130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11130");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        long[] longArray52 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray54);
        long[] longArray57 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder28.append(longArray54, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((double) (byte) -1, (double) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder58.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(0.0f, (-1.0f));
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
    }

    @Test
    public void test11131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11131");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, 0L);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, (long) (short) 10);
        long[] longArray13 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray13);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, (long) (short) 100);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray23, (long) (-1), (int) '4');
        long[] longArray28 = null;
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.addAll(longArray23, longArray28);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray30);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray30);
        java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toObject(longArray32);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.subarray(longArray32, (int) '4', (int) (short) 0);
        long[] longArray38 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(longArray38, 0L);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray42, (long) (byte) 1, (int) (short) 1);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray42, (long) 3, (int) 'a');
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(longArray42, (long) 7);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.remove(longArray42, (int) (byte) 0);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.addAll(longArray32, longArray52);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.addAll(longArray23, longArray53);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.add(longArray23, 0L);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray23);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, (long) 11);
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray1, (int) (short) 1, 6);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[-1]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
    }

    @Test
    public void test11132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11132");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        long[] longArray10 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray10, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray20 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, 1L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray15, longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray5, (java.lang.Object) longArray15);
        float[] floatArray30 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray30);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test11133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11133");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, true);
        java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray9);
    }

    @Test
    public void test11134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11134");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 0);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray14, 0, (byte) -1);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24, (byte) 1);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(byteArray26, (byte) 100);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(byteArray26, (byte) 1);
        java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray26);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31, (byte) 100);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.add(byteArray33, (byte) 10);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.clone(byteArray35);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray35);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.remove(byteArray35, 3);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray46, (byte) 1);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(byteArray48, (byte) 100);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(byteArray48, (byte) 1);
        java.lang.Byte[] byteArray59 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59, (byte) 1);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray61, (int) (byte) 0, (int) (byte) 1);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray48, byteArray64);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray48, (byte) 10);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray35, byteArray69);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray17, byteArray69);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray69);
        byte[] byteArray73 = new byte[] {};
        byte[] byteArray78 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray73, byteArray78);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray73, (byte) -1);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray73, (byte) -1);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.add(byteArray83, (byte) 100);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray83, (byte) -1, 5);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray69, byteArray83);
        byte[] byteArray92 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray69, 100, (int) 'a');
        byte[] byteArray94 = org.apache.commons.lang3.ArrayUtils.add(byteArray69, (byte) 10);
        byte[] byteArray96 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray69, (byte) 1);
        byte[] byteArray97 = null;
        byte[] byteArray98 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray96, byteArray97);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray96);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[10, 0, -1, -1, 100, 0, 0, 0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1, 0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[100]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[]");
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[0, 0, 100, -1, -1, 0, -1, 10]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[-1, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray98), "[0, 0, 100, -1, -1, 0, -1]");
    }

    @Test
    public void test11135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11135");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray4, doubleArray9, doubleArray14, doubleArray19 };
        java.lang.Double[][] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray21);
        java.util.Map<java.lang.Object, java.lang.Object> objMap23 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray21);
        long[] longArray30 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.subarray(longArray30, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray30);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray30, (java.lang.Object) booleanArray41);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray21, (java.lang.Object) longArray30, (int) (short) 10);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.subarray(longArray30, (int) (short) 1, 0);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray30, (-1L));
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objMap23);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test11136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11136");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 10);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.add(byteArray12, 2, (byte) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray15, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100, -1, 10, -1, -1, 100, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100, -1, 0, 10, -1, -1, 100, -1, 0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test11137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11137");
        double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray0, 0.0d, (double) 1.0f);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray0, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test11138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11138");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = new byte[] {};
        byte[] byteArray23 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray18, byteArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray18, (byte) -1);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray18, (byte) -1);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray28, (byte) 100);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray15, byteArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray31, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test11139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11139");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder0.append(0.0f, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder0.append(false, true);
        boolean[] booleanArray34 = new boolean[] { false, false, false, true, false, false };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray34);
        boolean[] booleanArray42 = new boolean[] { false, false, false, true, false, false };
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray34, booleanArray42);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray42, true);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray42, true, 5);
        boolean[] booleanArray56 = new boolean[] { false, false, false, true, false, false };
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray56);
        boolean[] booleanArray64 = new boolean[] { false, false, false, true, false, false };
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray56, booleanArray64);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray64, true);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray42, booleanArray68);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray69);
        java.lang.Boolean[] booleanArray74 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray74);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray74);
        java.lang.Boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder0.append(booleanArray70, booleanArray76);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray76);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, true, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, true, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true]");
    }

    @Test
    public void test11140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11140");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray13, (int) (short) 0, '4');
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, '4');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray16, charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray24, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test11141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11141");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray5, (short) (byte) 0, 10);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test11142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11142");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray35);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray46);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray63 = new char[] { '#', 'a', 'a' };
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray63);
        java.lang.String str65 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray59);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray59);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray46, (java.lang.Object) charArray66, false);
        java.lang.Character[] charArray69 = org.apache.commons.lang3.ArrayUtils.toObject(charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append((java.lang.Object[]) doubleArray35, (java.lang.Object[]) charArray69);
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69, '#');
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray72, '#');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{4,#,a,4,#}" + "'", str65, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }

    @Test
    public void test11143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11143");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        java.lang.Short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray80);
        java.util.Map<java.lang.Object, java.lang.Object> objMap82 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) shortArray81);
        java.lang.Short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray81);
        java.lang.Character[] charArray84 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84, '4');
        java.lang.Character[] charArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray84);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray87, ' ');
        java.lang.Character[] charArray90 = org.apache.commons.lang3.ArrayUtils.toObject(charArray89);
        char[] charArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray90, 'a');
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray83, (java.lang.Object) charArray90, 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertNotNull(objMap82);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test11144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11144");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray49, false);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray49, false);
        java.lang.String str55 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray53, "{}");
        boolean[] booleanArray62 = new boolean[] { false, false, false, true, false, false };
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray62);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray62, true);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray62, true);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray62);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray68);
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray73);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray74);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray74, true);
        boolean[] booleanArray83 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray83, (int) (byte) 0, 0);
        boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray74, booleanArray86);
        int int90 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray86, false, (int) (byte) 1);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray68, booleanArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder44.append(booleanArray53, booleanArray68);
        boolean[] booleanArray93 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray68);
        int int95 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray68, false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[true, true]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{true,true}" + "'", str55, "{true,true}");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[]");
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray87), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(booleanArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray93), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test11145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11145");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray11 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray11, floatArray14);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray6, (java.lang.Object) floatArray18);
        short[] shortArray25 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray25, (short) (byte) 0);
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.clone(shortArray25);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray18, (java.lang.Object) shortArray33, 9);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, 0.0f);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray37, (float) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.remove(floatArray37, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
    }

    @Test
    public void test11146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11146");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, (float) (byte) 100, (int) '4');
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, 1.0f);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, (float) 10, (int) (byte) 1);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.clone(floatArray10);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[]");
    }

    @Test
    public void test11147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11147");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        short[] shortArray27 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray31 = new java.lang.Short[] {};
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray27, shortArray34);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) 0, 0);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray42 = null;
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(shortArray41, shortArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((float) (short) -1, (float) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder0.append(7, 8);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
    }

    @Test
    public void test11148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11148");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.clone(intArray5);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11149");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        java.lang.Character[] charArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.Character[] charArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray1);
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray1);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray1);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray1, ' ');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
    }

    @Test
    public void test11150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11150");
        float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray6 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, (int) (short) 1);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray9);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, (float) (byte) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray12, (float) (short) 100, (int) (byte) 0);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray16);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[10.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[10.0]");
    }

    @Test
    public void test11151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11151");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (-1.0f), (double) '4');
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 10L, (double) 1.0f);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28);
        java.lang.Double[] doubleArray43 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray43);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray44, (double) 100L, 2, (double) (short) -1);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray44, (double) 100.0f, (int) (short) 100);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray44, (double) 10.0f);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray44);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) 11, (int) (short) 1, (double) 11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0, 100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test11152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11152");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray13, (java.lang.Object) (byte) -1, (int) (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray18, (byte) 1);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.clone(byteArray18);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.add(byteArray18, (byte) 0);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, -1, -1, 100, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, -1, -1, 100, 0, 0, 0]");
    }

    @Test
    public void test11153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11153");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray5, (java.lang.Object) (byte) 1, (int) (byte) -1);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16, true);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray5, (java.lang.Object) true);
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray22);
    }

    @Test
    public void test11154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11154");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray17, (byte) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray20, (byte) 100);
        java.lang.Byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray20);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) byteArray20, 3);
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray29);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray29);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray29);
        boolean[] booleanArray38 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray38, (int) (byte) 0, 0);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray38, true);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray32, booleanArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray38);
        long[] longArray52 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.subarray(longArray52, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray52, (java.lang.Object) booleanArray63);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray63, true);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray66, true, (int) (byte) 1);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray38, booleanArray66);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray38);
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) booleanArray38);
        java.lang.Boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[true, true, true, false, true, false, true]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false, true, true, false]");
    }

    @Test
    public void test11155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11155");
        short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test11156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11156");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, 1);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray13, 9);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 11, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11157");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        short[] shortArray18 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray18, (short) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray18);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray8, (java.lang.Object) shortArray18);
        short[] shortArray32 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray32, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray36 = new java.lang.Short[] {};
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36, (short) 1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray32, shortArray39);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray32, (int) (byte) 10, (int) (short) -1);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(shortArray43, (short) (byte) -1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray18, shortArray43);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (short) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (int) ' ', (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[-1, 1, 0, 0, 100, -1]");
    }

    @Test
    public void test11158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11158");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray6);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray6, 0, (long) 9);
        long[] longArray17 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray17);
        java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toObject(longArray17);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray25);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.add(longArray26, (long) (short) 100);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray15, longArray28);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray31 = org.apache.commons.lang3.ArrayUtils.remove(longArray28, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[9, 100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test11159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11159");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ', 1);
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray24);
        java.lang.Character[] charArray26 = org.apache.commons.lang3.ArrayUtils.toObject(charArray24);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charArray26);
    }

    @Test
    public void test11160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11160");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        equalsBuilder0.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
    }

    @Test
    public void test11161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11161");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray33 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) (byte) 100, 1.0d);
        double[] doubleArray41 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray41);
        float[] floatArray47 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray50 = new float[] { (byte) -1, 1L };
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray50, (float) 10L);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray47, floatArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray41, (java.lang.Object) boolean53);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray41, (int) (short) 0, 1);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray57, (double) (byte) -1);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray59, (int) (byte) 100, 1);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray62, (int) (byte) -1, (int) (short) 100);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, (double) 'a', (int) (short) 100);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray65, (double) 1L);
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray29, (java.lang.Object) int70, 3);
        java.lang.Double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray29);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray73, (double) 7);
        java.lang.Double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test11162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11162");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100L, 2, (double) (short) -1);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100.0f, (int) (short) 100);
        double[] doubleArray18 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, 1.0d);
        double[] doubleArray26 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray26);
        float[] floatArray32 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray35 = new float[] { (byte) -1, 1L };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, (float) 10L);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray32, floatArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray26, (java.lang.Object) boolean38);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, (int) (short) 0, 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray55);
        float[] floatArray61 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray55, (java.lang.Object) boolean67);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray55);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray7, doubleArray43);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray43, (int) (short) 0);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray43, (double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test11163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11163");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray18);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray18);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, 'a');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray2, charArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray20);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray20, (int) (byte) -1, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test11164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11164");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray18, (byte) 0);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.add(byteArray18, (byte) 10);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray23);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31, (byte) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray33, (byte) 100);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(byteArray33, (byte) 1);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray44, (byte) 1);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray46, (int) (byte) 0, (int) (byte) 1);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray33, byteArray49);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (byte) 1);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray23, byteArray49);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (byte) 0);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray61);
        java.lang.Byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray62);
        java.lang.Byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray63);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray63);
        java.lang.Byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray65);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray67);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray67, (byte) 0, 0);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray49, byteArray67);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 0, -1, -1, 100, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 0, -1, -1, 100, 0, 0, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test11165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11165");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray9);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9);
        java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray9);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, ' ');
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray37 = new char[] { '#', 'a', 'a' };
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.addAll(charArray33, charArray37);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray37, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder14.append((java.lang.Object) ' ', (java.lang.Object) charArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append(false, true);
        java.lang.Boolean boolean52 = equalsBuilder45.build();
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray12, (java.lang.Object) equalsBuilder45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder45.append(0, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) (byte) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((byte) -1, (byte) 10);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + false + "'", boolean52, false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test11166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11166");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, (int) ' ', (int) (byte) 0);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, 4, false);
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray26);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, false);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, false);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray14, booleanArray34);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, (int) (short) 1, true);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray38);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray39, (int) (short) 0, (int) (short) -1);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true, true, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, true, true, false, true, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[]");
    }

    @Test
    public void test11167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11167");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray3, (long) 5, 10);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray7, 100L, (int) (short) 1);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[-1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test11168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11168");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray3, (short) 1);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.clone(shortArray6);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 1, 5);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.clone(shortArray6);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.clone(shortArray6);
        java.lang.Short[] shortArray13 = new java.lang.Short[] {};
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13, (short) 1);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray16);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray17, (short) (byte) -1, (int) (short) 100);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) -1);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray22, (short) (byte) 1);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray22);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray25);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray25);
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray33);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33, false);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) shortArray25, (java.lang.Object) booleanArray36);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11169");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 0, (int) '#');
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        int int13 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray12);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 6 + "'", int13 == 6);
    }

    @Test
    public void test11170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11170");
        double[] doubleArray0 = null;
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0]");
    }

    @Test
    public void test11171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11171");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray8, true, 4);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray12, 4);
        long[] longArray19 = new long[] { (short) 10, (byte) -1, (-1), 1 };
        java.lang.Long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toObject(longArray19);
        java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray14, (java.lang.Object) longArray21);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, 11, 9);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, true, true]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
    }

    @Test
    public void test11172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11172");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, 1);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray13, 9);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.subarray(intArray13, 0, (int) (short) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray13, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test11173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11173");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray41, (byte) 1);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray41, (byte) -1);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray46, byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray46, (byte) -1);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray46, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder31.append(byteArray45, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder31.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append((byte) 10, (byte) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
    }

    @Test
    public void test11174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11174");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray28 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.remove(floatArray28, (int) (short) 1);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray22, floatArray31);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.add(floatArray22, (float) (byte) 10);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray34, (float) (short) 100, (int) (byte) 0);
        float[] floatArray43 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray43);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray43, (int) (byte) 1, 0);
        float[] floatArray51 = new float[] { (byte) -1, 1L };
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray51, (float) 10L);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray48, floatArray51);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray51);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.clone(floatArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder0.append(floatArray34, floatArray56);
        java.lang.Character[] charArray58 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray60);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray71 = new char[] { '#', 'a', 'a' };
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.addAll(charArray67, charArray71);
        java.lang.String str73 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray67);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray60, charArray67);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray60);
        java.lang.Character[] charArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray76);
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.add(charArray77, 'a');
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder0.append(charArray60, charArray80);
        java.lang.Boolean boolean82 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append((double) 'a', (double) 100L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[10.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{4,#,a,4,#}" + "'", str73, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test11175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11175");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        boolean[] booleanArray69 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray69, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray69);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder28.append(booleanArray69, booleanArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder28.append((long) (short) 100, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append((long) 4, (long) 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((float) ' ', (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((byte) 100, (byte) 1);
        java.lang.Object obj97 = null;
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) equalsBuilder93, obj97);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test11176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11176");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.String str5 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray0);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray7, 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test11177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11177");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray47 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray47, (int) (byte) 0, 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray47, true);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray41, booleanArray47);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray58);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray58, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder34.append(booleanArray47, booleanArray58);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.add(booleanArray47, (int) (short) 0, true);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray47, true);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray47, false);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[true, true, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
    }

    @Test
    public void test11178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11178");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean[] booleanArray22 = new boolean[] { false, false, false, true, false, false };
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray14, booleanArray22);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray22, true);
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray31, false);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray31);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray26, booleanArray31);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray35);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray7, booleanArray36);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray36);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray41, false, (int) '4');
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[true, true, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[true, true, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, true, true, false, false, false, false, false, false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true, true, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[true, true, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
    }

    @Test
    public void test11179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11179");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        int[] intArray7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray16, intArray17);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray17, (int) (byte) 0);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) (byte) 1);
        int[] intArray25 = new int[] {};
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray25, intArray26);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.addAll(intArray22, intArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder8.append(intArray21, intArray25);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray25);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray30, 2);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(intArray30, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray30);
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, 1);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.addAll(intArray30, intArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray43, 10, (int) (byte) 0);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray43, (int) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray43);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray43, (int) (short) 100, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder3.append(intArray7, intArray43);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray43);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test11180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11180");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray18);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19, false);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray24);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray24, false, (int) (short) 0);
        java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray24);
        java.lang.Boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, true, false, false, false, true, true, false, false]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
    }

    @Test
    public void test11181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11181");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(10.0d, (double) 0L);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) 'a');
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray50, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray50);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray50, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder31.append((java.lang.Object) 'a', (java.lang.Object) intArray55);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.add(intArray55, 0);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray58, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray58);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray74 = new java.lang.Byte[][] { byteArray67, byteArray73 };
        java.lang.Byte[][] byteArray77 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray74, (int) '#', 10);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray84);
        java.lang.Byte[][] byteArray86 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray74, (java.lang.Object) intArray84);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray84, (int) (short) -1);
        java.lang.Integer[] intArray89 = org.apache.commons.lang3.ArrayUtils.toObject(intArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray58, intArray88);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test11182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11182");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray8 = null;
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray9, (int) (short) 100, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.remove(shortArray9, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
    }

    @Test
    public void test11183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11183");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 100);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray21, intArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) '4');
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) 'a', (int) (short) 0);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray22, (int) '#', (int) (short) 0);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.subarray(intArray22, (int) (short) 0, (int) (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray8);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, 3, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
    }

    @Test
    public void test11184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11184");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Object[] objArray5 = strList3.toArray();
        java.util.Iterator<java.lang.String> strItor6 = strList3.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList3.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList3.spliterator();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray21);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray13, booleanArray21);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray13, true);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray13, true);
        boolean[] booleanArray34 = new boolean[] { false, false, false, true, false, false };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray34, true);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray34, true);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray34);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray34, true);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray34, (int) (byte) 10, 7);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray13, booleanArray45);
        boolean boolean47 = strList3.equals((java.lang.Object) booleanArray45);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[, ]");
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test11185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11185");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 0);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (short) -1, (int) (byte) 0);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (double) 1.0f);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
    }

    @Test
    public void test11186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11186");
        java.lang.Float[][] floatArray0 = null;
        java.lang.Float[] floatArray6 = new java.lang.Float[] { 100.0f, 10.0f, 100.0f, 10.0f, 100.0f };
        java.lang.Float[][] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray6, (float) (byte) 10);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[100.0, 10.0, 100.0, 10.0, 100.0]");
    }

    @Test
    public void test11187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11187");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray17, (float) 10);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray17);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray20, (float) 1L);
        float[] floatArray28 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray28, (int) (byte) 1, 0);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.add(floatArray33, (float) (short) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray22, floatArray33);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray36);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray36, (float) (byte) 0);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[0.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 1.0]");
    }

    @Test
    public void test11188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11188");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, 'a');
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, 'a');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray17);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray17, '#');
        char[] charArray27 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray31 = new char[] { '#', 'a', 'a' };
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray27, charArray31);
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray27, ' ');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray17, charArray27);
        java.lang.Character[] charArray41 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray41);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, '4');
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray35, charArray44);
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray35, 0, '#');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray49);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray49);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray49, '#');
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray63 = new char[] { '#', 'a', 'a' };
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray63);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray59, ' ');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray49, charArray59);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.subarray(charArray49, 0, 0);
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.addAll(charArray48, charArray49);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.add(charArray71, 'a');
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.subarray(charArray71, (int) (byte) 0, 9);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.addAll(charArray16, charArray71);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.clone(charArray77);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , #, 4, a, a]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #, a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4#4##4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4#4##4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4, #, 4, #, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4#4##4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4#4##4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, 4, #, #, 4, #, a, 4, #]");
    }

    @Test
    public void test11189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11189");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) -1);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        byte[] byteArray32 = new byte[] {};
        byte[] byteArray37 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray32, byteArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) -1);
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray32, (byte) -1);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.add(byteArray42, (byte) 100);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray31, byteArray42);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray31, (byte) 10);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray47);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray47);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray47, (byte) 1);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray47, (byte) 10);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray47, (byte) 100);
        java.lang.Object[] objArray56 = null;
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray57, byteArray62);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray57, (byte) -1);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray57, (byte) -1);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray57, (byte) 1);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray57, (byte) -1);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray56, (java.lang.Object) byteArray57, 5);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray55, byteArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray74);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 0, 100, -1, -1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, -1, -1, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0, -1, -1, 0, 0]");
    }

    @Test
    public void test11190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11190");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        java.lang.Short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray3);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
    }

    @Test
    public void test11191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11191");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 0);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray59, (short) 0, (int) '#');
        java.lang.Short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray76);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray77);
        java.lang.Short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray77);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray79);
    }

    @Test
    public void test11192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11192");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray10, (float) (byte) 1);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray37 = new char[] { '#', 'a', 'a' };
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.addAll(charArray33, charArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray23, charArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray13, (java.lang.Object) charArray38);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13, (-1.0f));
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray42);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[]");
    }

    @Test
    public void test11193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11193");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        int int19 = strList5.size();
        java.util.stream.Stream<java.lang.String> strStream20 = strList5.parallelStream();
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        java.util.Iterator<java.lang.String> strItor27 = strList24.iterator();
        java.lang.String[] strArray32 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray41 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.remove(floatArray41, (int) (short) 1);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray35, floatArray44);
        boolean boolean46 = strList33.equals((java.lang.Object) floatArray45);
        int int47 = strList33.size();
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray48, (int) (byte) 1);
        boolean boolean51 = strList33.contains((java.lang.Object) int50);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58, (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 1);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray60);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray65, (byte) 100);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray67, (byte) 10);
        boolean boolean70 = strList33.contains((java.lang.Object) byteArray67);
        boolean boolean71 = strList24.addAll((java.util.Collection<java.lang.String>) strList33);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.stream.Stream<java.lang.String> strStream79 = strList77.parallelStream();
        boolean boolean80 = strList24.removeAll((java.util.Collection<java.lang.String>) strList77);
        java.util.stream.Stream<java.lang.String> strStream81 = strList24.parallelStream();
        strList24.clear();
        boolean boolean83 = strList5.containsAll((java.util.Collection<java.lang.String>) strList24);
        java.util.stream.Stream<java.lang.String> strStream84 = strList5.parallelStream();
        int int85 = strList5.size();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strStream81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strStream84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 4 + "'", int85 == 4);
    }

    @Test
    public void test11194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11194");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray4, (float) '4');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray12, (float) 1L);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.add(floatArray12, 0.0f);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray17, (float) 10L, 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray17);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 10.0, -1.0, 97.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[0.0, 97.0, -1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test11195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11195");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.add(floatArray8, (float) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray21 = new char[] { '#', 'a', 'a' };
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.addAll(charArray17, charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray17, ' ');
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray34 = new char[] { '#', 'a', 'a' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray34);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray34, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder11.append((java.lang.Object) ' ', (java.lang.Object) charArray34);
        java.lang.Long[] longArray45 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45);
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray47);
        char[] charArray52 = new char[] { 'a', '#', ' ' };
        char[][] charArray53 = new char[][] { charArray52 };
        char[][] charArray54 = org.apache.commons.lang3.ArrayUtils.toArray(charArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder39.append((java.lang.Object[]) longArray47, (java.lang.Object[]) charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder39.append(true, false);
        long[] longArray63 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray63, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray65);
        long[] longArray68 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append(longArray65, longArray68);
        float[] floatArray73 = new float[] { (short) -1, 10, (short) 1 };
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray73, (int) '4', (int) (byte) 100);
        float[] floatArray79 = new float[] { (byte) -1, 1L };
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray79, (float) 10L);
        float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray79, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder39.append((java.lang.Object) floatArray73, (java.lang.Object) floatArray83);
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray83, (float) 6, (int) '#');
        float[] floatArray88 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray8, floatArray83);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.contains(floatArray83, 100.0f);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 100.0, 100.0, 10.0, 35.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test11196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11196");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        java.lang.Boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray15);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray0, (java.lang.Object) booleanArray17, 10);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray17);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11197");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        equalsBuilder6.reset();
        java.lang.Boolean boolean8 = equalsBuilder6.build();
        java.lang.Boolean boolean9 = equalsBuilder6.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + true + "'", boolean9, true);
    }

    @Test
    public void test11198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11198");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) 100);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray30, byteArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) -1);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray30);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray46, (byte) 1);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(byteArray48, (byte) 100);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(byteArray48, (byte) 1);
        java.lang.Byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray48);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray53, (byte) 100);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.add(byteArray55, (byte) 10);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.clone(byteArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray57);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.add(byteArray57, (byte) 100);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray24, byteArray57);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray57, (byte) 1);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(byteArray57, (byte) 0);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.clone(byteArray57);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[10, 0, -1, -1, 100, 0, 0]");
    }

    @Test
    public void test11199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11199");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) 'a');
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) (byte) 1);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.clone(floatArray11);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0]");
    }

    @Test
    public void test11200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11200");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false, (int) (byte) 1);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test11201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11201");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        double[] doubleArray51 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray51, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray51);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) (short) 1, (int) (short) 100);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) (byte) 10, 0);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray51, (double) (short) 0, 7);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray51, 0.0d, (double) 0);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray45, doubleArray51);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray68, (double) 1L, 5, 0.0d);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray68, (double) 8);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray74, (double) 1.0f, (double) 4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 0.0, 10.0, -1.0, 52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 0.0, 10.0, -1.0, 52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test11202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11202");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray9);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        java.lang.Short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertNotNull(shortArray13);
    }

    @Test
    public void test11203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11203");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.stream.Stream<java.lang.String> strStream16 = strList14.parallelStream();
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray7, (java.lang.Object) strStream16);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray7, true, 5);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray7, false);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray7);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        long[] longArray32 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.subarray(longArray32, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray32);
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray40);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray40);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray40);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray32, (java.lang.Object) booleanArray43);
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray48);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 10, 3);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray52);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray43, booleanArray54);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray25, booleanArray56);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray56);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[]");
    }

    @Test
    public void test11204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11204");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((long) (short) 1, (long) ' ');
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.clone(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray52);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray52, (long) '4');
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray52, (long) (byte) -1);
        java.lang.Object obj63 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder47.append((java.lang.Object) int62, obj63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append((byte) 0, (byte) 100);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
    }

    @Test
    public void test11205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11205");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 100);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray21);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray22, intArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray23, (int) '4');
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.add(intArray23, 1);
        long[] longArray35 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.subarray(longArray35, 3, (int) (byte) 0);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray35);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray46, true);
        java.lang.String[] strArray52 = new java.lang.String[] { "4", "1" };
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean39, (java.lang.Object) true, strArray52);
        java.lang.String[] strArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray52);
        java.lang.String[] strArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray54);
        java.lang.String[] strArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray55);
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray55);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray8, (java.lang.Object) intArray28, strArray57);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.clone(intArray28);
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.toObject(intArray59);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(intArray60);
    }

    @Test
    public void test11206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11206");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 100.0d, (int) (short) 1, (double) 1L);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, 1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 10.0, 52.0, 100.0]");
    }

    @Test
    public void test11207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11207");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, (double) (byte) 100, 1.0d);
        double[] doubleArray12 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) 4, (int) '#', (double) 0L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray0, doubleArray13);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray0, (double) 10L);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test11208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11208");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray4, doubleArray9, doubleArray14, doubleArray19 };
        java.lang.Double[][] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray21);
        java.util.Map<java.lang.Object, java.lang.Object> objMap23 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray21);
        boolean[] booleanArray29 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray29, (int) (byte) 0, 0);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray29, 4, (int) '4');
        java.lang.Boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        java.lang.Double[][] doubleArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray21, (java.lang.Object) booleanArray29);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray29, true, (-1));
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray29, true);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray29);
        java.lang.Class<?> wildcardClass44 = booleanArray29.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objMap23);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test11209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11209");
        int[] intArray0 = null;
        int[] intArray2 = org.apache.commons.lang3.ArrayUtils.add(intArray0, (int) (byte) -1);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray2, 3);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test11210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11210");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray0, intArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray1);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.clone(intArray1);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.subarray(intArray4, (int) (byte) 1, (int) '#');
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(intArray4, (-1));
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11211");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, 3, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true, false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, true, false, true, true]");
    }

    @Test
    public void test11212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11212");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray6);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray16, (int) (short) 100, 0);
        java.lang.Integer[] intArray20 = org.apache.commons.lang3.ArrayUtils.toObject(intArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray6, (java.lang.Object) intArray20);
        java.lang.String[] strArray24 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.stream.Stream<java.lang.String> strStream27 = strList25.parallelStream();
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        boolean boolean34 = strList25.addAll((java.util.Collection<java.lang.String>) strList31);
        java.lang.Object obj35 = null;
        boolean boolean36 = strList31.equals(obj35);
        java.util.stream.Stream<java.lang.String> strStream37 = strList31.parallelStream();
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray44, (byte) 1);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray44);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray53);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray61);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray61);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray54, (java.lang.Object) intArray61);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray54, (byte) 10);
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray66, (byte) 10);
        java.lang.String[] strArray72 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        boolean boolean75 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean47, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList73);
        boolean boolean76 = strList31.retainAll((java.util.Collection<java.lang.String>) strList73);
        java.util.Iterator<java.lang.String> strItor77 = strList73.iterator();
        java.lang.Object[] objArray78 = strList73.toArray();
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray20, objArray78);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20, 5);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strStream27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strItor77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[{}, 1, {}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[{}, 1, {}]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, -1, 2, 1]");
    }

    @Test
    public void test11213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11213");
        char[][][][] charArray0 = new char[][][][] {};
        char[][][][] charArray1 = new char[][][][] {};
        char[][][][] charArray2 = new char[][][][] {};
        char[][][][] charArray3 = new char[][][][] {};
        char[][][][] charArray4 = new char[][][][] {};
        char[][][][][] charArray5 = new char[][][][][] { charArray0, charArray1, charArray2, charArray3, charArray4 };
        char[][][][][][] charArray6 = new char[][][][][][] { charArray5 };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray6);
        short[] shortArray13 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray13, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray13, (short) (byte) 0);
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27, (byte) 1);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 100);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 1);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray40, (byte) 1);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray42, (int) (byte) 0, (int) (byte) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray29, byteArray45);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray29, (byte) 10);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray29, (byte) 10);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) shortArray20, (java.lang.Object) (byte) 10);
        java.lang.Short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray20);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray6, (java.lang.Object) shortArray53, 4);
        char[][][][][][] charArray56 = org.apache.commons.lang3.ArrayUtils.toArray(charArray6);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray56);
    }

    @Test
    public void test11214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11214");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7, (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.Object, java.lang.Object> objMap11 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) byteArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, '1', is neither of type Map.Entry nor an Array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 1, 100, 1, -1]");
    }

    @Test
    public void test11215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11215");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray53, false);
        boolean[] booleanArray63 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, (int) (byte) 0, 0);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, 4, (int) '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray57, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(booleanArray46, booleanArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder0.append((long) 4, (long) (-1));
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray75);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.clone(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray87 = new char[] { '#', 'a', 'a' };
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.addAll(charArray83, charArray87);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray83, ' ');
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder74.append(charArray77, charArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder92.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder94.append((byte) 10, (byte) -1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test11216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11216");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1);
        java.lang.Double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray1);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1, (double) 2);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1, (double) 'a');
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
    }

    @Test
    public void test11217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11217");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray22 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.remove(floatArray22, (int) (short) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray16, floatArray25);
        boolean boolean27 = strList14.equals((java.lang.Object) floatArray26);
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray33, (float) 1);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray26, floatArray33);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray26);
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(floatArray39);
    }

    @Test
    public void test11218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11218");
        long[] longArray4 = new long[] { (short) 10, (byte) -1, (-1), 1 };
        java.lang.Long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toObject(longArray4);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (byte) -1);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (-1));
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray9, (long) (byte) -1);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10, -1, 1]");
    }

    @Test
    public void test11219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11219");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, (int) '#', (int) (short) 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray42, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder19.append((java.lang.Object) ' ', (java.lang.Object) charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray60);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray61, intArray62);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(intArray62, (int) '4');
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.add(intArray62, (int) (short) 100);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray62);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray62);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray62, (int) (short) 1);
        int[] intArray72 = new int[] {};
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray72, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder53.append(intArray62, intArray73);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray73);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.subarray(intArray73, 100, 100);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray79);
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.add(intArray79, (int) '4');
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray82);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.clone(intArray83);
        int[] intArray86 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray83, 0);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.subarray(intArray86, (int) (byte) 0, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[52]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[52]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[52]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[52]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[52]");
    }

    @Test
    public void test11220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11220");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (-1.0f), (double) '4');
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) 3);
        double[] doubleArray38 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray38, (double) (byte) 100, 1.0d);
        double[] doubleArray46 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray38, doubleArray46);
        float[] floatArray52 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray55 = new float[] { (byte) -1, 1L };
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray55, (float) 10L);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray52, floatArray55);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray46, (java.lang.Object) boolean58);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray46, (int) (short) 0, 1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray62, (double) (byte) -1);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray64, (int) (byte) 100, 1);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray67, (int) (byte) -1, (int) (short) 100);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray67);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) -1, 0);
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
    }

    @Test
    public void test11221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11221");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray9, (byte) 10, (int) ' ');
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray9, (int) '4', 10);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray9, (byte) 0);
        java.lang.Class<?> wildcardClass18 = byteArray17.getClass();
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test11222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11222");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray26 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray30 = new char[] { '#', 'a', 'a' };
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray26, charArray30);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray26, ' ');
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray43 = new char[] { '#', 'a', 'a' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.addAll(charArray39, charArray43);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray43, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder20.append((java.lang.Object) ' ', (java.lang.Object) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder20.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append(2, 5);
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55);
        java.lang.Character[] charArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray57);
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray59);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray70 = new char[] { '#', 'a', 'a' };
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.addAll(charArray66, charArray70);
        java.lang.String str72 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray66);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray59, charArray66);
        char[] charArray79 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray83 = new char[] { '#', 'a', 'a' };
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.addAll(charArray79, charArray83);
        java.lang.String str85 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray79);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray79);
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray66, (java.lang.Object) charArray86, false);
        java.lang.Character[] charArray89 = org.apache.commons.lang3.ArrayUtils.toObject(charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder51.append((java.lang.Object[]) doubleArray55, (java.lang.Object[]) charArray89);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) doubleArray55);
        double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) (short) 1);
        double[] doubleArray95 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) 11);
        boolean boolean97 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray17, (java.lang.Object) 11, true);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray17);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{4,#,a,4,#}" + "'", str72, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{4,#,a,4,#}" + "'", str85, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test11223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11223");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) -1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray10);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.clone(byteArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray11, (byte) 100, (int) (byte) 10);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test11224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11224");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        short[] shortArray53 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray53);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray29, (java.lang.Object) shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 0);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray60, (short) 100);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test11225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11225");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, (float) 'a');
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, (float) (short) 100);
        float[] floatArray18 = new float[] { (byte) -1, 1L };
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (float) 10L);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray18, (float) (short) 100);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.clone(floatArray18);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray18, 0.0f);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, (float) (-1));
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray18);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 1.0f);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0]");
    }

    @Test
    public void test11226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11226");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((short) (byte) 100, (short) 0);
        java.lang.Long[] longArray37 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray37);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray37, (long) (short) 10);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray40, (long) (short) 10);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray45);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.add(longArray45, (long) ' ');
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray45);
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray50);
        java.lang.Long[] longArray53 = org.apache.commons.lang3.ArrayUtils.toObject(longArray52);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.subarray(longArray52, (int) '4', (int) (short) 0);
        long[] longArray58 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray58);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(longArray58, 0L);
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray58);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray62, (long) (byte) 1, (int) (short) 1);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray62, (long) 3, (int) 'a');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(longArray62, (long) 7);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.remove(longArray62, (int) (byte) 0);
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.addAll(longArray52, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder31.append(longArray45, longArray73);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[0, 1, 100, 100, 0, 32]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[-1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
    }

    @Test
    public void test11227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11227");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        equalsBuilder31.reset();
        java.lang.Short[] shortArray36 = new java.lang.Short[] {};
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36, (short) 1);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.clone(shortArray39);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray40);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 0);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray47, (short) -1);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.add(shortArray49, (short) 1);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray40, shortArray49);
        short[] shortArray58 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray58, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray58);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray58, (short) (byte) 0);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray64, (short) (byte) 10);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray64, (short) (byte) -1);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray64);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray69, (int) (short) 1, (int) (short) 100);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.clone(shortArray69);
        short[] shortArray79 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray79, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray83 = new java.lang.Short[] {};
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray83);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray83, (short) 1);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray79, shortArray86);
        java.lang.Short[] shortArray88 = new java.lang.Short[] {};
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray88);
        short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray88, (short) 1);
        java.lang.Short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray91);
        short[] shortArray93 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray79, shortArray91);
        short[] shortArray96 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray91, (int) (byte) 100, 0);
        short[] shortArray97 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray73, shortArray96);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder31.append(shortArray40, shortArray96);
        boolean boolean99 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray40);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[100, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[]");
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[]");
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertNotNull(shortArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray93), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray96), "[]");
        org.junit.Assert.assertNotNull(shortArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray97), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test11228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11228");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (-1.0f));
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray25);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (short) 100, (int) (byte) 0);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, (double) 4);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, 2, (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0, 4.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0, 10.0, -1.0, 4.0]");
    }

    @Test
    public void test11229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11229");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.String str5 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray0);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray7, 'a');
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray7, 'a');
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray7, ' ');
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray7, "6");
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
    }

    @Test
    public void test11230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11230");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.lang.String[][] strArray1 = new java.lang.String[][] {};
        java.lang.String[][] strArray2 = new java.lang.String[][] {};
        java.lang.String[][] strArray3 = new java.lang.String[][] {};
        java.lang.String[][] strArray4 = new java.lang.String[][] {};
        java.lang.String[][][] strArray5 = new java.lang.String[][][] { strArray0, strArray1, strArray2, strArray3, strArray4 };
        java.lang.String[][] strArray6 = new java.lang.String[][] {};
        java.lang.String[][] strArray7 = new java.lang.String[][] {};
        java.lang.String[][] strArray8 = new java.lang.String[][] {};
        java.lang.String[][] strArray9 = new java.lang.String[][] {};
        java.lang.String[][] strArray10 = new java.lang.String[][] {};
        java.lang.String[][][] strArray11 = new java.lang.String[][][] { strArray6, strArray7, strArray8, strArray9, strArray10 };
        java.lang.String[][][][] strArray12 = new java.lang.String[][][][] { strArray5, strArray11 };
        java.lang.String[][] strArray13 = new java.lang.String[][] {};
        java.lang.String[][] strArray14 = new java.lang.String[][] {};
        java.lang.String[][] strArray15 = new java.lang.String[][] {};
        java.lang.String[][] strArray16 = new java.lang.String[][] {};
        java.lang.String[][] strArray17 = new java.lang.String[][] {};
        java.lang.String[][][] strArray18 = new java.lang.String[][][] { strArray13, strArray14, strArray15, strArray16, strArray17 };
        java.lang.String[][] strArray19 = new java.lang.String[][] {};
        java.lang.String[][] strArray20 = new java.lang.String[][] {};
        java.lang.String[][] strArray21 = new java.lang.String[][] {};
        java.lang.String[][] strArray22 = new java.lang.String[][] {};
        java.lang.String[][] strArray23 = new java.lang.String[][] {};
        java.lang.String[][][] strArray24 = new java.lang.String[][][] { strArray19, strArray20, strArray21, strArray22, strArray23 };
        java.lang.String[][][][] strArray25 = new java.lang.String[][][][] { strArray18, strArray24 };
        java.lang.String[][][][][] strArray26 = new java.lang.String[][][][][] { strArray12, strArray25 };
        java.lang.String[][][][] strArray27 = null;
        java.lang.String[][][][][] strArray28 = org.apache.commons.lang3.ArrayUtils.add(strArray26, strArray27);
        java.lang.String[][][][][] strArray29 = org.apache.commons.lang3.ArrayUtils.clone(strArray26);
        byte[][][][][] byteArray30 = new byte[][][][][] {};
        byte[][][][][] byteArray31 = new byte[][][][][] {};
        byte[][][][][] byteArray32 = new byte[][][][][] {};
        byte[][][][][] byteArray33 = new byte[][][][][] {};
        byte[][][][][] byteArray34 = new byte[][][][][] {};
        byte[][][][][][] byteArray35 = new byte[][][][][][] { byteArray30, byteArray31, byteArray32, byteArray33, byteArray34 };
        byte[][][][][][] byteArray38 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray35, (int) 'a', (int) (short) 1);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray35);
        byte[][][][][][] byteArray40 = org.apache.commons.lang3.ArrayUtils.toArray(byteArray35);
        java.lang.Object[] objArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[][][][][] objArray42 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.Object[][][][][]) strArray29, (java.lang.Object[][][][][]) byteArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot store [[[[[B in an array of [[[[Ljava.lang.String;");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[[], [], [], [], []]");
    }

    @Test
    public void test11231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11231");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) (byte) 0);
        java.lang.Short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray5, (short) (byte) 0, (int) 'a');
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.clone(shortArray5);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (int) (byte) 100, (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1]");
    }

    @Test
    public void test11232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11232");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, (float) 'a');
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean[] booleanArray19 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 0, 0);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray36 = new char[] { '#', 'a', 'a' };
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray32, charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray32, ' ');
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray49 = new char[] { '#', 'a', 'a' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray49);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray49, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder26.append((java.lang.Object) ' ', (java.lang.Object) charArray49);
        java.lang.Long[] longArray60 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray60);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray62);
        char[] charArray67 = new char[] { 'a', '#', ' ' };
        char[][] charArray68 = new char[][] { charArray67 };
        char[][] charArray69 = org.apache.commons.lang3.ArrayUtils.toArray(charArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder54.append((java.lang.Object[]) longArray62, (java.lang.Object[]) charArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder54.append(true, false);
        long[] longArray78 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray78, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray80);
        long[] longArray83 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder54.append(longArray80, longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) (byte) -1, (double) 1L);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray25, (java.lang.Object) equalsBuilder87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray13, (java.lang.Object[]) booleanArray25);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25, true);
        java.lang.Boolean[] booleanArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        java.lang.Boolean[] booleanArray93 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        boolean[] booleanArray95 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray93, false);
        java.lang.Boolean[] booleanArray96 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray93);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray92);
        org.junit.Assert.assertNotNull(booleanArray93);
        org.junit.Assert.assertNotNull(booleanArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray95), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray96);
    }

    @Test
    public void test11233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11233");
        boolean[] booleanArray3 = new boolean[] { true, true, true };
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray3, 100, (int) (byte) 0);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
    }

    @Test
    public void test11234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11234");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 0);
        short[] shortArray15 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray19 = new java.lang.Short[] {};
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19, (short) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray15, shortArray22);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 0, 0);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.add(shortArray15, (int) (byte) 0, (short) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray29, (short) (byte) 1, (int) (short) 0);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray29, (short) (byte) -1, 0);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray29, (int) (byte) 100, (int) (byte) 100);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray38);
        java.lang.Short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray40);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        short[] shortArray48 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray48, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray48);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) (byte) 0);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray54, (short) (byte) 100);
        java.lang.Short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray54);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray54, (int) (byte) 100, 1);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray60);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray39, shortArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray39);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.add(shortArray39, (short) (byte) -1);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray65);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.add(shortArray65, (short) 0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[-1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[-1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[-1, 0]");
    }

    @Test
    public void test11235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11235");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 0, (int) (short) 10);
        double[] doubleArray39 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) (byte) 100, 1.0d);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray47);
        float[] floatArray53 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray56 = new float[] { (byte) -1, 1L };
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 10L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray56);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray47, (java.lang.Object) boolean59);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, (int) (short) 0, 1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray47);
        java.lang.Double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray64);
        java.lang.Double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray64);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray64, (double) ' ', 4, (double) 0L);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray35, doubleArray64);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) (-1), (int) (byte) -1, (double) ' ');
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray35, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test11236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11236");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, true);
        boolean[] booleanArray26 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (int) (byte) 0, 0);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray29);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, false, (int) (byte) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray29);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray41, true);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, true);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray46);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray47, true, (int) '4');
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray47);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray51);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray51);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, true, false, false, false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test11237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11237");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        java.util.stream.Stream<java.lang.String> strStream15 = strList9.parallelStream();
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray22);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray39);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray32, (java.lang.Object) intArray39);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32, (byte) 10);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        java.lang.String[] strArray50 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean25, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList51);
        boolean boolean54 = strList9.retainAll((java.util.Collection<java.lang.String>) strList51);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[][] intArray73 = new java.lang.Integer[][] { intArray57, intArray60, intArray63, intArray66, intArray69, intArray72 };
        java.lang.String[] strArray76 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.stream.Stream<java.lang.String> strStream79 = strList77.parallelStream();
        java.lang.String[] strArray82 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.stream.Stream<java.lang.String> strStream85 = strList83.parallelStream();
        boolean boolean86 = strList77.addAll((java.util.Collection<java.lang.String>) strList83);
        java.lang.Object obj87 = null;
        boolean boolean88 = strList83.equals(obj87);
        int int89 = strList83.size();
        java.lang.Integer[][] intArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray73, (java.lang.Object) strList83);
        boolean boolean91 = strList9.containsAll((java.util.Collection<java.lang.String>) strList83);
        java.lang.Object obj92 = null;
        boolean boolean93 = strList9.equals(obj92);
        java.lang.Object obj94 = null;
        boolean boolean95 = strList9.equals(obj94);
        boolean boolean96 = strList9.isEmpty();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test11238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11238");
        short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = new java.lang.Short[] {};
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray4, (short) 1);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) 1, (int) (short) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(shortArray4, (short) (byte) 0);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(shortArray4, (short) 1);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray4);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
    }

    @Test
    public void test11239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11239");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, 'a');
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray10);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11240");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray4, (float) '4');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray12, (float) 1L);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.clone(floatArray12);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray16, (float) (byte) 0);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray16);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 10.0, -1.0, 97.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[100.0, 10.0, -1.0, 97.0]");
    }

    @Test
    public void test11241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11241");
        java.lang.Short[][] shortArray0 = null;
        java.lang.Short[] shortArray1 = null;
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2);
        java.lang.Object[] objArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray2);
        java.lang.Short[][] shortArray5 = org.apache.commons.lang3.ArrayUtils.add(shortArray0, shortArray2);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) shortArray5);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test11242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11242");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray34);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray34, (int) (byte) 1, 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(floatArray34, (float) 'a');
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray28, (java.lang.Object) boolean41);
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray28);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray28, (byte) 0);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray28);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray28, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
    }

    @Test
    public void test11243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11243");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(intArray17, (int) 'a');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray17);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray17, 3);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
    }

    @Test
    public void test11244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11244");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(1.0f, (float) 1);
        float[] floatArray48 = null;
        java.lang.Float[] floatArray52 = new java.lang.Float[] { (-1.0f), 100.0f, (-1.0f) };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray52);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder47.append(floatArray48, floatArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((long) (byte) 1, (long) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder55.append(false, true);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
    }

    @Test
    public void test11245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11245");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray14, true);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, 5);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean[] booleanArray23 = new boolean[] {};
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray23, false);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, 7, (int) (byte) 10);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray26, false, 2);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray14, booleanArray26);
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray39);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray40);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray40);
        float[] floatArray45 = new float[] { (byte) -1, 1L };
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray45, (float) 10L);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray40, (java.lang.Object) int47);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray40);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray40);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray14, booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test11246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11246");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray11);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
    }

    @Test
    public void test11247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11247");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray4, true);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, false, 8);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test11248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11248");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray33);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray33, (java.lang.Object) (byte) 1, (int) (byte) -1);
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray44, true);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray33, (java.lang.Object) true);
        boolean boolean48 = strList13.equals((java.lang.Object) byteArray33);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray33);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray33, (byte) 0);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray33, (byte) 0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, 1, 100, 1, -1]");
    }

    @Test
    public void test11249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11249");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream8 = strList5.stream();
        java.util.Spliterator<java.lang.String> strSpliterator9 = strList5.spliterator();
        int int10 = strList5.size();
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray12, (long) (byte) 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray12);
        boolean boolean19 = strList5.equals((java.lang.Object) boolean18);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Integer[] intArray25 = org.apache.commons.lang3.ArrayUtils.toObject(intArray24);
        java.lang.Integer[] intArray26 = org.apache.commons.lang3.ArrayUtils.toObject(intArray24);
        short[] shortArray32 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray32, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray36 = new java.lang.Short[] {};
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36, (short) 1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray32, shortArray39);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray39, (int) '4', (int) (short) 0);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray39, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray39);
        java.lang.String[] strArray52 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray61 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.remove(floatArray61, (int) (short) 1);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray55, floatArray64);
        boolean boolean66 = strList53.equals((java.lang.Object) floatArray65);
        int int67 = strList53.size();
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray68, (int) (byte) 1);
        boolean boolean71 = strList53.contains((java.lang.Object) int70);
        java.lang.Object[] objArray72 = strList53.toArray();
        boolean boolean73 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray26, (java.lang.Object) shortArray47, (java.util.Collection<java.lang.String>) strList53);
        boolean boolean74 = strList5.addAll((java.util.Collection<java.lang.String>) strList53);
        boolean boolean76 = strList5.add("{true,true}");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strSpliterator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test11250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11250");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray3, (short) (byte) 10, (int) (short) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray3, (short) (byte) 0, (int) (byte) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.remove(shortArray3, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
    }

    @Test
    public void test11251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11251");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) doubleArray26);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26);
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (byte) -1);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray37, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray37, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test11252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11252");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        strList21.clear();
        int int42 = strList21.size();
        java.lang.String[] strArray44 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.lang.String[] strArray49 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.stream.Stream<java.lang.String> strStream52 = strList50.parallelStream();
        java.lang.String[] strArray55 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.parallelStream();
        boolean boolean59 = strList50.addAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.Object obj60 = null;
        boolean boolean61 = strList56.equals(obj60);
        int int62 = strList56.size();
        boolean boolean63 = strList45.removeAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.Object obj64 = null;
        java.lang.String[] strArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray67 = org.apache.commons.lang3.ArrayUtils.add(strArray65, "{true,true}");
        java.lang.String[] strArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray67);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList45, obj64, strArray67);
        boolean boolean70 = strList21.containsAll((java.util.Collection<java.lang.String>) strList45);
        java.util.stream.Stream<java.lang.String> strStream71 = strList45.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strStream71);
    }

    @Test
    public void test11253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11253");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1);
        java.lang.Double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray1);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray5, (double) 3, 4, (double) (byte) 1);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray14 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray14, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray14);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (short) 1, (int) (short) 100);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray14);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray14);
        java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray5, doubleArray14);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray5, (double) 5, (int) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test11254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11254");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray18, 5, (byte) -1);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 0);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.clone(byteArray21);
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray25);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 6 + "'", int24 == 6);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 100, -1, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 100, -1, -1, -1, 0, 10]");
    }

    @Test
    public void test11255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11255");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        boolean[] booleanArray36 = new boolean[] { false, false, false, true, false, false };
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        boolean[] booleanArray44 = new boolean[] { false, false, false, true, false, false };
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray44);
        java.lang.String[] strArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray49 = org.apache.commons.lang3.ArrayUtils.add(strArray47, "{true,true}");
        boolean boolean50 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray29, (java.lang.Object) boolean46, strArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray58);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray59, intArray60);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray60, (int) (byte) 0);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray60);
        int[] intArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray65, (int) (byte) 1);
        int[] intArray68 = new int[] {};
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray68, intArray69);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.addAll(intArray65, intArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder51.append(intArray64, intArray68);
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray68);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray73, 2);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray73, (int) 'a', 100);
        int[] intArray80 = org.apache.commons.lang3.ArrayUtils.add(intArray73, (int) (short) 1);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray73);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strArray49, (java.lang.Object) intArray81);
        java.lang.String[] strArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray49);
        java.lang.String[] strArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray83);
        float[] floatArray90 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray91 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray90);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray90, 0.0f);
        java.lang.Float[] floatArray94 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray90);
        java.lang.Object[] objArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray94);
        java.lang.Object[] objArray96 = null;
        boolean boolean97 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray95, objArray96);
        int int99 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray83, (java.lang.Object) boolean97, (-1));
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(floatArray94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test11256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11256");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (short) 1, 1);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray17, false);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, true);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray19, true);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, true, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
    }

    @Test
    public void test11257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11257");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray2);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray2, (long) (short) -1);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (long) 0);
        java.lang.Long[] longArray18 = new java.lang.Long[] { 1L, 0L };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray19);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray19, (long) 10);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(longArray19, (long) '4');
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.subarray(longArray19, 3, (int) (byte) 1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[1, 0, 10]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 0, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[]");
    }

    @Test
    public void test11258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11258");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, 'a');
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray23);
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray34 = new char[] { '#', 'a', 'a' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray34);
        java.lang.String str36 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray30);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray23, charArray30);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray47 = new char[] { '#', 'a', 'a' };
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.addAll(charArray43, charArray47);
        java.lang.String str49 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray43);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray43);
        boolean boolean52 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray30, (java.lang.Object) charArray50, false);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.remove(charArray30, 0);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray30);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray30);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray30, 'a', (int) (short) 100);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray30, '#', 7);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{4,#,a,4,#}" + "'", str36, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{4,#,a,4,#}" + "'", str49, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
    }

    @Test
    public void test11259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11259");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, 0.0f);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) (-1));
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, 1.0f);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test11260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11260");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray10, (long) 0, 4);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray10, (long) (short) 0);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray10);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray21 = org.apache.commons.lang3.ArrayUtils.add(longArray18, (int) (short) -1, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
    }

    @Test
    public void test11261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11261");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, (int) (short) 1);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray9);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#aaa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#aaa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a, a, a]");
    }

    @Test
    public void test11262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11262");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray13, (int) (short) 0, '4');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.add(charArray13, ' ');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray18, ' ');
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray20);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray25, '#');
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray25);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ ]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
    }

    @Test
    public void test11263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11263");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        long[] longArray10 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray10, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray20 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, 1L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray15, longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray5, (java.lang.Object) longArray15);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.add(longArray15, 1, (long) 'a');
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[-1, 97]");
    }

    @Test
    public void test11264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11264");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.lang.String[] strArray36 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.parallelStream();
        boolean boolean40 = strList31.addAll((java.util.Collection<java.lang.String>) strList37);
        java.util.stream.Stream<java.lang.String> strStream41 = strList31.parallelStream();
        boolean boolean43 = strList31.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray48 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray57 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.remove(floatArray57, (int) (short) 1);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray51, floatArray60);
        boolean boolean62 = strList49.equals((java.lang.Object) floatArray61);
        int int63 = strList49.size();
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (byte) 1);
        boolean boolean67 = strList49.contains((java.lang.Object) int66);
        boolean boolean68 = strList31.addAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String[] strArray73 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray82 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.remove(floatArray82, (int) (short) 1);
        float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray76, floatArray85);
        boolean boolean87 = strList74.equals((java.lang.Object) floatArray86);
        int int88 = strList74.size();
        boolean boolean89 = strList31.removeAll((java.util.Collection<java.lang.String>) strList74);
        java.util.Iterator<java.lang.String> strItor90 = strList74.iterator();
        boolean boolean91 = strList13.retainAll((java.util.Collection<java.lang.String>) strList74);
        int int92 = strList13.size();
        java.util.Spliterator<java.lang.String> strSpliterator93 = strList13.spliterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(strSpliterator93);
    }

    @Test
    public void test11265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11265");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) 1);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) 0);
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray11);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray16);
    }

    @Test
    public void test11266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11266");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) -1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(shortArray6, (short) 0);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray6);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) 0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[-1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[-1, 0]");
    }

    @Test
    public void test11267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11267");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray0, intArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, ' ');
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder3.append((java.lang.Object) ' ', (java.lang.Object) charArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder3.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray44);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray45, intArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(intArray46, (int) '4');
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.add(intArray46, (int) (short) 100);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray46);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray46, (int) (short) 1);
        int[] intArray56 = new int[] {};
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray56, intArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder37.append(intArray46, intArray57);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.addAll(intArray1, intArray57);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.add(intArray60, 1);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
    }

    @Test
    public void test11268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11268");
        java.lang.Long[] longArray3 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray7 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray11 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[][] longArray12 = new java.lang.Long[][] { longArray3, longArray7, longArray11 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder13.append((int) (byte) 0, (int) (byte) 10);
        java.lang.Long[][] longArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray12, (java.lang.Object) equalsBuilder19);
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray23);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray23, '4');
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.toObject(charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder19.append(charArray22, charArray23);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray23);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
    }

    @Test
    public void test11269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11269");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        equalsBuilder31.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder31.append(100.0d, (double) (short) -1);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray47);
        short[] shortArray50 = new short[] { (short) 10 };
        short[] shortArray52 = new short[] { (short) 10 };
        short[] shortArray54 = new short[] { (short) 10 };
        short[] shortArray56 = new short[] { (short) 10 };
        short[][] shortArray57 = new short[][] { shortArray50, shortArray52, shortArray54, shortArray56 };
        short[][] shortArray58 = org.apache.commons.lang3.ArrayUtils.clone(shortArray57);
        short[] shortArray60 = new short[] { (short) 10 };
        short[] shortArray62 = new short[] { (short) 10 };
        short[] shortArray64 = new short[] { (short) 10 };
        short[] shortArray66 = new short[] { (short) 10 };
        short[][] shortArray67 = new short[][] { shortArray60, shortArray62, shortArray64, shortArray66 };
        short[][] shortArray68 = org.apache.commons.lang3.ArrayUtils.clone(shortArray67);
        short[][] shortArray69 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray57, shortArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder40.append((java.lang.Object[]) intArray47, (java.lang.Object[]) shortArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder70.appendSuper(true);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[10]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[10]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[10]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[10]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[10]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[10]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[10]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[10]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test11270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11270");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray17);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray18, intArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray19, (int) (byte) 0);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray19);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray24, (int) (byte) 1);
        int[] intArray27 = new int[] {};
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray27, intArray28);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.addAll(intArray24, intArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder10.append(intArray23, intArray27);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, (int) (short) -1);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray34, (int) '4', 2);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.add(intArray34, (int) '#');
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.addAll(intArray33, intArray34);
        java.lang.Short[] shortArray41 = null;
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray41);
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) (byte) -1);
        java.lang.String str47 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray42, "hi!");
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray54);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray55, intArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray42, (java.lang.Object) intArray55, 3);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder9.append(intArray40, intArray55);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray62, byteArray67);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray62, (byte) -1);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) -1);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray62, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray62);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray62, (byte) 0);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray62);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray62, (int) '4', 3);
        java.lang.Object obj82 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder9.append((java.lang.Object) byteArray62, obj82);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) 10);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray85, 8, (int) (byte) 100);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray85);
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray85, (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[]");
    }

    @Test
    public void test11271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11271");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray4);
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray4, '#');
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray4, '4');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test11272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11272");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.util.Iterator<java.lang.String> strItor21 = strList13.iterator();
        java.util.stream.Stream<java.lang.String> strStream22 = strList13.stream();
        strList13.clear();
        strList13.clear();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strStream22);
    }

    @Test
    public void test11273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11273");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , #, 4, a, a]");
    }

    @Test
    public void test11274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11274");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        double[] doubleArray54 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray54, (double) (byte) 100, 1.0d);
        double[] doubleArray62 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray54, doubleArray62);
        float[] floatArray68 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray71 = new float[] { (byte) -1, 1L };
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) 10L);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray68, floatArray71);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray62, (java.lang.Object) boolean74);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray62);
        java.lang.Double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray76);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray77, (double) (-1));
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray80, (double) 10L, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder50.append(doubleArray79, doubleArray80);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.add(doubleArray80, (double) 3);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.add(doubleArray80, 100.0d);
        double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray80, 0.0d);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[3.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[]");
    }

    @Test
    public void test11275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11275");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        boolean[] booleanArray36 = new boolean[] { false, false, false, true, false, false };
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        boolean[] booleanArray44 = new boolean[] { false, false, false, true, false, false };
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray44);
        java.lang.String[] strArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray49 = org.apache.commons.lang3.ArrayUtils.add(strArray47, "{true,true}");
        boolean boolean50 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray29, (java.lang.Object) boolean46, strArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray29);
        java.lang.Character[] charArray52 = org.apache.commons.lang3.ArrayUtils.toObject(charArray51);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray52);
    }

    @Test
    public void test11276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11276");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray17, (float) 10);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray17);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray20, (float) 1L);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray22, (float) (-1));
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, (float) (byte) 1);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray24);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11277");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray20);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray20, 0.0f, (-1));
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray36);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray36);
        float[] floatArray44 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray44, 0.0f);
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        float[] floatArray54 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray54);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray54, (int) (byte) 1, 0);
        float[] floatArray62 = new float[] { (byte) -1, 1L };
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray62, (float) 10L);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray59, floatArray62);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray62);
        float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray44, floatArray62);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray67, (float) 'a');
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.add(floatArray67, 0.0f);
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray67);
        float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray38, floatArray67);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(floatArray38, (float) (short) 100);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0, -1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test11278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11278");
        char[] charArray2 = new char[] { '4', '4' };
        char[] charArray5 = new char[] { '4', '4' };
        char[] charArray8 = new char[] { '4', '4' };
        char[][] charArray9 = new char[][] { charArray2, charArray5, charArray8 };
        char[] charArray12 = new char[] { '4', '4' };
        char[] charArray15 = new char[] { '4', '4' };
        char[] charArray18 = new char[] { '4', '4' };
        char[][] charArray19 = new char[][] { charArray12, charArray15, charArray18 };
        char[] charArray22 = new char[] { '4', '4' };
        char[] charArray25 = new char[] { '4', '4' };
        char[] charArray28 = new char[] { '4', '4' };
        char[][] charArray29 = new char[][] { charArray22, charArray25, charArray28 };
        char[] charArray32 = new char[] { '4', '4' };
        char[] charArray35 = new char[] { '4', '4' };
        char[] charArray38 = new char[] { '4', '4' };
        char[][] charArray39 = new char[][] { charArray32, charArray35, charArray38 };
        char[][][] charArray40 = new char[][][] { charArray9, charArray19, charArray29, charArray39 };
        char[] charArray44 = new char[] { 'a', '#', ' ' };
        char[][] charArray45 = new char[][] { charArray44 };
        char[][] charArray46 = org.apache.commons.lang3.ArrayUtils.toArray(charArray45);
        char[][][] charArray47 = org.apache.commons.lang3.ArrayUtils.add(charArray40, charArray45);
        long[] longArray50 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(longArray50, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray50);
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray50);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toObject(longArray56);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57, (long) 'a');
        char[][][] charArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray40, (java.lang.Object) longArray57);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.remove(longArray61, 0);
        java.lang.Long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toObject(longArray63);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[-1]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[]");
        org.junit.Assert.assertNotNull(longArray64);
    }

    @Test
    public void test11279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11279");
        java.lang.Character[] charArray6 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray13 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray20 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[][] charArray21 = new java.lang.Character[][] { charArray6, charArray13, charArray20 };
        java.lang.Character[][][] charArray22 = new java.lang.Character[][][] { charArray21 };
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23, '4');
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32);
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray25, (java.lang.Object) byteArray32, true);
        java.lang.Character[] charArray41 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray42 = new java.lang.Character[][] { charArray41 };
        java.lang.Character[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray32, (java.lang.Object[]) charArray43);
        java.lang.Character[][][] charArray45 = org.apache.commons.lang3.ArrayUtils.add(charArray22, charArray43);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray22, (java.lang.Object[]) intArray48);
        java.lang.Integer[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray51, 2);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray53, 0);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.clone(intArray53);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray59 = org.apache.commons.lang3.ArrayUtils.add(intArray53, (-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1, 0]");
    }

    @Test
    public void test11280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11280");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray8);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
    }

    @Test
    public void test11281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11281");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray53, false);
        boolean[] booleanArray63 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, (int) (byte) 0, 0);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, 4, (int) '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray57, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(booleanArray46, booleanArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append(1L, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((long) 0, (long) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(false, true);
        boolean boolean81 = equalsBuilder80.isEquals();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11282");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 0);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray72, (short) (byte) -1);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray72, (int) '4', (int) '#');
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray77, (int) '4', (int) (byte) 100);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray77);
        short[] shortArray88 = new short[] { (byte) 1, (byte) 10, (short) 100, (byte) 10, (byte) 100, (short) 10 };
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray88, (short) 1, 5);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray88, (short) 0);
        short[] shortArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray88);
        short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.clone(shortArray94);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray77, shortArray94);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.contains(shortArray94, (short) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[100, 0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[1, 10, 100, 10, 100, 10]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(shortArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray94), "[1, 10, 100, 10, 100, 10]");
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray95), "[1, 10, 100, 10, 100, 10]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test11283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11283");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (short) 100, 7);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray15, 2, (int) (short) 0);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray15, true);
        boolean[] booleanArray27 = new boolean[] { false, false, false, true, false, false };
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray27);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray27, true);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray27, true);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray38, true);
        boolean[] booleanArray47 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray47, (int) (byte) 0, 0);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray38, booleanArray50);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray50, false, (int) (byte) 1);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray27, booleanArray50);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray50);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray15);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, true);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray15, true, (int) ' ');
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test11284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11284");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.clone(charArray0);
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray0);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '4');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4]");
    }

    @Test
    public void test11285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11285");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append(false, false);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray44, byteArray49);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray44, (byte) -1);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray44, (byte) -1);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.clone(byteArray54);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray62, (byte) 1);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(byteArray64, (byte) 100);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(byteArray64, (byte) 1);
        java.lang.Byte[] byteArray75 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray75, (byte) 1);
        byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray77, (int) (byte) 0, (int) (byte) 1);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray64, byteArray80);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray64, (byte) 10);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.add(byteArray64, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder43.append(byteArray55, byteArray64);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray64, (byte) 100);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.contains(byteArray64, (byte) 100);
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.clone(byteArray64);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[0, 0, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[0, 0, 100, -1, -1, 0]");
    }

    @Test
    public void test11286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11286");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, (int) '#', (int) (short) -1);
        int int4 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (short) 100);
        double[] doubleArray10 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray10, (double) (byte) 100, 1.0d);
        double[] doubleArray18 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray10, doubleArray18);
        float[] floatArray24 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray27 = new float[] { (byte) -1, 1L };
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray27, (float) 10L);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray24, floatArray27);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray18, (java.lang.Object) boolean30);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray18);
        java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray32);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray33, (double) (-1));
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, (double) (-1));
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray6, doubleArray35);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test11287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11287");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(' ', ' ');
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray39, '4');
        java.lang.Character[] charArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.toObject(charArray44);
        float[] floatArray46 = new float[] {};
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray45, (java.lang.Object) floatArray46);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray46, (float) 100L);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray50);
        float[] floatArray57 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray57);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray57, (int) (byte) 1, 0);
        float[] floatArray65 = new float[] { (byte) -1, 1L };
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray65, (float) 10L);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray62, floatArray65);
        java.lang.Float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray65);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray65, (float) (-1L));
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(floatArray71, (float) 6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder38.append(floatArray51, floatArray71);
        double[] doubleArray78 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray78, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray78);
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray78, (double) (short) 1, (int) (short) 100);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray78);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray78);
        java.lang.Double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray78);
        java.lang.Double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray88);
        java.lang.Double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray89);
        double[] doubleArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray89, (double) (byte) 100);
        java.lang.Double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray92);
        java.lang.Object[] objArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) doubleArray93);
        boolean[] booleanArray95 = new boolean[] {};
        boolean[] booleanArray97 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray95, true);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray97);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder74.append((java.lang.Object) objArray94, (java.lang.Object) booleanArray97);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(booleanArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray95), "[]");
        org.junit.Assert.assertNotNull(booleanArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray97), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test11288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11288");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (short) 1, (long) '#');
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.toObject(longArray13);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray13);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray13);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 35]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, 35]");
        org.junit.Assert.assertNotNull(longArray16);
    }

    @Test
    public void test11289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11289");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        strList21.clear();
        int int42 = strList21.size();
        java.lang.String[] strArray44 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.lang.String[] strArray49 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.stream.Stream<java.lang.String> strStream52 = strList50.parallelStream();
        java.lang.String[] strArray55 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.parallelStream();
        boolean boolean59 = strList50.addAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.Object obj60 = null;
        boolean boolean61 = strList56.equals(obj60);
        int int62 = strList56.size();
        boolean boolean63 = strList45.removeAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.Object obj64 = null;
        java.lang.String[] strArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray67 = org.apache.commons.lang3.ArrayUtils.add(strArray65, "{true,true}");
        java.lang.String[] strArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray67);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList45, obj64, strArray67);
        boolean boolean70 = strList21.containsAll((java.util.Collection<java.lang.String>) strList45);
        java.util.Iterator<java.lang.String> strItor71 = strList45.iterator();
        boolean boolean72 = strList45.isEmpty();
        java.util.Iterator<java.lang.String> strItor73 = strList45.iterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strItor73);
    }

    @Test
    public void test11290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11290");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray6);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray7);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray7, (int) ' ', (int) (short) 100);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray11, 10, (int) (byte) 100);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, 0.0f, 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 1L, (int) (byte) 1);
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(floatArray21);
    }

    @Test
    public void test11291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11291");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray20);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray20, 0.0f, (-1));
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray36);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray36);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 7);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 10);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray20);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) ' ');
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
    }

    @Test
    public void test11292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11292");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        double[] doubleArray14 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray14, (double) (byte) 100, 1.0d);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 100.0d, (int) (short) 1, (double) 1L);
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean10, (java.lang.Object) doubleArray14);
        double[] doubleArray26 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray26, (double) (byte) 100, 1.0d);
        double[] doubleArray34 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray26, doubleArray34);
        float[] floatArray40 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray43 = new float[] { (byte) -1, 1L };
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray43, (float) 10L);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray40, floatArray43);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray34, (java.lang.Object) boolean46);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, (int) (short) 0, 1);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray51);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray50, doubleArray51);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray51);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 10.0, 52.0]");
    }

    @Test
    public void test11293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11293");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray2);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray2, (long) (short) -1);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (long) 0);
        java.lang.Long[] longArray18 = new java.lang.Long[] { 1L, 0L };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray19);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray19, (long) 10);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray19);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray26 = org.apache.commons.lang3.ArrayUtils.add(longArray23, (-1), (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[1, 0, 10]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 0, 1, 0]");
    }

    @Test
    public void test11294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11294");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 100.0d, (int) (short) 1, (double) 1L);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 10, (int) (short) 10);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray20);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) doubleArray3, (java.lang.Object) intArray20);
        java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray24, (long) '4');
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray24);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray24, 10L);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray24);
        java.lang.Short[] shortArray31 = new java.lang.Short[] {};
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) 1);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.clone(shortArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(shortArray34, (short) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray24, (java.lang.Object) shortArray34, (-1));
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray20, (java.lang.Object) shortArray34);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray34);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test11295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11295");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        java.lang.Object obj4 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "[]", "{-1.0,0.0,10.0,-1.0,100.0}", "{1.0,0.0,10.0,-1.0}" };
        boolean boolean9 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray2, obj4, strArray8);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(shortArray10, (short) 0);
        short[] shortArray18 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray18, shortArray25);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) 0, 0);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (int) (byte) 0, (short) 0);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray32);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray10, shortArray32);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test11296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11296");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray15, (-1.0f), 0);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.clone(floatArray15);
        float[] floatArray37 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray37);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray37, (int) (byte) 1, 0);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray42, (float) (byte) 100, (int) '4');
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray42);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray42);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.add(floatArray42, 0, (float) 4);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.remove(floatArray50, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[4.0]");
    }

    @Test
    public void test11297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11297");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray15 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, (int) (byte) 1, 0);
        float[] floatArray23 = new float[] { (byte) -1, 1L };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) 10L);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray20, floatArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray23);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray28, (float) 'a');
        java.lang.Float[] floatArray34 = new java.lang.Float[] { (-1.0f), 100.0f, (-1.0f) };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray34);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, (float) (short) 1);
        java.lang.Character[] charArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, '4');
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray34, (java.lang.Object) charArray38);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, (float) '#');
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray28, floatArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(floatArray43, 0.0f);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test11298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11298");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) -1 };
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 0, (int) (short) 0);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray5, (byte) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray10);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11299");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10, (int) (byte) 1);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (byte) 1, 0, (double) 7);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test11300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11300");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        long[] longArray59 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, '4');
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray68);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.add(strArray72, "{true,true}");
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray71, (java.lang.Object[]) strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray52, (java.lang.Object) longArray59, strArray72);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray59, (long) (short) 1, 100);
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray59, (long) (byte) 10);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray59, (long) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[100, -1, 1, -1, 1]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 5 + "'", int83 == 5);
    }

    @Test
    public void test11301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11301");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray13);
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray15);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray15);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray15, (double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[52.0, 10.0, -1.0]");
    }

    @Test
    public void test11302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11302");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, 2);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) 'a', 100);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) (short) 1);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray30, (int) 'a');
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray30);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
    }

    @Test
    public void test11303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11303");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray8, 3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray22, ' ');
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray39 = new char[] { '#', 'a', 'a' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.addAll(charArray35, charArray39);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray39, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder16.append((java.lang.Object) ' ', (java.lang.Object) charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder16.append((int) (short) 1, 10);
        boolean boolean48 = equalsBuilder16.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder16.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((long) '4', (long) ' ');
        long[] longArray60 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.subarray(longArray60, 3, (int) (byte) 0);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray60);
        boolean[] booleanArray71 = new boolean[] { false, false, false, true, false, false };
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray71);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray71, true);
        java.lang.String[] strArray77 = new java.lang.String[] { "4", "1" };
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean64, (java.lang.Object) true, strArray77);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray77);
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 3, (java.lang.Object) equalsBuilder53, strArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder53.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((double) 7, (double) (byte) 1);
        java.lang.Boolean boolean87 = equalsBuilder83.build();
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true, false]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
    }

    @Test
    public void test11304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11304");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        boolean boolean36 = equalsBuilder35.isEquals();
        java.lang.Boolean boolean37 = equalsBuilder35.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append((byte) 100, (byte) 100);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test11305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11305");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]");
    }

    @Test
    public void test11306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11306");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray8, 3);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray15);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray15, true, 9);
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray26, true);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray28, true);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray28);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray31);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray31, false);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray31);
        boolean[] booleanArray42 = new boolean[] { false, false, false, true, false, false };
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray42);
        boolean[] booleanArray50 = new boolean[] { false, false, false, true, false, false };
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray50);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray42, booleanArray50);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray42, false);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray42, true);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, true);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray42);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.add(booleanArray42, true);
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray67);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray68);
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray73);
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray73);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray75, false);
        java.lang.Boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray75);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray75);
        boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray69, booleanArray75);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray42, booleanArray69);
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray31, booleanArray69);
        java.lang.String str84 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray31, "[4, hi!]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, true, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, false, true, true, false, false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, false, true, true, false, false, false, true, true, false]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{false,false,false,true,true,false}" + "'", str84, "{false,false,false,true,true,false}");
    }

    @Test
    public void test11307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11307");
        boolean[] booleanArray5 = new boolean[] { false, true, false, false, false };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14);
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray8, (java.lang.Object) byteArray16);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray8);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray20, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true, false, false, false]");
    }

    @Test
    public void test11308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11308");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, true);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, true, (int) (byte) 0);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray15);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray16, (int) (short) 10, 3);
        long[] longArray21 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(longArray21, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray21);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray21);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray21);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(longArray21, (long) (short) 100);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.add(longArray21, (long) '#');
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray19, (java.lang.Object) longArray32, true);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray35, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray35);
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray42);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray42);
        int int45 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray35, booleanArray44);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray44, false, (int) (short) 100);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray44, false);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (byte) 10, (int) (short) 10);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray44, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray56);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray56, true, (int) '#');
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3 + "'", int45 == 3);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true, true, true, true]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test11309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11309");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        short[] shortArray9 = null;
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) 0, 3);
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) 0);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray17);
        java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray4);
        short[] shortArray26 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray26, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray30 = new java.lang.Short[] {};
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30, (short) 1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray26, shortArray33);
        java.lang.Short[] shortArray35 = new java.lang.Short[] {};
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35, (short) 1);
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray26, shortArray38);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray38, (int) (byte) 100, 0);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.clone(shortArray43);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray43);
        java.lang.Short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(shortArray47);
    }

    @Test
    public void test11310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11310");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray17, (byte) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray20, (byte) 100);
        java.lang.Byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray20);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) byteArray20, 3);
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray29);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray29);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray29);
        boolean[] booleanArray38 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray38, (int) (byte) 0, 0);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray38, true);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray32, booleanArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray38);
        long[] longArray52 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.subarray(longArray52, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray52, (java.lang.Object) booleanArray63);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray63, true);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray66, true, (int) (byte) 1);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray38, booleanArray66);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray38);
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) booleanArray38);
        java.lang.Boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray74 = new boolean[] {};
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray74, false);
        boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray74);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray77);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray77);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray79, false);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray6, (java.lang.Object) int81);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[true, true, true, false, true, false, true]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test11311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11311");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) 10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray13);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[-1, 0, 0, 100]");
    }

    @Test
    public void test11312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11312");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append(0L, (long) 'a');
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.append('a', 'a');
        java.lang.Short[] shortArray12 = new java.lang.Short[] {};
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 1);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 0);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.clone(shortArray17);
        java.lang.String str20 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray18, "4");
        short[] shortArray21 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder11.append(shortArray18, shortArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray23);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray23, 'a', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray39 = new char[] { '#', 'a', 'a' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.addAll(charArray35, charArray39);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray35, ' ');
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray52 = new char[] { '#', 'a', 'a' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.addAll(charArray48, charArray52);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray52, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder29.append((java.lang.Object) ' ', (java.lang.Object) charArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder60.append((short) 10, (short) -1);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray76 = new char[] { '#', 'a', 'a' };
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.addAll(charArray72, charArray76);
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray72, ' ');
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.remove(charArray79, 0);
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.remove(charArray81, 0);
        char[] charArray84 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder60.append(charArray83, charArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder22.append(charArray23, charArray83);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a, 4, #]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test11313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11313");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray8);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (short) 1);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray15, (int) (short) -1);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray17, (int) (byte) 10, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test11314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11314");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray70 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray71 = new java.lang.Byte[][] { byteArray64, byteArray70 };
        java.lang.Byte[][] byteArray74 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray71, (int) '#', 10);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81);
        java.lang.Byte[][] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray71, (java.lang.Object) intArray81);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81, 1);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.remove(intArray85, (int) (byte) 1);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray87);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.clone(intArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray58, intArray88);
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.subarray(intArray88, (int) (byte) 1, 5);
        int int96 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray93, 5, 6);
        boolean boolean97 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray93);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test11315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11315");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) doubleArray26);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26);
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray43, intArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray44, (int) (byte) 0);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray44);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray49, (int) (byte) 1);
        int[] intArray52 = new int[] {};
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray52, intArray53);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.addAll(intArray49, intArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder35.append(intArray48, intArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(intArray52, (int) 'a');
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.subarray(intArray52, 10, (int) (short) 100);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray34, (java.lang.Object) intArray61);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray34);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 10.0, 0.0, 1.0]");
    }

    @Test
    public void test11316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11316");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.add(shortArray7, (short) 1);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray7, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
    }

    @Test
    public void test11317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11317");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray6, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (byte) 10, 7);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray17, true, (int) '4');
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, false);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray17, true, 0);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test11318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11318");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray47 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray47, (int) (byte) 0, 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray47, true);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray41, booleanArray47);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray58);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray58, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder34.append(booleanArray47, booleanArray58);
        float[] floatArray68 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray68);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray68);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.clone(floatArray68);
        float[] floatArray77 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray77);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray77);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray77, (int) (byte) 1, 0);
        float[] floatArray85 = new float[] { (byte) -1, 1L };
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray85, (float) 10L);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray82, floatArray85);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray85);
        float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.clone(floatArray85);
        float[] floatArray92 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray90, (float) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder62.append(floatArray71, floatArray90);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray71);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray71);
        int int98 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) 5, 2);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[]");
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test11319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11319");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray5);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray5, 'a');
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.add(charArray15, ' ');
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.toObject(charArray18);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, a]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #, a,  ]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #, a,  ]");
    }

    @Test
    public void test11320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11320");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray40);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) (byte) 0, (double) 2);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.add(doubleArray40, (double) (byte) 100);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) (short) 1);
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray63);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray63, (double) 0.0f);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray63);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray63);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray63, (double) 8);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, -1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, -1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, -1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, -1.0, 10.0, 0.0, 1.0]");
    }

    @Test
    public void test11321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11321");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) -1);
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray14);
    }

    @Test
    public void test11322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11322");
        char[] charArray0 = null;
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        java.lang.String str12 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray6);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray6);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, '4');
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, 'a', 1);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, 10, 3);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray21, '#', 11);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray21);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{4,#,a,4,#}" + "'", str12, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test11323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11323");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false);
        boolean[] booleanArray28 = new boolean[] { false, false, false, true, false, false };
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray28, true);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray28, true);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray28);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray28, true);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray21, booleanArray28);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray21, true);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
    }

    @Test
    public void test11324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11324");
        int[] intArray0 = null;
        int[] intArray2 = org.apache.commons.lang3.ArrayUtils.add(intArray0, (int) ' ');
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.add(intArray0, (-1));
        org.apache.commons.lang3.ArrayUtils.reverse(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) (byte) 0, (int) (byte) 100);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[32]");
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1]");
    }

    @Test
    public void test11325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11325");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        boolean boolean22 = strList2.add("");
        boolean boolean24 = strList2.add("4");
        boolean boolean26 = strList2.add("[4, hi!, 4, hi!]");
        java.util.Iterator<java.lang.String> strItor27 = strList2.iterator();
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray33, 0.0f);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray33, (int) (short) 1, 3);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.add(floatArray33, (float) (short) 10);
        boolean boolean42 = strList2.remove((java.lang.Object) floatArray33);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test11326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11326");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.add(longArray3, 0L);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray3, (int) (short) 1, (long) 7);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[-1]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1, 7]");
    }

    @Test
    public void test11327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11327");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray17 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.stream.Stream<java.lang.String> strStream25 = strList23.parallelStream();
        java.lang.String[] strArray28 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.parallelStream();
        boolean boolean32 = strList23.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.Object obj33 = null;
        boolean boolean34 = strList29.equals(obj33);
        int int35 = strList29.size();
        boolean boolean36 = strList18.removeAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String[] strArray39 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.stream.Stream<java.lang.String> strStream42 = strList40.parallelStream();
        boolean boolean43 = strList29.addAll((java.util.Collection<java.lang.String>) strList40);
        java.lang.String[] strArray46 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.stream.Stream<java.lang.String> strStream49 = strList47.parallelStream();
        java.lang.String[] strArray52 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.stream.Stream<java.lang.String> strStream55 = strList53.parallelStream();
        boolean boolean56 = strList47.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.Object obj57 = null;
        boolean boolean58 = strList53.equals(obj57);
        java.lang.Iterable[] iterableArray60 = new java.lang.Iterable[3];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.lang.String>[] strIterableArray61 = (java.lang.Iterable<java.lang.String>[]) iterableArray60;
        strIterableArray61[0] = strList3;
        strIterableArray61[1] = strList40;
        strIterableArray61[2] = strList53;
        java.lang.String[] strArray70 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.stream.Stream<java.lang.String> strStream73 = strList71.parallelStream();
        java.lang.String[] strArray76 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.stream.Stream<java.lang.String> strStream79 = strList77.parallelStream();
        boolean boolean80 = strList71.addAll((java.util.Collection<java.lang.String>) strList77);
        java.lang.Iterable<java.lang.String>[] strIterableArray81 = org.apache.commons.lang3.ArrayUtils.add(strIterableArray61, (java.lang.Iterable<java.lang.String>) strList77);
        java.util.stream.Stream<java.lang.String> strStream82 = strList77.parallelStream();
        java.util.Iterator<java.lang.String> strItor83 = strList77.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator84 = strList77.spliterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(iterableArray60);
        org.junit.Assert.assertNotNull(strIterableArray61);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strStream73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strIterableArray81);
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertNotNull(strItor83);
        org.junit.Assert.assertNotNull(strSpliterator84);
    }

    @Test
    public void test11328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11328");
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray0 = new java.lang.reflect.GenericDeclaration[] {};
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray1 = new java.lang.reflect.GenericDeclaration[] {};
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray2 = new java.lang.reflect.GenericDeclaration[] {};
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray3 = new java.lang.reflect.GenericDeclaration[] {};
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray4 = new java.lang.reflect.GenericDeclaration[][] { genericDeclarationArray0, genericDeclarationArray1, genericDeclarationArray2, genericDeclarationArray3 };
        double[] doubleArray8 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray8, (double) (byte) 100, 1.0d);
        double[] doubleArray16 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray8, doubleArray16);
        float[] floatArray22 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray25 = new float[] { (byte) -1, 1L };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) 10L);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray22, floatArray25);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray16, (java.lang.Object) boolean28);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray16, (int) (short) 0, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray16);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray33);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) (-1.0f), (double) '4');
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(genericDeclarationArray4, (java.lang.Object) doubleArray33);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, 0, (-1.0d));
        org.junit.Assert.assertNotNull(genericDeclarationArray0);
        org.junit.Assert.assertNotNull(genericDeclarationArray1);
        org.junit.Assert.assertNotNull(genericDeclarationArray2);
        org.junit.Assert.assertNotNull(genericDeclarationArray3);
        org.junit.Assert.assertNotNull(genericDeclarationArray4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(genericDeclarationArray38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test11329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11329");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 100);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray21, intArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) '4');
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) 'a', (int) (short) 0);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray22, (int) '#', (int) (short) 0);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.subarray(intArray22, (int) (short) 0, (int) (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray22);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray38 = org.apache.commons.lang3.ArrayUtils.remove(intArray8, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test11330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11330");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 0, (double) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((short) 1, (short) 1);
        equalsBuilder43.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder43.append((double) '4', (double) 100L);
        java.lang.Double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray48);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray49, (double) 100);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray49, 0.0d);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 2, (int) (byte) 10);
        double[] doubleArray57 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder43.append(doubleArray56, doubleArray57);
        short[] shortArray64 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray64, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray68 = new java.lang.Short[] {};
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray68);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray68, (short) 1);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray64, shortArray71);
        java.lang.Short[] shortArray73 = new java.lang.Short[] {};
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray73);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray73, (short) 1);
        java.lang.Short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray76);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray64, shortArray76);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) equalsBuilder58, (java.lang.Object) shortArray76);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test11331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11331");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        long[] longArray52 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray54);
        long[] longArray57 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder28.append(longArray54, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder28.append((double) (-1L), (double) ' ');
        boolean boolean62 = equalsBuilder28.isEquals();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test11332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11332");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) 'a');
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray6, (int) (byte) 10, (int) (byte) 0);
        float[] floatArray17 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray17);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray17, (int) (byte) 1, 0);
        float[] floatArray25 = new float[] { (byte) -1, 1L };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) 10L);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray22, floatArray25);
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        float[] floatArray35 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray35);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray35, (int) (byte) 1, 0);
        float[] floatArray43 = new float[] { (byte) -1, 1L };
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray43, (float) 10L);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray40, floatArray43);
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray43);
        float[] floatArray50 = new float[] { (byte) -1, 1L };
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray50, (float) 10L);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray43, floatArray50);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray50, 0.0f, (-1));
        float[] floatArray63 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray63);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray64, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray66);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray50, floatArray66);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray50);
        java.lang.Float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray50);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray50);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test11333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11333");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray28 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.remove(floatArray28, (int) (short) 1);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray22, floatArray31);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.add(floatArray22, (float) (byte) 10);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray34, (float) (short) 100, (int) (byte) 0);
        float[] floatArray43 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray43);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray43, (int) (byte) 1, 0);
        float[] floatArray51 = new float[] { (byte) -1, 1L };
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray51, (float) 10L);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray48, floatArray51);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray51);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.clone(floatArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder0.append(floatArray34, floatArray56);
        java.lang.Character[] charArray58 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray60);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray71 = new char[] { '#', 'a', 'a' };
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.addAll(charArray67, charArray71);
        java.lang.String str73 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray67);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray60, charArray67);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray60);
        java.lang.Character[] charArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray76);
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.add(charArray77, 'a');
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder0.append(charArray60, charArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append('#', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((byte) 1, (byte) 10);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[10.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{4,#,a,4,#}" + "'", str73, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test11334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11334");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 0);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray59, (short) 0, (int) '#');
        java.lang.Short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray76);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray76, (short) 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[100, 0, 0, 1, -1]");
    }

    @Test
    public void test11335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11335");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, 3, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true, false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test11336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11336");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray11 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray11, floatArray14);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray6, (java.lang.Object) floatArray18);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray18);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(floatArray20);
    }

    @Test
    public void test11337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11337");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        boolean[] booleanArray69 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray69, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray69);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder28.append(booleanArray69, booleanArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder28.append((long) (short) 100, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append((long) '#', (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder83.append((float) 1, (float) 3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder83.append(true, false);
        java.lang.Boolean boolean95 = equalsBuilder83.build();
        equalsBuilder83.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertEquals("'" + boolean95 + "' != '" + false + "'", boolean95, false);
    }

    @Test
    public void test11338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11338");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(1.0f, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder47.append((long) 3, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder47.append(0, (int) '#');
        java.lang.Boolean boolean57 = equalsBuilder56.build();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
    }

    @Test
    public void test11339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11339");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.appendSuper(false);
        equalsBuilder36.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test11340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11340");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (byte) -1);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray11);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) (short) 0);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toObject(longArray16);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray17);
    }

    @Test
    public void test11341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11341");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, (int) (short) 100, 0);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray9);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray9, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, -1, 2, 1]");
    }

    @Test
    public void test11342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11342");
        java.lang.Long[] longArray0 = null;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) (byte) -1);
        org.junit.Assert.assertNull(longArray2);
    }

    @Test
    public void test11343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11343");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        java.util.stream.Stream<java.lang.String> strStream15 = strList9.parallelStream();
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray22);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray39);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray32, (java.lang.Object) intArray39);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32, (byte) 10);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        java.lang.String[] strArray50 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean25, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList51);
        boolean boolean54 = strList9.retainAll((java.util.Collection<java.lang.String>) strList51);
        double[] doubleArray58 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray58, (double) (byte) 100, 1.0d);
        double[] doubleArray66 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray58, doubleArray66);
        float[] floatArray72 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray75 = new float[] { (byte) -1, 1L };
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray75, (float) 10L);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray72, floatArray75);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray66, (java.lang.Object) boolean78);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray66);
        java.lang.Double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray80);
        double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray81, (double) 100);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray83);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray83, (double) 0, (double) 0L);
        double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray83, (int) (byte) 1, 10);
        boolean boolean91 = strList9.equals((java.lang.Object) 10);
        java.util.stream.Stream<java.lang.String> strStream92 = strList9.stream();
        boolean boolean94 = strList9.add("{100.0,10.0,-1.0,10.0,0.0,-1.0}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strStream92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test11344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11344");
        java.util.AbstractCollection[][] abstractCollectionArray1 = new java.util.AbstractCollection[0][];
        @SuppressWarnings("unchecked")
        java.util.AbstractCollection<java.lang.String>[][] strCollectionArray2 = (java.util.AbstractCollection<java.lang.String>[][]) abstractCollectionArray1;
        java.util.AbstractCollection<java.lang.String>[][] strCollectionArray3 = org.apache.commons.lang3.ArrayUtils.toArray(strCollectionArray2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.AbstractCollection<java.lang.String>[][] strCollectionArray5 = org.apache.commons.lang3.ArrayUtils.remove(strCollectionArray3, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(abstractCollectionArray1);
        org.junit.Assert.assertNotNull(strCollectionArray2);
        org.junit.Assert.assertNotNull(strCollectionArray3);
    }

    @Test
    public void test11345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11345");
        int[] intArray0 = null;
        int[] intArray1 = null;
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray8);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(intArray10, (int) '4');
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.add(intArray10, 1);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.addAll(intArray1, intArray15);
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray29 = new java.lang.Byte[][] { byteArray22, byteArray28 };
        java.lang.Byte[][] byteArray32 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray29, (int) '#', 10);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray39);
        java.lang.Byte[][] byteArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray29, (java.lang.Object) intArray39);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray39, 1);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) (byte) 0);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.clone(intArray43);
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.addAll(intArray15, intArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray0, intArray46);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.subarray(intArray0, 0, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[1]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, -1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(intArray52);
    }

    @Test
    public void test11346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11346");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray2);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]");
        org.junit.Assert.assertNotNull(charArray5);
    }

    @Test
    public void test11347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11347");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray10, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true, false]");
    }

    @Test
    public void test11348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11348");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray5);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray5, 'a');
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray15);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.clone(charArray15);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray17, '#', 6);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, a]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #, a]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
    }

    @Test
    public void test11349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11349");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray15 = new boolean[] { false, false, false, true, false, false };
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, false);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray15, true);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray15);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, true);
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray39, true);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray41, true);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray41);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray41);
        long[] longArray52 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.subarray(longArray52, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray52, (java.lang.Object) booleanArray63);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray63, true);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray66, true, (int) (byte) 1);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray41, booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, true, true, false, false, true]");
    }

    @Test
    public void test11350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11350");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, 2);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray22);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) (byte) 10);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray36);
        java.lang.Object[] objArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray36);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray36);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.addAll(intArray22, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray43 = org.apache.commons.lang3.ArrayUtils.add(intArray40, 10, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 1, 0, 10, -1, 1]");
    }

    @Test
    public void test11351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11351");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        double[] doubleArray56 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray56, (double) (byte) 100, 1.0d);
        double[] doubleArray64 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray56, doubleArray64);
        float[] floatArray70 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray73 = new float[] { (byte) -1, 1L };
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray73, (float) 10L);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray70, floatArray73);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray64, (java.lang.Object) boolean76);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray25);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, 1.0d);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, (double) 3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 10.0, 0.0, 1.0, 3.0]");
    }

    @Test
    public void test11352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11352");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (short) -1);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray54);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray55);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) '#');
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, 0.0d);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) (byte) 10);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, 1.0d);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray66, 0.0d);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray68, 1.0d, 1, (double) 4);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray68);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 5, (-1));
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (byte) 100, (int) 'a', (double) (-1L));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 0.0, 10.0, -1.0, -1.0, -1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 0.0, 10.0, -1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test11353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11353");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((int) (byte) 0, 6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
    }

    @Test
    public void test11354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11354");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray19);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) 0);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray24);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
    }

    @Test
    public void test11355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11355");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray21, intArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) (byte) 0);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        short[] shortArray32 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray32, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray32);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray32);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray22, (java.lang.Object) shortArray32);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray32, (short) 0);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.add(shortArray32, (short) (byte) 10);
        long[] longArray51 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.subarray(longArray51, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray51);
        java.lang.Long[] longArray56 = org.apache.commons.lang3.ArrayUtils.toObject(longArray51);
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray56);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) shortArray44, (java.lang.Object) longArray57);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.clone(shortArray44);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray12, (java.lang.Object) shortArray44);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[-1, 1, 0, 0, 100, 10]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[-1, 1, 0, 0, 100, 10]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test11356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11356");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder31.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((long) 7, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((long) (short) 1, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder79.appendSuper(false);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test11357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11357");
        short[] shortArray6 = new short[] { (byte) 1, (byte) 10, (short) 100, (byte) 10, (byte) 100, (short) 10 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) 1, 5);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) 1, 7);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray6);
        short[] shortArray19 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray23);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) 10);
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray24);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.add(shortArray28, (short) (byte) 0);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray28, (short) 100);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray6, shortArray28);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[10, 100, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test11358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11358");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((byte) 10, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append(9, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder45.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder47.appendSuper(false);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test11359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11359");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append((float) (short) 100, (float) (-1L));
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test11360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11360");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, (int) '#', (int) (short) 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray42, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder19.append((java.lang.Object) ' ', (java.lang.Object) charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray60);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray61, intArray62);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(intArray62, (int) '4');
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.add(intArray62, (int) (short) 100);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray62);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray62);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray62, (int) (short) 1);
        int[] intArray72 = new int[] {};
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray72, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder53.append(intArray62, intArray73);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray73);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.subarray(intArray73, 100, 100);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray79);
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.add(intArray79, (int) '4');
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray82);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.clone(intArray83);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray84);
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray85, (int) '#');
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray85, (int) (byte) 0);
        java.lang.Integer[] intArray90 = org.apache.commons.lang3.ArrayUtils.toObject(intArray89);
        int[] intArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray90, (int) (short) 100);
        int[] intArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray90, 100);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[52]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[52]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[52]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[52]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[52]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[52]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[52]");
    }

    @Test
    public void test11361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11361");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder0.append(true, true);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.remove(floatArray31, (int) (short) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray25, floatArray34);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.add(floatArray25, (float) (byte) 10);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray25, 0.0f);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray39, 0.0f, 6);
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray39);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray39, (-1.0f), (int) '#');
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(floatArray39, (float) 6);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray39, (float) 0L);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.add(floatArray39, (float) 2);
        float[] floatArray58 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray58);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray58, 0.0f);
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray58);
        long[] longArray64 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray62, (java.lang.Object) longArray64);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray62, (float) (-1L));
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray68, (float) (byte) 1, (int) (short) 10);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder24.append(floatArray39, floatArray68);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[10.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[2.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder73);
    }

    @Test
    public void test11362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11362");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        long[] longArray35 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.subarray(longArray35, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray35);
        java.lang.Long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toObject(longArray35);
        long[] longArray42 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(longArray42, 0L);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray42, (long) (byte) 0);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray42, (long) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder28.append(longArray35, longArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append(100L, (long) (short) 1);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = new java.lang.Short[] {};
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray63);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray63, (short) 1);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray59, shortArray66);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) 10);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray59);
        java.lang.Short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray70);
        java.lang.Short[] shortArray72 = new java.lang.Short[] {};
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72, (short) 1);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.clone(shortArray75);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray76, (short) (byte) -1, (int) (short) 100);
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray70, shortArray76);
        short[] shortArray81 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder53.append(shortArray80, shortArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder53.append((int) (byte) -1, (int) (short) 0);
        java.lang.String[][] strArray86 = new java.lang.String[][] {};
        java.lang.String[][] strArray87 = org.apache.commons.lang3.ArrayUtils.clone(strArray86);
        java.lang.Float[] floatArray88 = new java.lang.Float[] {};
        java.lang.Float[] floatArray89 = new java.lang.Float[] {};
        java.lang.Float[][] floatArray90 = new java.lang.Float[][] { floatArray88, floatArray89 };
        java.lang.Float[][] floatArray91 = org.apache.commons.lang3.ArrayUtils.toArray(floatArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder53.append((java.lang.Object[]) strArray86, (java.lang.Object[]) floatArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append(10L, (long) 5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test11363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11363");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, (float) 'a');
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean[] booleanArray19 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 0, 0);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray36 = new char[] { '#', 'a', 'a' };
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray32, charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray32, ' ');
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray49 = new char[] { '#', 'a', 'a' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray49);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray49, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder26.append((java.lang.Object) ' ', (java.lang.Object) charArray49);
        java.lang.Long[] longArray60 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray60);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray62);
        char[] charArray67 = new char[] { 'a', '#', ' ' };
        char[][] charArray68 = new char[][] { charArray67 };
        char[][] charArray69 = org.apache.commons.lang3.ArrayUtils.toArray(charArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder54.append((java.lang.Object[]) longArray62, (java.lang.Object[]) charArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder54.append(true, false);
        long[] longArray78 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray78, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray80);
        long[] longArray83 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder54.append(longArray80, longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) (byte) -1, (double) 1L);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray25, (java.lang.Object) equalsBuilder87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray13, (java.lang.Object[]) booleanArray25);
        boolean[] booleanArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray90), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[true, false, true, true, true]");
    }

    @Test
    public void test11364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11364");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray1, (long) '#');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.subarray(longArray1, 4, (int) (byte) 1);
        long[] longArray20 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray20);
        java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.toObject(longArray20);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray22, (long) (short) 1);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray22, (long) '4');
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray26);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[-1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[-1, -1]");
    }

    @Test
    public void test11365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11365");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, 'a', (int) (byte) 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, 'a', (int) (byte) 1);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray9, '#');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.add(charArray9, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, a, a,  ]");
    }

    @Test
    public void test11366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11366");
        java.lang.Object obj0 = null;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray1);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray1, '#');
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray15 = new char[] { '#', 'a', 'a' };
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.addAll(charArray11, charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray11, ' ');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.addAll(charArray1, charArray11);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray1, 0, 0);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.subarray(charArray22, (int) '#', (int) (short) 100);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray22, '4', 2);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray22, ' ');
        java.lang.String[] strArray32 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray34 = org.apache.commons.lang3.ArrayUtils.add(strArray32, "{true,true}");
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray34);
        boolean boolean36 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) charArray31, strArray34);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray31);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ ]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test11367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11367");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (short) 100, 7);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray15, 2, (int) (short) 0);
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray22);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray23, (int) (short) 10, 3);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray15, true);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[]");
    }

    @Test
    public void test11368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11368");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[] shortArray7 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[][] shortArray20 = new java.lang.Short[][] { shortArray3, shortArray7, shortArray11, shortArray15, shortArray19 };
        java.lang.Short[][] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, (int) (short) -1, 3);
        java.lang.Short[] shortArray27 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[] shortArray35 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[] shortArray39 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[] shortArray43 = new java.lang.Short[] { (short) 100, (short) 10, (short) 1 };
        java.lang.Short[][] shortArray44 = new java.lang.Short[][] { shortArray27, shortArray31, shortArray35, shortArray39, shortArray43 };
        java.lang.Short[][] shortArray47 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray44, (int) (short) -1, 3);
        java.lang.Short[][] shortArray48 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray20, shortArray44);
        java.lang.Short[][] shortArray49 = org.apache.commons.lang3.ArrayUtils.toArray(shortArray48);
        java.lang.String[] strArray54 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray63 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray63);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.remove(floatArray63, (int) (short) 1);
        float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray57, floatArray66);
        boolean boolean68 = strList55.equals((java.lang.Object) floatArray67);
        strList55.clear();
        java.lang.String[] strArray71 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.lang.String[] strArray76 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.stream.Stream<java.lang.String> strStream79 = strList77.parallelStream();
        java.lang.String[] strArray82 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.stream.Stream<java.lang.String> strStream85 = strList83.parallelStream();
        boolean boolean86 = strList77.addAll((java.util.Collection<java.lang.String>) strList83);
        java.lang.Object obj87 = null;
        boolean boolean88 = strList83.equals(obj87);
        int int89 = strList83.size();
        boolean boolean90 = strList72.removeAll((java.util.Collection<java.lang.String>) strList83);
        java.util.Iterator<java.lang.String> strItor91 = strList83.iterator();
        boolean boolean92 = strList55.addAll((java.util.Collection<java.lang.String>) strList83);
        boolean boolean93 = strList55.isEmpty();
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray49, (java.lang.Object) boolean93, 2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test11369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11369");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (-1));
        java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) longArray5);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) '#');
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{0,1,100,100,0}" + "'", str10, "{0,1,100,100,0}");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[0, 1, 100, 100, 0]");
    }

    @Test
    public void test11370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11370");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray4, ' ');
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, 'a');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.add(charArray6, 'a');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.subarray(charArray12, 1, (int) (byte) 0);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray12, 'a', (int) (byte) 1);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.clone(charArray12);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[ ]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ ]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , a]");
    }

    @Test
    public void test11371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11371");
        int[] intArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 100, 8);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test11372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11372");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray9);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray12);
        java.lang.Byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray13);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray14);
    }

    @Test
    public void test11373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11373");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        java.lang.Long[] longArray15 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray15);
        float[] floatArray22 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray22, 0.0f);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        long[] longArray28 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray26, (java.lang.Object) longArray28);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray16);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) '#');
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.subarray(longArray8, 10, (int) (byte) 1);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray8, (long) (short) 0);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[-1, 35]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[-1]");
    }

    @Test
    public void test11374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11374");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray6, true);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray27, (int) (short) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, true, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false, false]");
    }

    @Test
    public void test11375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11375");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) -1);
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray7, (short) 0);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray7);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
    }

    @Test
    public void test11376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11376");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        java.lang.Double[] doubleArray18 = new java.lang.Double[] { 100.0d, (-1.0d), 100.0d, 100.0d, (-1.0d) };
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray18);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray18);
        java.lang.Double[] doubleArray27 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 100L, 2, (double) (short) -1);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 100.0f, (int) (short) 100);
        double[] doubleArray39 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) (byte) 100, 1.0d);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray47);
        float[] floatArray53 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray56 = new float[] { (byte) -1, 1L };
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 10L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray56);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray47, (java.lang.Object) boolean59);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, (int) (short) 0, 1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray47);
        double[] doubleArray68 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray68, (double) (byte) 100, 1.0d);
        double[] doubleArray76 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray68, doubleArray76);
        float[] floatArray82 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray85 = new float[] { (byte) -1, 1L };
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray85, (float) 10L);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray82, floatArray85);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray76, (java.lang.Object) boolean88);
        double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray76);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray64, doubleArray76);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray64);
        double[] doubleArray94 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray64, (int) (short) 0);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray94);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) doubleArray20, (java.lang.Object) doubleArray94);
        java.lang.Double[] doubleArray97 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20);
        double[] doubleArray98 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[52.0, 10.0, -1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test11377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11377");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (byte) 0, (-1.0d));
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test11378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11378");
        java.util.stream.Stream[] streamArray1 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray2 = (java.util.stream.Stream<java.lang.String>[]) streamArray1;
        java.util.stream.Stream<java.lang.String>[] strStreamArray3 = org.apache.commons.lang3.ArrayUtils.clone((java.util.stream.Stream<java.lang.String>[]) streamArray1);
        java.util.stream.Stream<java.lang.String>[] strStreamArray4 = org.apache.commons.lang3.ArrayUtils.clone(strStreamArray3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray15 = new char[] { '#', 'a', 'a' };
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.addAll(charArray11, charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray11, ' ');
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder5.append((java.lang.Object) ' ', (java.lang.Object) charArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder5.append((int) (short) 1, 10);
        boolean boolean37 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder5.appendSuper(false);
        equalsBuilder5.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder5.append('#', ' ');
        java.lang.Short[] shortArray44 = new java.lang.Short[] {};
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44, (short) 1);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.clone(shortArray47);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray48, (short) (byte) -1, (int) (short) 100);
        java.lang.Short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray52);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.clone(shortArray54);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray54, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder43.append(shortArray48, shortArray54);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strStreamArray4, (java.lang.Object) equalsBuilder43);
        java.lang.Byte[] byteArray65 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray65);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray73);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray73);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray66, (java.lang.Object) intArray73);
        int[] intArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray73);
        java.lang.String[] strArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray80 = org.apache.commons.lang3.ArrayUtils.add(strArray78, "{true,true}");
        java.lang.String[] strArray83 = org.apache.commons.lang3.ArrayUtils.subarray(strArray78, 0, 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder43.append((java.lang.Object[]) intArray73, (java.lang.Object[]) strArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder43.append(' ', '4');
        org.junit.Assert.assertNotNull(streamArray1);
        org.junit.Assert.assertNotNull(strStreamArray2);
        org.junit.Assert.assertNotNull(strStreamArray3);
        org.junit.Assert.assertNotNull(strStreamArray4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test11379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11379");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray22 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray22, (int) (byte) 0, 0);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray22, true);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray16, booleanArray22);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray6, (java.lang.Object) booleanArray16);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31, false);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, true, true, false]");
    }

    @Test
    public void test11380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11380");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray29 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.parallelStream();
        java.lang.String[] strArray40 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList35.addAll((java.util.Collection<java.lang.String>) strList41);
        java.lang.Object obj45 = null;
        boolean boolean46 = strList41.equals(obj45);
        int int47 = strList41.size();
        boolean boolean48 = strList30.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor49 = strList41.iterator();
        boolean boolean50 = strList13.retainAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor51 = strList41.iterator();
        java.util.Iterator<java.lang.String> strItor52 = strList41.iterator();
        java.lang.String[] strArray55 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.parallelStream();
        java.util.Iterator<java.lang.String> strItor59 = strList56.iterator();
        boolean boolean60 = strList41.retainAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.Object[] objArray61 = strList56.toArray();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[4, hi!]");
    }

    @Test
    public void test11381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11381");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '4');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '#');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray6, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray6, '4');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray13, '4');
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray13);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray17, ' ');
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, '#');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray19, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 'a');
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray12, charArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray19);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray19, '#');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ ]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ ]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , a]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ ]");
    }

    @Test
    public void test11382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11382");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (byte) 10);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.subarray(intArray16, 9, 6);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray16);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11383");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray40);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray40);
        long[] longArray58 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray58);
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray58);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.subarray(longArray60, (int) (short) 0, (int) 'a');
        java.lang.String[] strArray68 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray77 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray77);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.remove(floatArray77, (int) (short) 1);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray71, floatArray80);
        boolean boolean82 = strList69.equals((java.lang.Object) floatArray81);
        int int83 = strList69.size();
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray84, (int) (byte) 1);
        boolean boolean87 = strList69.contains((java.lang.Object) int86);
        java.lang.Object[] objArray88 = strList69.toArray();
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray40, (java.lang.Object) longArray60, (java.util.Collection<java.lang.String>) strList69);
        java.lang.Long[] longArray90 = org.apache.commons.lang3.ArrayUtils.toObject(longArray60);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray92 = org.apache.commons.lang3.ArrayUtils.remove(longArray60, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[-1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[-1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[-1]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 4 + "'", int83 == 4);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(longArray90);
    }

    @Test
    public void test11384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11384");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.clone(charArray0);
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12, true);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray17);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray18, true, (int) '4');
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray18);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray29, (byte) 1);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray31, (byte) 100);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray31, (byte) 1);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray42, (byte) 1);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray44, (int) (byte) 0, (int) (byte) 1);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray31, byteArray47);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray31, (byte) 10);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.add(byteArray31, (byte) -1);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.add(byteArray31, (byte) 0);
        byte[] byteArray55 = new byte[] {};
        byte[] byteArray60 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray55, byteArray60);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray55, (byte) -1);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray55, (byte) -1);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.add(byteArray65, (byte) 100);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray54, byteArray65);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray54, (byte) 10);
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray18, (java.lang.Object) byteArray54, false);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.stream.Stream<java.lang.String> strStream80 = strList78.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream81 = strList78.stream();
        java.util.Iterator<java.lang.String> strItor82 = strList78.iterator();
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray5, (java.lang.Object) booleanArray18, (java.util.Collection<java.lang.String>) strList78);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[100]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strStream80);
        org.junit.Assert.assertNotNull(strStream81);
        org.junit.Assert.assertNotNull(strItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test11385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11385");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((int) (short) 0, (int) (byte) 100);
        java.lang.Boolean boolean54 = equalsBuilder50.build();
        short[] shortArray61 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray61, (short) (byte) 0, (int) (short) -1);
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray61);
        short[] shortArray71 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray71, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray75 = new java.lang.Short[] {};
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75, (short) 1);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray71, shortArray78);
        java.lang.Short[] shortArray80 = new java.lang.Short[] {};
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) 1);
        java.lang.Short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray83);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray71, shortArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder50.append(shortArray61, shortArray85);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.add(shortArray61, (short) 1);
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray88);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.contains(shortArray89, (short) 100);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[10, 100, -1, 0, 10, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[10, 100, -1, 0, 10, 100, 1]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test11386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11386");
        boolean[] booleanArray5 = new boolean[] { false, true, false, false, false };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14);
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray8, (java.lang.Object) byteArray16);
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 100);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 1, 100, 1, -1]");
    }

    @Test
    public void test11387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11387");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(1.0f, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder47.append((long) 3, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder47.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((float) (byte) 100, (float) 6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
    }

    @Test
    public void test11388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11388");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        equalsBuilder28.reset();
        java.lang.Character[] charArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray51);
        char[] charArray58 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray62 = new char[] { '#', 'a', 'a' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.addAll(charArray58, charArray62);
        java.lang.String str64 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray58);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray51, charArray58);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray75 = new char[] { '#', 'a', 'a' };
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.addAll(charArray71, charArray75);
        java.lang.String str77 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray71);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray71);
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray58, (java.lang.Object) charArray78, false);
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, '4');
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray83);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder28.append(charArray78, charArray83);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.add(charArray83, (int) (byte) 0, 'a');
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray83, '#');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{4,#,a,4,#}" + "'", str64, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{4,#,a,4,#}" + "'", str77, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[]");
    }

    @Test
    public void test11389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11389");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(true, true);
        long[] longArray38 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(longArray38, 0L);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 5, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder31.append(longArray38, longArray45);
        java.lang.Byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        float[] floatArray56 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, 0.0f);
        java.lang.Float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        java.lang.Object[] objArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray60);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder49.append((java.lang.Object[]) byteArray50, (java.lang.Object[]) floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder49.append((long) (short) -1, (long) 9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((double) 6, (double) 100L);
        equalsBuilder66.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test11390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11390");
        boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray0, true);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test11391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11391");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray70 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray71 = new java.lang.Byte[][] { byteArray64, byteArray70 };
        java.lang.Byte[][] byteArray74 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray71, (int) '#', 10);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81);
        java.lang.Byte[][] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray71, (java.lang.Object) intArray81);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81, 1);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.remove(intArray85, (int) (byte) 1);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray87);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.clone(intArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray58, intArray88);
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.subarray(intArray88, (int) (byte) 1, 5);
        int[] intArray95 = org.apache.commons.lang3.ArrayUtils.add(intArray93, 6);
        int int97 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray95, 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 10, -1, 1, 6]");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
    }

    @Test
    public void test11392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11392");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 'a');
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) 10, 10.0d);
        double[] doubleArray11 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 100, 1.0d);
        double[] doubleArray19 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray19);
        float[] floatArray25 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray28 = new float[] { (byte) -1, 1L };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray28, (float) 10L);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray19, (java.lang.Object) boolean31);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray19, (int) (short) 0, 1);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray35, (double) (byte) -1);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray37, (int) (byte) 100, 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray37, 0, (int) (short) 10);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray37);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray44);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 7, (int) '4', (double) 100);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 5, 8);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, 100.0d);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, 0.0d, 100);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test11393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11393");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray5, (java.lang.Object) (byte) 1, (int) (byte) -1);
        long[] longArray16 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.subarray(longArray16, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray16);
        java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.toObject(longArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray16, (long) (-1));
        java.lang.String[] strArray25 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.lang.String[] strArray36 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.parallelStream();
        boolean boolean40 = strList31.addAll((java.util.Collection<java.lang.String>) strList37);
        java.lang.Object obj41 = null;
        boolean boolean42 = strList37.equals(obj41);
        int int43 = strList37.size();
        boolean boolean44 = strList26.removeAll((java.util.Collection<java.lang.String>) strList37);
        java.lang.String[] strArray47 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.stream.Stream<java.lang.String> strStream50 = strList48.parallelStream();
        boolean boolean51 = strList37.addAll((java.util.Collection<java.lang.String>) strList48);
        java.lang.String[] strArray53 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.lang.String[] strArray58 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.parallelStream();
        java.lang.String[] strArray64 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.stream.Stream<java.lang.String> strStream67 = strList65.parallelStream();
        boolean boolean68 = strList59.addAll((java.util.Collection<java.lang.String>) strList65);
        java.lang.Object obj69 = null;
        boolean boolean70 = strList65.equals(obj69);
        int int71 = strList65.size();
        boolean boolean72 = strList54.removeAll((java.util.Collection<java.lang.String>) strList65);
        java.util.Iterator<java.lang.String> strItor73 = strList65.iterator();
        boolean boolean74 = strList37.retainAll((java.util.Collection<java.lang.String>) strList65);
        java.util.Spliterator<java.lang.String> strSpliterator75 = strList37.spliterator();
        boolean boolean77 = strList37.add("{100,0,1,-1}");
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray5, (java.lang.Object) (-1), (java.util.Collection<java.lang.String>) strList37);
        java.lang.Byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray79);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, 1, 100, 1, -1]");
    }

    @Test
    public void test11394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11394");
        java.util.AbstractCollection[][][] abstractCollectionArray1 = new java.util.AbstractCollection[0][][];
        @SuppressWarnings("unchecked")
        java.util.AbstractCollection<java.lang.String>[][][] strCollectionArray2 = (java.util.AbstractCollection<java.lang.String>[][][]) abstractCollectionArray1;
        java.util.AbstractCollection<java.lang.String>[][][] strCollectionArray3 = org.apache.commons.lang3.ArrayUtils.clone(strCollectionArray2);
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray18 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray23 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray24 = new java.lang.Double[][] { doubleArray8, doubleArray13, doubleArray18, doubleArray23 };
        java.lang.Double[][] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray25);
        java.util.Map<java.lang.Object, java.lang.Object> objMap27 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray25);
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31, true);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray25, (java.lang.Object) booleanArray31);
        java.util.Collection<java.lang.String>[][][] strCollectionArray36 = org.apache.commons.lang3.ArrayUtils.removeElement((java.util.Collection<java.lang.String>[][][]) strCollectionArray2, (java.lang.Object) boolean35);
        java.lang.Iterable<java.lang.String>[][][] strIterableArray37 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Iterable<java.lang.String>[][][]) strCollectionArray2);
        java.util.AbstractCollection<java.lang.String>[][][] strCollectionArray38 = org.apache.commons.lang3.ArrayUtils.toArray(strCollectionArray2);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strCollectionArray2);
        org.junit.Assert.assertNotNull(abstractCollectionArray1);
        org.junit.Assert.assertNotNull(strCollectionArray2);
        org.junit.Assert.assertNotNull(strCollectionArray3);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objMap27);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strCollectionArray36);
        org.junit.Assert.assertNotNull(strIterableArray37);
        org.junit.Assert.assertNotNull(strCollectionArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test11395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11395");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 0);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray72, (short) (byte) -1);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray72, (int) '4', (int) '#');
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray77, (int) '4', (int) (byte) 100);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray80, (short) 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[100, 0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test11396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11396");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1);
        java.lang.Double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray1);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1, (double) 2);
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 100.0d, (-1.0d), 100.0d, 100.0d, (-1.0d) };
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray11);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray13);
        double[] doubleArray18 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, 1.0d);
        double[] doubleArray26 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray26);
        float[] floatArray32 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray35 = new float[] { (byte) -1, 1L };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, (float) 10L);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray32, floatArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray26, (java.lang.Object) boolean38);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, (int) (short) 0, 1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray42, (double) (byte) -1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray44, (int) (byte) 100, 1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, (int) (byte) -1, (int) (short) 100);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray50, (double) 'a', (int) (short) 100);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray50, (double) (byte) 100, (double) (-1.0f));
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray13, doubleArray50);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray13, (double) (short) 100);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray5, doubleArray13);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, (int) (byte) 0, 0);
        double[] doubleArray67 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray67, (double) (byte) 100, 1.0d);
        double[] doubleArray75 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray67, doubleArray75);
        float[] floatArray81 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray84 = new float[] { (byte) -1, 1L };
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray84, (float) 10L);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray81, floatArray84);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray75, (java.lang.Object) boolean87);
        double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray75, (int) (short) 0, 1);
        double[] doubleArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray75);
        java.lang.Double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray92);
        double[] doubleArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray93);
        java.lang.Double[] doubleArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray93);
        double[] doubleArray97 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray95, (double) 0L);
        double[] doubleArray98 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray63, doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test11397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11397");
        boolean[] booleanArray0 = new boolean[] {};
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.stream.Stream<java.lang.String> strStream16 = strList14.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.stream.Stream<java.lang.String> strStream22 = strList20.parallelStream();
        boolean boolean23 = strList14.addAll((java.util.Collection<java.lang.String>) strList20);
        java.util.stream.Stream<java.lang.String> strStream24 = strList14.parallelStream();
        boolean boolean26 = strList14.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray31 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray40 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.remove(floatArray40, (int) (short) 1);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray43);
        boolean boolean45 = strList32.equals((java.lang.Object) floatArray44);
        int int46 = strList32.size();
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray47, (int) (byte) 1);
        boolean boolean50 = strList32.contains((java.lang.Object) int49);
        boolean boolean51 = strList14.addAll((java.util.Collection<java.lang.String>) strList32);
        boolean boolean52 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int4, (java.lang.Object) charArray5, (java.util.Collection<java.lang.String>) strList14);
        java.lang.Object[] objArray53 = strList14.toArray();
        java.lang.Object[] objArray54 = strList14.toArray();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strStream16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[4, hi!, 4, hi!, {{#,#,#, ,#}}, {}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[4, hi!, 4, hi!, {{#,#,#, ,#}}, {}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[4, hi!, 4, hi!, {{#,#,#, ,#}}, {}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[4, hi!, 4, hi!, {{#,#,#, ,#}}, {}, {}, 1, {4,#,a,4,#}]");
    }

    @Test
    public void test11398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11398");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.subarray(charArray2, 4, (int) '#');
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray2);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
    }

    @Test
    public void test11399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11399");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) 1, (int) '#', (double) 0.0f);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, (int) (short) 0, (int) '#');
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray39, (double) 9);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray41, (double) 4, (double) 4);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray41, 0.0d, (double) 100L);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray41, (double) (-1.0f));
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray41, (double) (-1.0f));
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray41, (double) 11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test11400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11400");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray9);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray9);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) charArray5, (java.lang.Object) charArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray12, '#', (int) '#');
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, '4');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray22);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray20, (java.lang.Object) charArray24);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, ' ');
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray12, charArray30);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray30, '4', 0);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test11401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11401");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.remove(intArray26, (int) (byte) 1);
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.toObject(intArray28);
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray29);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray29);
        java.lang.Integer[] intArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray29);
        java.lang.Short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray33);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33);
        java.lang.Short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray33);
        java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray33);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray32, (java.lang.Object[]) shortArray37);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11402");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        strList3.clear();
        java.lang.String[] strArray19 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.stream.Stream<java.lang.String> strStream22 = strList20.parallelStream();
        java.util.Iterator<java.lang.String> strItor23 = strList20.iterator();
        java.lang.String[] strArray28 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray37 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.remove(floatArray37, (int) (short) 1);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray31, floatArray40);
        boolean boolean42 = strList29.equals((java.lang.Object) floatArray41);
        int int43 = strList29.size();
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray44, (int) (byte) 1);
        boolean boolean47 = strList29.contains((java.lang.Object) int46);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray54, (byte) 1);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(byteArray56, (byte) 100);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(byteArray56, (byte) 1);
        java.lang.Byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray56);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray61, (byte) 100);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.add(byteArray63, (byte) 10);
        boolean boolean66 = strList29.contains((java.lang.Object) byteArray63);
        boolean boolean67 = strList20.addAll((java.util.Collection<java.lang.String>) strList29);
        boolean boolean68 = strList3.retainAll((java.util.Collection<java.lang.String>) strList29);
        boolean boolean70 = strList29.add("{-1,0,0,1}");
        boolean boolean72 = strList29.add("{-1.0,100.0,100.0,10.0,35.0}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test11403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11403");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 1L, 0L };
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 0L);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 100L);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 0L);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, (long) (short) 100, 0);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray11);
        java.lang.String str16 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) boolean15);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true" + "'", str16, "true");
    }

    @Test
    public void test11404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11404");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1);
        java.lang.Double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray1);
        java.util.Map<java.lang.Object, java.lang.Object> objMap4 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray1);
        java.util.Map[] mapArray6 = new java.util.Map[1];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.Object, java.lang.Object>[] objMapArray7 = (java.util.Map<java.lang.Object, java.lang.Object>[]) mapArray6;
        objMapArray7[0] = objMap4;
        java.util.Map[][] mapArray11 = new java.util.Map[1][];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.Object, java.lang.Object>[][] objMapArray12 = (java.util.Map<java.lang.Object, java.lang.Object>[][]) mapArray11;
        objMapArray12[0] = objMapArray7;
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray21);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray21, true);
        java.util.Map<java.lang.Object, java.lang.Object>[][] objMapArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(objMapArray12, (java.lang.Object) booleanArray21);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray21, true);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(objMap4);
        org.junit.Assert.assertNotNull(mapArray6);
        org.junit.Assert.assertNotNull(objMapArray7);
        org.junit.Assert.assertNotNull(mapArray11);
        org.junit.Assert.assertNotNull(objMapArray12);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(objMapArray25);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, true, true, false]");
    }

    @Test
    public void test11405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11405");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray8 = new boolean[] {};
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray6);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray6, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, false, false, false]");
    }

    @Test
    public void test11406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11406");
        double[] doubleArray0 = null;
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, 0, (double) 0L);
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0]");
    }

    @Test
    public void test11407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11407");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        java.util.stream.Stream<java.lang.String> strStream28 = strList9.parallelStream();
        java.lang.Object[] objArray29 = strList9.toArray();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[4, hi!]");
    }

    @Test
    public void test11408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11408");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        boolean boolean38 = equalsBuilder34.isEquals();
        equalsBuilder34.reset();
        java.lang.String str40 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) equalsBuilder34);
        boolean boolean41 = equalsBuilder34.isEquals();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test11409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11409");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        boolean boolean31 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) charArray29, false);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray29, '4');
        java.lang.String[] strArray38 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray47 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray47);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.remove(floatArray47, (int) (short) 1);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray41, floatArray50);
        boolean boolean52 = strList39.equals((java.lang.Object) floatArray51);
        int int53 = strList39.size();
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray54, (int) (byte) 1);
        boolean boolean57 = strList39.contains((java.lang.Object) int56);
        char[] charArray63 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray67 = new char[] { '#', 'a', 'a' };
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.addAll(charArray63, charArray67);
        java.lang.String str69 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray63);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray79 = new char[] { '#', 'a', 'a' };
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.addAll(charArray75, charArray79);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray63, charArray79);
        boolean boolean82 = strList39.equals((java.lang.Object) charArray79);
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.clone(charArray79);
        char[] charArray85 = org.apache.commons.lang3.ArrayUtils.remove(charArray83, 0);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray85);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray85);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.subarray(charArray85, 0, (int) (byte) -1);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{4,#,a,4,#}" + "'", str69, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a, a]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "4#a4#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "4#a4#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[4, #, a, 4, #, a, a]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[]");
    }

    @Test
    public void test11410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11410");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray13 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, (long) 0);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray13);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, (long) 100);
        char[] charArray28 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray32 = new char[] { '#', 'a', 'a' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray32);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.subarray(charArray32, (int) 'a', (int) (short) 10);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray32, '4');
        char[] charArray44 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray48 = new char[] { '#', 'a', 'a' };
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.addAll(charArray44, charArray48);
        java.lang.String str50 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray44);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray44);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.addAll(charArray32, charArray51);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.clone(charArray32);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.remove(charArray32, (int) (short) 1);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray20, (java.lang.Object) charArray55);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray55, '#', (int) (short) 10);
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray55, 'a');
        java.lang.Character[] charArray62 = org.apache.commons.lang3.ArrayUtils.toObject(charArray61);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray62, '4');
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, -1]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{4,#,a,4,#}" + "'", str50, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#]");
    }

    @Test
    public void test11411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11411");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) 1.0f);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26);
        java.lang.Double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        java.lang.Object[] objArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray33, (double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test11412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11412");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 0);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray14, 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray24, ' ');
        char[] charArray37 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray41 = new char[] { '#', 'a', 'a' };
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.addAll(charArray37, charArray41);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray41, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder18.append((java.lang.Object) ' ', (java.lang.Object) charArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder18.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((long) 4, (long) (short) 1);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray56, byteArray61);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray56, (byte) -1);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray56, (byte) -1);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray56, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray56);
        java.lang.Byte[] byteArray76 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray76, (byte) 1);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.contains(byteArray78, (byte) 100);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.contains(byteArray78, (byte) 1);
        java.lang.Byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray78);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray83, (byte) 100);
        byte[] byteArray87 = org.apache.commons.lang3.ArrayUtils.add(byteArray85, (byte) 10);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder52.append(byteArray56, byteArray85);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray85);
        int int93 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray85, (byte) -1, 5);
        byte[] byteArray94 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray17, byteArray85);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray94);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 4 + "'", int93 == 4);
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[-1, 0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test11413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11413");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(charArray13, ' ');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray13, 'a');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.subarray(charArray13, 8, (int) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray20, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test11414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11414");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray15);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray22, (int) (short) 100, 0);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray15, intArray22);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.clone(intArray15);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray27, 11);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray27, (int) ' ');
        int[] intArray32 = new int[] {};
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray32, intArray33);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.clone(intArray33);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray33, (int) 'a', 100);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.addAll(intArray31, intArray33);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
    }

    @Test
    public void test11415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11415");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) '4');
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.add(intArray28, (int) (short) 10);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray37);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray38, intArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray39, (int) (byte) 0);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray39, (int) 'a');
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray39);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray28, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray49 = org.apache.commons.lang3.ArrayUtils.add(intArray28, (int) '#', 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, 10, -1, 1, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test11416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11416");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 0);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray72);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[100, 0, 0, 1, -1, 0]");
    }

    @Test
    public void test11417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11417");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) (byte) 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray5, (short) 10);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.clone(shortArray5);
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray21);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray22);
    }

    @Test
    public void test11418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11418");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        strList21.clear();
        int int42 = strList21.size();
        strList21.clear();
        java.lang.String[] strArray46 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.stream.Stream<java.lang.String> strStream49 = strList47.parallelStream();
        java.lang.String[] strArray52 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.stream.Stream<java.lang.String> strStream55 = strList53.parallelStream();
        boolean boolean56 = strList47.addAll((java.util.Collection<java.lang.String>) strList53);
        boolean boolean57 = strList21.containsAll((java.util.Collection<java.lang.String>) strList53);
        java.util.Iterator<java.lang.String> strItor58 = strList21.iterator();
        int int59 = strList21.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test11419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11419");
        byte[] byteArray0 = null;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 1, (int) ' ');
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test11420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11420");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) -1);
        java.lang.Byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray15);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray15, true);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray15);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray11, (java.lang.Object[]) booleanArray15);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) 10);
        byte[] byteArray23 = null;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray23);
        java.lang.Byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray23);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(byteArray25);
    }

    @Test
    public void test11421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11421");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray36, (-1L));
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray36);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray47);
    }

    @Test
    public void test11422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11422");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, 2);
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray31);
        java.lang.Object[] objArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray31);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray31);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray22, intArray34);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray34);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test11423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11423");
        java.lang.Long[] longArray3 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray7 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray11 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[][] longArray12 = new java.lang.Long[][] { longArray3, longArray7, longArray11 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder13.append((int) (byte) 0, (int) (byte) 10);
        java.lang.Long[][] longArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray12, (java.lang.Object) equalsBuilder19);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) longArray20);
        java.lang.String[] strArray24 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.stream.Stream<java.lang.String> strStream27 = strList25.parallelStream();
        int int28 = strList25.size();
        java.lang.String[] strArray31 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.parallelStream();
        java.lang.String[] strArray37 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.parallelStream();
        boolean boolean41 = strList32.addAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.Object obj42 = null;
        boolean boolean43 = strList38.equals(obj42);
        java.lang.Object[] objArray44 = strList38.toArray();
        java.util.AbstractCollection[] abstractCollectionArray46 = new java.util.AbstractCollection[2];
        @SuppressWarnings("unchecked")
        java.util.AbstractCollection<java.lang.String>[] strCollectionArray47 = (java.util.AbstractCollection<java.lang.String>[]) abstractCollectionArray46;
        strCollectionArray47[0] = strList25;
        strCollectionArray47[1] = strList38;
        java.util.AbstractCollection<java.lang.String>[] strCollectionArray54 = org.apache.commons.lang3.ArrayUtils.subarray(strCollectionArray47, (-1), (int) '#');
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strCollectionArray54, (java.lang.Object) doubleArray56);
        java.lang.Long[][] longArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, (java.lang.Object) int57);
        java.lang.Long[] longArray60 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray60);
        java.lang.Long[] longArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        java.lang.Object[] objArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray63);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray63, (long) '4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Long[][] longArray67 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (int) (byte) 100, longArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strStream27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[4, hi!]");
        org.junit.Assert.assertNotNull(abstractCollectionArray46);
        org.junit.Assert.assertNotNull(strCollectionArray47);
        org.junit.Assert.assertNotNull(strCollectionArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[]");
    }

    @Test
    public void test11424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11424");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.String str5 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray0);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray16 = new char[] { '#', 'a', 'a' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.addAll(charArray12, charArray16);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray16, ' ', 2);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray16, 0, (int) (byte) 10);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.add(charArray23, ' ');
        java.lang.Character[] charArray26 = org.apache.commons.lang3.ArrayUtils.toObject(charArray23);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray0, (java.lang.Object) charArray26);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray28, ' ', (int) (byte) 100);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray28);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray28, 'a');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray36 = org.apache.commons.lang3.ArrayUtils.remove(charArray28, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a,  ]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
    }

    @Test
    public void test11425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11425");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray19, 0.0f);
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        long[] longArray25 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray23, (java.lang.Object) longArray25);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.addAll(longArray13, longArray25);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.subarray(longArray28, (int) (short) 10, (int) 'a');
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray28, (long) 3, (int) (short) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray4, longArray28);
        float[] floatArray41 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray41);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.clone(floatArray41);
        long[] longArray46 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray46, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray46);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        long[] longArray56 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray56, 1L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray51, longArray58);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray41, (java.lang.Object) longArray51);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray51, (long) (byte) 10, 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray28, longArray51);
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.add(longArray28, (int) (byte) 0, (long) (byte) 100);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[-1]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[100, 0, 1, 100, 100, 0, -1]");
    }

    @Test
    public void test11426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11426");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray32);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (short) 1, (int) (short) 100);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray32);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray32);
        java.lang.Double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray32);
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray26, (java.lang.Object[]) doubleArray42);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray42, (double) 0L);
        float[] floatArray52 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, 0.0f);
        java.lang.Float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray52);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray42, (java.lang.Object[]) floatArray56);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray56, (float) (short) 100);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray59, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray59);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test11427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11427");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, (int) (short) 100, 0);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray10);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray10, 10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 2, -1, -1]");
    }

    @Test
    public void test11428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11428");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        double[] doubleArray55 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray55, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray55);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (short) 1, (int) (short) 100);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 10, (double) (byte) 100);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (short) 0);
        java.lang.Double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray68, (double) 4);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray70, (double) 1.0f, (double) 100.0f);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray70, (int) (short) 0, (int) (short) 10);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray70);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test11429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11429");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Boolean boolean64 = equalsBuilder63.build();
        equalsBuilder63.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder63.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((-1), 0);
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray75);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.subarray(intArray76, 0, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray79);
        int[] intArray81 = null;
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.add(intArray81, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder70.append(intArray79, intArray81);
        java.lang.Integer[] intArray85 = org.apache.commons.lang3.ArrayUtils.toObject(intArray79);
        java.lang.Integer[] intArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray85);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray85, 5);
        int[] intArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray88, (int) (short) 0);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray88);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[32]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test11430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11430");
        short[] shortArray6 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) (byte) 0, (int) (short) -1);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 1);
        java.lang.Short[] shortArray12 = new java.lang.Short[] {};
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 1);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) -1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) 0);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray22, (short) (byte) 1);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray22, (int) ' ', (int) 'a');
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
    }

    @Test
    public void test11431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11431");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        boolean boolean35 = equalsBuilder34.isEquals();
        long[] longArray37 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, (long) 0);
        long[] longArray50 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.subarray(longArray50, 3, (int) (byte) 0);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray50);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.subarray(longArray50, 5, (int) (short) 10);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.add(longArray57, 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder34.append(longArray37, longArray59);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.add(longArray59, (int) (short) 1, (long) (byte) 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[100, 1, 100]");
    }

    @Test
    public void test11432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11432");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) 100, (int) (short) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
    }

    @Test
    public void test11433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11433");
        double[] doubleArray0 = null;
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray0, (double) 5);
        org.junit.Assert.assertNull(doubleArray2);
    }

    @Test
    public void test11434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11434");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray0);
        double[] doubleArray7 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray7, (double) (byte) 100, 1.0d);
        double[] doubleArray15 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray7, doubleArray15);
        float[] floatArray21 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray24 = new float[] { (byte) -1, 1L };
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, (float) 10L);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray21, floatArray24);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray15, (java.lang.Object) boolean27);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, (int) (short) 0, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray31, (double) (byte) -1);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray33, (int) (byte) 100, 1);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray33, 0, (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray33);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) charArray0, (java.lang.Object) doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (short) 0);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, 100.0d, 100.0d);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) 0.0f, (int) (short) 100);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test11435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11435");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray19 = new char[] { '#', 'a', 'a' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray15, charArray19);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray15, ' ');
        char[] charArray28 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray32 = new char[] { '#', 'a', 'a' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray32);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray32, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder9.append((java.lang.Object) ' ', (java.lang.Object) charArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder9.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder43.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append(false, false);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray8, (java.lang.Object) equalsBuilder49);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (int) (byte) 1, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100, 0, -1, 10, -1, -1, 100, -1]");
    }

    @Test
    public void test11436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11436");
        boolean[] booleanArray5 = new boolean[] { false, true, false, false, false };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14);
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray8, (java.lang.Object) byteArray16);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray8);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray20);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray20);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray20, (int) (short) 1, (int) (byte) 1);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, true, false]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
    }

    @Test
    public void test11437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11437");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) -1, (int) '4');
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray42, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder19.append((java.lang.Object) ' ', (java.lang.Object) charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((double) 0.0f, 0.0d);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 1);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) -1);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray70 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray65, byteArray70);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray65, (byte) -1);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray65, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder50.append(byteArray64, byteArray65);
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray64);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray77);
        java.lang.Byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray77);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray79);
        byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray79, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 0, 100, -1, -1, 0]");
    }

    @Test
    public void test11438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11438");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray4, (float) '4');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) (byte) 100);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) (byte) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray13);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.add(floatArray13, (int) (byte) 1, (float) 100L);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) (short) -1);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[97.0, -1.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[97.0, -1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[97.0, 100.0, -1.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[97.0, 100.0, -1.0, 10.0, 100.0, -1.0]");
    }

    @Test
    public void test11439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11439");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray6);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 5, (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, 100L);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, 1, -1, 1, -1, 100]");
    }

    @Test
    public void test11440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11440");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, true);
        boolean[] booleanArray26 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (int) (byte) 0, 0);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray29);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, false, (int) (byte) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray29);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test11441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11441");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        java.lang.Character[] charArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray44);
        char[] charArray51 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray55 = new char[] { '#', 'a', 'a' };
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.addAll(charArray51, charArray55);
        java.lang.String str57 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray51);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray44, charArray51);
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray44);
        java.lang.Short[] shortArray60 = null;
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray60);
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray75 = new char[] { '#', 'a', 'a' };
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.addAll(charArray71, charArray75);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray71, ' ');
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray88 = new char[] { '#', 'a', 'a' };
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.addAll(charArray84, charArray88);
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray88, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder65.append((java.lang.Object) ' ', (java.lang.Object) charArray88);
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray61, (java.lang.Object) charArray88, 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder41.append(charArray59, charArray88);
        boolean boolean97 = equalsBuilder96.isEquals();
        boolean boolean98 = equalsBuilder96.isEquals();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{4,#,a,4,#}" + "'", str57, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test11442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11442");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, 0, 0);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray0, '#', (-1));
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray34 = new char[] { '#', 'a', 'a' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray34);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.subarray(charArray34, (int) 'a', (int) (short) 10);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray34, '4');
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray46);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray53);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.clone(charArray34);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray34);
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.remove(charArray34, 1);
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray58);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.add(charArray58, 1, '#');
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray58);
        char[] charArray69 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray73 = new char[] { '#', 'a', 'a' };
        char[] charArray74 = org.apache.commons.lang3.ArrayUtils.addAll(charArray69, charArray73);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.subarray(charArray73, (int) 'a', (int) (short) 10);
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.add(charArray73, '4');
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray73, 'a');
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray73);
        int int83 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) charArray73);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, #, a]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
    }

    @Test
    public void test11443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11443");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6, '4');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray10, (int) (byte) 0, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  , #, 4, a, a]");
    }

    @Test
    public void test11444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11444");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        float[] floatArray56 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray56);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray56, (int) (byte) 1, 0);
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        java.lang.Float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        float[] floatArray71 = new float[] { (byte) -1, 1L };
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) 10L);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray71);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray64, floatArray71);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray71);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray50, (java.lang.Object) boolean76, (int) (byte) 10);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray50);
        java.lang.Double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray50);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray50, 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0]");
    }

    @Test
    public void test11445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11445");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        java.lang.String str11 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray5);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray5, '#');
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray14, ' ', 1);
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray14);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray14, ' ');
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.clone(charArray14);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{4,#,a,4,#}" + "'", str11, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #, #]");
    }

    @Test
    public void test11446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11446");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) (byte) 100);
        java.lang.Short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) (byte) 100, 1);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray10, (short) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) (byte) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray10);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1, 0, 0, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test11447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11447");
        java.lang.Object[] objArray0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray8);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray10, (int) (byte) 0);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray15, (int) (byte) 1);
        int[] intArray18 = new int[] {};
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray18, intArray19);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.addAll(intArray15, intArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(intArray14, intArray18);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray18);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray23, 2);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(intArray23, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray23);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(objArray0, (java.lang.Object) intArray23);
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.toObject(intArray23);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray30);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray30);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
    }

    @Test
    public void test11448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11448");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append('a', ' ');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
    }

    @Test
    public void test11449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11449");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray40, longArray52);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray59);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray63 = org.apache.commons.lang3.ArrayUtils.remove(longArray59, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1, -1, -1]");
    }

    @Test
    public void test11450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11450");
        java.lang.Short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray15 = new char[] { '#', 'a', 'a' };
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.addAll(charArray11, charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray11, ' ');
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder5.append((java.lang.Object) ' ', (java.lang.Object) charArray28);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray1, (java.lang.Object) charArray28, 5);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray28, 'a', 0);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray28, '4', 10);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray28, 'a', 7);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
    }

    @Test
    public void test11451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11451");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray5);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(charArray5, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test11452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11452");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray4);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.subarray(charArray4, (int) (short) 10, 7);
        long[][] longArray9 = new long[][] {};
        long[][][] longArray10 = new long[][][] { longArray9 };
        long[][] longArray11 = new long[][] {};
        long[][][] longArray12 = new long[][][] { longArray11 };
        long[][] longArray13 = new long[][] {};
        long[][][] longArray14 = new long[][][] { longArray13 };
        long[][][][] longArray15 = new long[][][][] { longArray10, longArray12, longArray14 };
        long[][][][] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray15);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray23 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray27 = new char[] { '#', 'a', 'a' };
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray23, charArray27);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray23, ' ');
        char[] charArray36 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray40 = new char[] { '#', 'a', 'a' };
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray40);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray40, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((java.lang.Object) ' ', (java.lang.Object) charArray40);
        java.lang.Long[] longArray51 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray51);
        java.lang.Long[] longArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray53);
        char[] charArray58 = new char[] { 'a', '#', ' ' };
        char[][] charArray59 = new char[][] { charArray58 };
        char[][] charArray60 = org.apache.commons.lang3.ArrayUtils.toArray(charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder45.append((java.lang.Object[]) longArray53, (java.lang.Object[]) charArray60);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray53, (-1L));
        long[][][][] longArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray16, (java.lang.Object) longArray63);
        boolean boolean65 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 10, (java.lang.Object) longArray64);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test11453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11453");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(longArray6, (long) (byte) -1);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray6, (long) 10);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray11, (long) (short) 100);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, -1, 0, 10]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, -1, 0, 10]");
    }

    @Test
    public void test11454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11454");
        boolean[] booleanArray0 = null;
        boolean[] booleanArray7 = new boolean[] { false, false, false, true, false, false };
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray7);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, true);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, true);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray18, true);
        boolean[] booleanArray27 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray27, (int) (byte) 0, 0);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray18, booleanArray30);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray30, false, (int) (byte) 1);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray7, booleanArray30);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray7, true);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray0, false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false, false]");
        org.junit.Assert.assertNull(booleanArray41);
    }

    @Test
    public void test11455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11455");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        byte[] byteArray11 = new byte[] {};
        byte[] byteArray16 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray11, byteArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray11, (byte) -1);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) -1);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.clone(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.add(byteArray21, (byte) 10);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray25, byteArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) -1);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray25, (byte) -1);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray25);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray25, (int) (byte) -1, (int) '4');
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray21, byteArray41);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.clone(byteArray42);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray9, (java.lang.Object) byteArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) shortArray9, (java.lang.Object) "hi!");
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder50.append((int) (byte) 0, (int) (byte) 10);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 0);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray62, (short) -1);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray62, (short) 0);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray62, shortArray71);
        short[] shortArray78 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray78, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray78);
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray78, (short) (byte) 0);
        java.lang.Short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray78);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.clone(shortArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder56.append(shortArray71, shortArray86);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray49, shortArray71);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray71, (short) -1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test11456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11456");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        boolean boolean29 = strList9.add("");
        long[] longArray31 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(longArray31, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray31);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray31);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray31);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray31);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(longArray31, (long) (short) 100);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray31);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(longArray43, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray43, (long) 0);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.addAll(longArray31, longArray43);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray31, 0L);
        boolean boolean54 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList9, (java.lang.Object) longArray31, true);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray31);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test11457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11457");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((long) '4', 100L);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
    }

    @Test
    public void test11458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11458");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, (double) (byte) 100, 1.0d);
        double[] doubleArray12 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray12);
        float[] floatArray18 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray21 = new float[] { (byte) -1, 1L };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 10L);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray18, floatArray21);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray12, (java.lang.Object) boolean24);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray12, (int) (short) 0, 1);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray28, (double) (byte) -1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray30, (int) (byte) 100, 1);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray30, (double) (-1L), 3, (double) (short) -1);
        java.lang.Double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray30);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test11459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11459");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.clone(shortArray71);
        java.lang.Short[] shortArray78 = new java.lang.Short[] {};
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray78);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray78, (short) 1);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.clone(shortArray81);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray82, (short) (byte) -1, (int) (short) 100);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray82);
        short[] shortArray87 = null;
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray82, shortArray87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray71, shortArray88);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray88);
        short[] shortArray94 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray88, 4, 6);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(shortArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray94), "[]");
    }

    @Test
    public void test11460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11460");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(shortArray3, (short) (byte) 10);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) (byte) 1);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.add(shortArray3, (short) 1);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray12);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) 10);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1, 10]");
    }

    @Test
    public void test11461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11461");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray15 = new boolean[] { false, false, false, true, false, false };
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, false);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray15, true);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray15);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray15, false);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, true, false, false]");
    }

    @Test
    public void test11462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11462");
        java.lang.Long[] longArray3 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray7 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray11 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[][] longArray12 = new java.lang.Long[][] { longArray3, longArray7, longArray11 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder13.append((int) (byte) 0, (int) (byte) 10);
        java.lang.Long[][] longArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray12, (java.lang.Object) equalsBuilder19);
        float[] floatArray24 = new float[] { (short) -1, 10, (short) 1 };
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray24, (int) '4', (int) (byte) 100);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray27);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray34);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray34, (int) (byte) 1, 0);
        float[] floatArray42 = new float[] { (byte) -1, 1L };
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray42, (float) 10L);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray39, floatArray42);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray39);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray39);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray39, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append(floatArray27, floatArray49);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray27);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
    }

    @Test
    public void test11463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11463");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) -1, (int) '4');
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 2, (int) (byte) 10);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27, (byte) 1);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 100);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 1);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray40, (byte) 1);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray42, (int) (byte) 0, (int) (byte) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray29, byteArray45);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray29, (byte) 10);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray29);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.clone(byteArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray20, byteArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(byteArray20, (byte) -1);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.clone(byteArray20);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray54);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
    }

    @Test
    public void test11464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11464");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, (int) '#', (int) (short) -1);
        int int4 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray3);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray3);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 10);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray8);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, 0, (double) 10L);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test11465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11465");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        equalsBuilder50.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder50.append((long) (short) -1, (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((double) '4', (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder57.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append('a', '4');
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test11466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11466");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((short) (byte) 100, (short) 10);
        java.lang.Long[] longArray43 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray43);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray43);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray43, (long) (-1));
        java.lang.String[] strArray50 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.stream.Stream<java.lang.String> strStream53 = strList51.parallelStream();
        java.lang.String[] strArray56 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.stream.Stream<java.lang.String> strStream59 = strList57.parallelStream();
        boolean boolean60 = strList51.addAll((java.util.Collection<java.lang.String>) strList57);
        java.util.stream.Stream<java.lang.String> strStream61 = strList51.parallelStream();
        boolean boolean63 = strList51.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray68 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray77 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray77);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.remove(floatArray77, (int) (short) 1);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray71, floatArray80);
        boolean boolean82 = strList69.equals((java.lang.Object) floatArray81);
        int int83 = strList69.size();
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray84, (int) (byte) 1);
        boolean boolean87 = strList69.contains((java.lang.Object) int86);
        boolean boolean88 = strList51.addAll((java.util.Collection<java.lang.String>) strList69);
        strList69.clear();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder37.append((java.lang.Object) (-1), (java.lang.Object) strList69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((float) 10, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder90.append((short) (byte) -1, (short) 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 4 + "'", int83 == 4);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test11467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11467");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 0);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray38, (byte) 1);
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray38, (byte) 10);
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray8);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test11468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11468");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray12, (short) 0);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray12, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
    }

    @Test
    public void test11469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11469");
        double[] doubleArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray0, (double) 9, (double) (short) 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test11470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11470");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray6);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray16 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray20 = new char[] { '#', 'a', 'a' };
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.addAll(charArray16, charArray20);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray16, ' ');
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray33, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder10.append((java.lang.Object) ' ', (java.lang.Object) charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder10.append((int) (short) 1, 10);
        boolean[] booleanArray48 = new boolean[] { false, false, false, true, false, false };
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray48);
        boolean[] booleanArray56 = new boolean[] { false, false, false, true, false, false };
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray56);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray48, booleanArray56);
        java.lang.Boolean[] booleanArray62 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray63, false);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray63, false);
        boolean[] booleanArray73 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray73, (int) (byte) 0, 0);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray73, 4, (int) '4');
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray67, booleanArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder10.append(booleanArray56, booleanArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append(1L, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((long) 0, (long) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.appendSuper(false);
        equalsBuilder84.reset();
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) intArray6, (java.lang.Object) equalsBuilder84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder84.append((byte) -1, (byte) 10);
        java.lang.Boolean boolean95 = equalsBuilder84.build();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[true]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertEquals("'" + boolean95 + "' != '" + false + "'", boolean95, false);
    }

    @Test
    public void test11471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11471");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(true, true);
        long[] longArray38 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(longArray38, 0L);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 5, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder31.append(longArray38, longArray45);
        java.lang.Byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        float[] floatArray56 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, 0.0f);
        java.lang.Float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        java.lang.Object[] objArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray60);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder49.append((java.lang.Object[]) byteArray50, (java.lang.Object[]) floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder49.append((long) (short) -1, (long) 9);
        java.lang.Double[] doubleArray72 = new java.lang.Double[] { 100.0d, (-1.0d), 100.0d, 100.0d, (-1.0d) };
        java.lang.Double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray72);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder66.append((java.lang.Object[]) doubleArray72, objArray74);
        java.lang.Double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray72);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test11472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11472");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.clone(byteArray28);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray36, (byte) 1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(byteArray38, (byte) 100);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(byteArray38, (byte) 1);
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray38);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray43, (byte) 100);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.add(byteArray45, (byte) 10);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.clone(byteArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray47);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray47, (byte) 100);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray51, (byte) 0);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray51, (byte) 10, 5);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray29, byteArray51);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray51, (int) (byte) 10, (int) (byte) 100);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.remove(byteArray51, (int) (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, -1, -1, 100, 0, 0, 100]");
    }

    @Test
    public void test11473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11473");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((short) (byte) 100, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((float) (-1L), (float) ' ');
        equalsBuilder40.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test11474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11474");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (-1.0f), (-1.0d));
        double[] doubleArray36 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray36, (double) (byte) 100, 1.0d);
        double[] doubleArray44 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray36, doubleArray44);
        float[] floatArray50 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray53 = new float[] { (byte) -1, 1L };
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray53, (float) 10L);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray50, floatArray53);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray44, (java.lang.Object) boolean56);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray44);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray58, (double) (-1.0f));
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray58);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray58, (double) (short) 100, (int) (byte) 0);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.add(doubleArray58, (double) 4);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray58);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) 100, (int) (byte) 1, (double) 6);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) (-1), (int) (short) 1, (double) 4);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 0.0, 10.0, -1.0, 4.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 10.0, 0.0, 1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
    }

    @Test
    public void test11475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11475");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray11);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
    }

    @Test
    public void test11476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11476");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray8 = new float[] { (short) -1, 10, (short) 1 };
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray8, (int) '4', (int) (byte) 100);
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray14, (float) (short) 100);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(floatArray8, floatArray18);
        boolean[] booleanArray25 = new boolean[] { true, true, true };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray25, true);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray25, false);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36, false);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder21.append(booleanArray30, booleanArray40);
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray46, true);
        boolean[] booleanArray55 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray55, (int) (byte) 0, 0);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray46, booleanArray58);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray59);
        boolean[] booleanArray64 = new boolean[] { true, true, true };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray64, true);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray64, false);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray64);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray69, false, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder41.append(booleanArray60, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((float) (-1), (float) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test11477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11477");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray0, intArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, ' ');
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder3.append((java.lang.Object) ' ', (java.lang.Object) charArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder3.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray44);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray45, intArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(intArray46, (int) '4');
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.add(intArray46, (int) (short) 100);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray46);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray46, (int) (short) 1);
        int[] intArray56 = new int[] {};
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray56, intArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder37.append(intArray46, intArray57);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.addAll(intArray1, intArray57);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(intArray60, (int) (short) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray60);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray60);
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.subarray(intArray60, 9, (int) (short) 1);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray67, (-1), 8);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test11478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11478");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (-1.0f), (double) '4');
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) 3);
        double[] doubleArray38 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray38, (double) (byte) 100, 1.0d);
        double[] doubleArray46 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray38, doubleArray46);
        float[] floatArray52 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray55 = new float[] { (byte) -1, 1L };
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray55, (float) 10L);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray52, floatArray55);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray46, (java.lang.Object) boolean58);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray46, (int) (short) 0, 1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray62, (double) (byte) -1);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray64, (int) (byte) 100, 1);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray67, (int) (byte) -1, (int) (short) 100);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray67);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (byte) 0, (double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test11479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11479");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray35);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray46);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray63 = new char[] { '#', 'a', 'a' };
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray63);
        java.lang.String str65 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray59);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray59);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray46, (java.lang.Object) charArray66, false);
        java.lang.Character[] charArray69 = org.apache.commons.lang3.ArrayUtils.toObject(charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append((java.lang.Object[]) doubleArray35, (java.lang.Object[]) charArray69);
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69, '4');
        char[] charArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray73);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.subarray(charArray74, 100, (int) 'a');
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray74, 'a');
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray74, 'a');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{4,#,a,4,#}" + "'", str65, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
    }

    @Test
    public void test11480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11480");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, true);
        java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false, (-1));
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray8, (int) 'a', (-1));
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, false);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
    }

    @Test
    public void test11481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11481");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray1, (long) '#');
        long[] longArray14 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(longArray14, 0L);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray14);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray12, longArray18);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray12, (long) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) longArray12);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray12);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1, 35]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 35]");
    }

    @Test
    public void test11482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11482");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.remove(intArray26, (int) (byte) 1);
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.toObject(intArray28);
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray29);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray30, 0);
        java.lang.Integer[] intArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray30);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray30);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray30);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0, 10, -1, 1]");
    }

    @Test
    public void test11483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11483");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray40, false, (int) (byte) 100);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, true);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(booleanArray47);
    }

    @Test
    public void test11484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11484");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, (int) (byte) -1, (int) (short) 100);
        int int36 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray35);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) (short) 0, (int) (byte) -1);
        double[] doubleArray43 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray43, (double) (byte) 100, 1.0d);
        double[] doubleArray51 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray43, doubleArray51);
        float[] floatArray57 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray60 = new float[] { (byte) -1, 1L };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray60, (float) 10L);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray57, floatArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray51, (java.lang.Object) boolean63);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (int) (short) 0, 1);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray67, (double) (byte) -1);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray69, (int) (byte) 100, 1);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray69, 0, (int) (short) 10);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray75, (int) (byte) 10, 100);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray78);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray79, (int) (short) 100, 0);
        double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.add(doubleArray82, 0, (double) 10.0f);
        double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray82, (double) (byte) 100);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray87);
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray87, (double) 5, 6, (double) 10L);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test11485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11485");
        boolean[] booleanArray0 = null;
        boolean[] booleanArray1 = null;
        boolean[] booleanArray8 = new boolean[] { false, false, false, true, false, false };
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray8);
        boolean[] booleanArray16 = new boolean[] { false, false, false, true, false, false };
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray16);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray16, true);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray16, true, 5);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray16);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray16);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, true);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, false);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray1, booleanArray16);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray0, booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, true, false, false, true]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test11486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11486");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) '#', 1, (double) (byte) 100);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray32);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray28, (int) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, 0, (double) (short) 10);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, (int) (byte) 1, (double) 0);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, (double) (byte) -1);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray51);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) 1.0f, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 10.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test11487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11487");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58, (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 1);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray60);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray65, (byte) 100);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray67, (byte) 10);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder34.append(byteArray38, byteArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder34.append(2, 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder34.append(100.0d, (double) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder34.append((long) 1, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((double) (-1.0f), (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(true, true);
        java.lang.Boolean boolean87 = equalsBuilder86.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
    }

    @Test
    public void test11488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11488");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, 0.0f);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        float[] floatArray44 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray44);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray44, (int) (byte) 1, 0);
        float[] floatArray52 = new float[] { (byte) -1, 1L };
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, (float) 10L);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray49, floatArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray52);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray52);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray57);
        java.lang.Float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray59, (float) (short) 100);
        float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray61, (int) (byte) -1, 5);
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0, -1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray65);
    }

    @Test
    public void test11489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11489");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray11);
        double[] doubleArray17 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray17, (double) (byte) 100, 1.0d);
        double[] doubleArray25 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray17, doubleArray25);
        float[] floatArray31 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray34 = new float[] { (byte) -1, 1L };
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) 10L);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray31, floatArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray25, (java.lang.Object) boolean37);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray40, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray40);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray40, (double) '#');
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray45);
        char[] charArray52 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray56 = new char[] { '#', 'a', 'a' };
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.addAll(charArray52, charArray56);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.subarray(charArray56, (int) 'a', (int) (short) 10);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.add(charArray56, '4');
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray56, 'a');
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray64, '4');
        java.lang.Character[] charArray67 = org.apache.commons.lang3.ArrayUtils.toObject(charArray64);
        java.lang.Object[] objArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray67);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray45, (java.lang.Object) charArray67);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray45);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray45);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray45);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray72, (double) (byte) 100, (int) (short) -1, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, a]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[#, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test11490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11490");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) -1);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 100);
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray34, (byte) 100);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray36, (byte) 10);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.clone(byteArray38);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.clone(byteArray38);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 100, -1, -1, 0]");
    }

    @Test
    public void test11491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11491");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray3, (int) '#');
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream12 = strList9.stream();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray19);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray20, intArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(intArray21, (int) '4');
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.add(intArray21, (int) (short) 100);
        boolean boolean27 = strList9.contains((java.lang.Object) intArray26);
        java.lang.Integer[] intArray28 = org.apache.commons.lang3.ArrayUtils.toObject(intArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray36);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray37, intArray38);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray38, (int) (byte) 0);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray38);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray43, (int) (byte) 1);
        int[] intArray46 = new int[] {};
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray46, intArray47);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.addAll(intArray43, intArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(intArray42, intArray46);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray46);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray51, 2);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray51, (int) 'a', 100);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.add(intArray51, (int) (short) 1);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray51);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray26, intArray51);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray51);
        java.lang.Integer[] intArray62 = org.apache.commons.lang3.ArrayUtils.toObject(intArray51);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray62);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
    }

    @Test
    public void test11492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11492");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 1, 3);
        short[] shortArray11 = null;
        java.lang.Short[] shortArray12 = new java.lang.Short[] {};
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 1);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray15);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.add(shortArray19, (short) (byte) -1);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray11, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray19);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.clone(shortArray23);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray24, (short) (byte) 100);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray26);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11493");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        int int19 = strList5.size();
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray20, (int) (byte) 1);
        boolean boolean23 = strList5.contains((java.lang.Object) int22);
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        java.lang.String str35 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray29);
        char[] charArray41 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray45 = new char[] { '#', 'a', 'a' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.addAll(charArray41, charArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray29, charArray45);
        boolean boolean48 = strList5.equals((java.lang.Object) charArray45);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.clone(charArray45);
        java.lang.Character[] charArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray50, '4');
        java.lang.Character[] charArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray50);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray53, ' ');
        java.lang.Character[] charArray56 = org.apache.commons.lang3.ArrayUtils.toObject(charArray55);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(charArray55, '4');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.addAll(charArray49, charArray55);
        java.lang.Character[] charArray60 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray60, '4');
        java.lang.Character[] charArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray60);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray60);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray64, '#');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray66);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray66);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray59, ' ');
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray59, '#', (int) (short) 1);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{4,#,a,4,#}" + "'", str35, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test11494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11494");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray31);
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.subarray(charArray42, (int) 'a', (int) (short) 10);
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray42, '4');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray42, 'a');
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray50, '4');
        java.lang.Character[] charArray53 = org.apache.commons.lang3.ArrayUtils.toObject(charArray50);
        java.lang.Object[] objArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray53);
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray31, (java.lang.Object) charArray53);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, (-1), (int) (byte) -1);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[#, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test11495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11495");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray13 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, (long) 0);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray13);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, (long) 100);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22);
        long[] longArray25 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(longArray25, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray25);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(longArray25, (long) (short) 100);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray35);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.remove(longArray35, (int) (byte) 0);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.addAll(longArray23, longArray35);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.clone(longArray39);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[-1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1, -1, -1]");
    }

    @Test
    public void test11496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11496");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder31.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((long) 7, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((int) (byte) -1, 10);
        boolean boolean80 = equalsBuilder76.isEquals();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test11497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11497");
        java.lang.Short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) -1);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 0);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.add(shortArray6, (short) 10);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 0);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray14, (short) -1);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) 1);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.clone(shortArray8);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray20, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[10]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[10]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[10]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test11498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11498");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray35);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray46);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray63 = new char[] { '#', 'a', 'a' };
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray63);
        java.lang.String str65 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray59);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray59);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray46, (java.lang.Object) charArray66, false);
        java.lang.Character[] charArray69 = org.apache.commons.lang3.ArrayUtils.toObject(charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append((java.lang.Object[]) doubleArray35, (java.lang.Object[]) charArray69);
        java.lang.Character[] charArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray69);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{4,#,a,4,#}" + "'", str65, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
    }

    @Test
    public void test11499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11499");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray5);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray5);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, true, true, false, true]");
    }

    @Test
    public void test11500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11500");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray3, (java.lang.Object) charArray7);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        java.lang.Character[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray3);
        boolean[] booleanArray19 = new boolean[] { false, false, false, true, false, false };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray19);
        boolean[] booleanArray27 = new boolean[] { false, false, false, true, false, false };
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray19, booleanArray27);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, false);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 100, 100);
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        double[] doubleArray41 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray41, (double) (byte) 100, 1.0d);
        double[] doubleArray49 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray41, doubleArray49);
        float[] floatArray55 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray58 = new float[] { (byte) -1, 1L };
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray58, (float) 10L);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray55, floatArray58);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray49, (java.lang.Object) boolean61);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray49);
        java.lang.Double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray63);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray64, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray64);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray64, (double) '#');
        java.lang.Double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray64);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray70);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray37, (java.lang.Object) doubleArray70, 3);
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray37, false);
        java.lang.Boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray37);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray12, (java.lang.Object) booleanArray76);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }
}

