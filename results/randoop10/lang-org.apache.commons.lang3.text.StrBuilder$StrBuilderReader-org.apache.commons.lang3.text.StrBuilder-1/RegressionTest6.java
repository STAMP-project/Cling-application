import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        java.lang.String str21 = strBuilder7.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList26 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(11, '4');
        java.io.Reader reader31 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("!i0.");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.insert(100, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer2.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer2.setDelimiterString("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer29.reset("hi!!ih100.0#a");
        java.lang.String str34 = strTokenizer29.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!!ih100.0#a" + "'", str34, "hi!!ih100.0#a");
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        java.lang.String str20 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher63);
        int int66 = strBuilder40.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer24.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer24.setTrimmerMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer15.setQuoteMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer75.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer71.setDelimiterMatcher(strMatcher80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = strTokenizer71.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[!ih100.0]" + "'", str20, "StrTokenizer[!ih100.0]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer81);
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        java.lang.String str23 = strBuilder21.leftString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(105);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendFixedWidthPadLeft(20, 72, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder32.deleteAll("");
        int int44 = strBuilder42.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceAll("", "hi!");
        int int61 = strBuilder59.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean72 = strBuilder63.contains(strMatcher71);
        java.lang.StringBuffer stringBuffer73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder63.appendln(stringBuffer73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder63.replaceFirst(strMatcher75, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder59.appendFixedWidthPadLeft((java.lang.Object) strBuilder77, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder42.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.appendln(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.insert(2, (-1L));
        java.io.Writer writer88 = strBuilder87.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.setNullText("hi!");
        boolean boolean93 = strBuilder25.equals((java.lang.Object) strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!hi!97!!" + "'", str23, "hi!hi!97!!");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(writer88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append(stringBuffer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.deleteAll(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("hi!");
        boolean boolean48 = strBuilder22.equals(strBuilder45);
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder20.appendln(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "kenizer");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoredChar('h');
        boolean boolean55 = strTokenizer52.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        java.io.Writer writer12 = writer10.append('h');
        java.io.Writer writer14 = writer12.append(' ');
        writer12.flush();
        java.io.Writer writer17 = writer12.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean34 = strBuilder25.contains(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.append(strBuilder25);
        java.lang.String str41 = strBuilder25.substring(6);
        boolean boolean42 = strBuilder25.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder25.insert(35, (long) 206);
        java.io.Writer writer46 = strBuilder25.asWriter();
        java.io.Writer writer49 = writer12.append((java.lang.CharSequence) strBuilder25, (int) (short) 0, 102);
        // The following exception was thrown during execution in test generation
        try {
            writer49.write("!ih100.010.0i!hi!97!!!\n", (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(writer14);
        org.junit.Assert.assertNotNull(writer17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" + "'", str41, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
        org.junit.Assert.assertNotNull(writer49);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher49);
        int int52 = strBuilder26.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer10.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer6.setDelimiterMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        int int70 = strBuilder59.indexOf(strMatcher64, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.replaceAll("i!", "!ih100.0");
        char[] charArray76 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher86);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder59.appendln(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer54.reset(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, 'a');
        boolean boolean94 = strTokenizer93.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer93.reset();
        int int96 = strTokenizer93.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.replaceFirst(strMatcher19, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert(0, (java.lang.Object) (byte) 1);
        boolean boolean25 = strBuilder4.equalsIgnoreCase(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.replace(2, (int) (short) 10, "!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst('#', '#');
        char[] charArray51 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder45.append(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder55, 23, 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replace(14, 6, "zed yet]1");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        java.lang.String str18 = strBuilder17.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        java.lang.String str37 = strBuilder32.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean62 = strBuilder53.contains(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder41.replaceAll(strMatcher47, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean70 = strTokenizer69.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder41.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer69, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder32.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst(strMatcher79, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder76.replaceAll(strMatcher79, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean85 = strBuilder76.contains(strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder76.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        boolean boolean90 = strBuilder73.equals(strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder73.append("!ih100.0\n!ih100.0#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strBuilder73.asTokenizer();
        boolean boolean94 = strTokenizer93.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer93);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder95.setLength((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "!" + "'", str37, "!");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer24.append('#');
        // The following exception was thrown during execution in test generation
        try {
            writer81.write("", 0, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.setLength(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceAll("", "hi!");
        int int53 = strBuilder51.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder55.appendln(stringBuffer65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder55.replaceFirst(strMatcher67, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder51.appendFixedWidthPadLeft((java.lang.Object) strBuilder69, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder19.append((java.lang.Object) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.setLength(52);
        int int79 = strBuilder74.indexOf("hi!#java.io.IOException", 56);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator('h', '4');
        int int21 = strBuilder11.lastIndexOf('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strBuilder34.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setEmptyTokenAsNull(false);
        java.lang.String str41 = strTokenizer38.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer38.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setIgnoredChar('a');
        char[] charArray52 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer47.reset(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("StrTokenizer[]");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        java.lang.String str68 = strTokenizer66.next();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder11.insert(102, (java.lang.Object) strTokenizer66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 102");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 6 + "'", int21 == 6);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "!ih100.0" + "'", str41, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "#" + "'", str68, "#");
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean4 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        java.lang.Object obj6 = strTokenizer3.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.reset("hi!97!!!!!!!!!!!!!!!!!");
        java.lang.String str9 = strTokenizer3.previousToken();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder13.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setEmptyTokenAsNull(false);
        java.lang.String str20 = strTokenizer17.next();
        java.lang.String str21 = strTokenizer17.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer17.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        java.util.stream.IntStream intStream31 = strBuilder30.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll("i!");
        int int42 = strBuilder38.indexOf("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean63 = strBuilder54.contains(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder52.deleteAll(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln("hi!");
        boolean boolean70 = strBuilder44.equals(strBuilder67);
        char[] charArray71 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder38.append(charArray71, 3, 7);
        int int77 = strMatcher25.isMatch(charArray71, (int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder1.appendFixedWidthPadRight((java.lang.Object) int77, 72, 'i');
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "!ih100.0" + "'", str20, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "!ih100.0" + "'", str21, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder50.deleteAll(strMatcher60);
        boolean boolean63 = strBuilder36.contains(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer24.setQuoteMatcher(strMatcher60);
        java.lang.String str65 = strTokenizer64.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.replace(strMatcher67, "!ih100.0\n!ih100.0#", 0, 16, 16);
        int int73 = strBuilder72.length();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 13 + "'", int73 == 13);
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst(strMatcher82, "");
        java.util.stream.IntStream intStream85 = strBuilder84.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder84.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder84.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder84.appendSeparator("!ih100.014\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder95.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder95.setLength(1);
        java.io.Writer writer99 = writer79.append((java.lang.CharSequence) strBuilder98);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(intStream85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(writer99);
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        int int23 = strBuilder21.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        int int43 = strBuilder41.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendSeparator('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strBuilder45.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.ensureCapacity(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder25.insert(6, (java.lang.Object) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        int int67 = strBuilder56.indexOf(strMatcher61, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder56.appendln("");
        boolean boolean71 = strBuilder56.contains("!ih100.0");
        boolean boolean73 = strBuilder56.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder56.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder48.append(strBuilder56, 50, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        boolean boolean11 = strBuilder1.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        java.lang.String str28 = strBuilder23.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.replaceFirst(strMatcher32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder1.appendln(strBuilder23, 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        java.lang.String str54 = strBuilder49.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder49.deleteFirst("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder37.appendln(strBuilder49);
        int int63 = strBuilder61.lastIndexOf("0.0hi!97!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "!" + "'", str28, "!");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "!" + "'", str54, "!");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        boolean boolean12 = strBuilder9.startsWith("!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(' ');
        java.io.Writer writer15 = strBuilder14.asWriter();
        writer15.close();
        java.io.Writer writer18 = writer15.append('i');
        writer15.flush();
        writer15.close();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(writer15);
        org.junit.Assert.assertNotNull(writer18);
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", "###true1");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.lang.String str5 = iOException3.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str5, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        boolean boolean18 = strTokenizer17.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.setCharAt(9, 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.delete((int) (short) 100, (int) 'v');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.insert((int) (byte) 0, 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendln(true);
        java.lang.StringBuffer stringBuffer24 = strBuilder23.toStringBuffer();
        java.lang.Class<?> wildcardClass25 = stringBuffer24.getClass();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(stringBuffer24);
        org.junit.Assert.assertEquals(stringBuffer24.toString(), "0.0!ih100.0true\n");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll("!i", "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        int int37 = strBuilder35.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder20.appendln(strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "!ih100.0");
        int int67 = strBuilder54.indexOf(strMatcher63, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder43.deleteAll(strMatcher63);
        java.lang.String str71 = strBuilder43.midString(78, (int) (byte) 1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendFixedWidthPadRight((int) (byte) 10, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.insert(9, (long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) 74);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.deleteAll('!');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln("hi!97!!!!!!!!!!!!!!!!!", (int) '4', 40);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!ih", "StrTokenizer[]");
        int int22 = strBuilder19.lastIndexOf("!ih100.0", (int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceAll("StrTokenizer[!ih100.0]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        int int71 = strBuilder60.indexOf(strMatcher65, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.append(strBuilder60, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder60.setLength(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder60.appendNewLine();
        boolean boolean79 = strBuilder60.endsWith("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder40.appendln(strBuilder60);
        char[] charArray81 = strBuilder80.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, '.');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder19.insert(290, charArray81, (int) 'h', 92);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 290");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "!ih100.010.0hi!\000\000\000\000\000\000\000\000\000\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "!ih100.010.0hi!\000\000\000\000\000\000\000\000\000\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[!, i, h, 1, 0, 0, ., 0, 1, 0, ., 0, h, i, !, \000, \000, \000, \000, \000, \000, \000, \000, \000, \n]");
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("!ih100.0", "!ih100.0");
        int int29 = strBuilder23.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator(' ', '1');
        java.lang.Iterable<java.lang.String> strIterable39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendWithSeparators(strIterable39, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.appendln("StrTokenizer[not tokenized yet]", 13, 3);
        int int47 = strBuilder45.lastIndexOf("!ih100.1.00");
        java.io.IOException iOException49 = new java.io.IOException("StrTokenizer[]");
        java.lang.Throwable[] throwableArray50 = iOException49.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendAll((java.lang.Object[]) throwableArray50);
        java.lang.StringBuffer stringBuffer52 = strBuilder45.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder15.append(stringBuffer52, 212, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "1not");
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.insert((int) (byte) 0, 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        java.lang.String str38 = strBuilder33.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.append("!ih100.00");
        java.io.Reader reader46 = strBuilder45.asReader();
        boolean boolean47 = reader46.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceAll("", "hi!");
        int int64 = strBuilder62.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean75 = strBuilder66.contains(strMatcher74);
        java.lang.StringBuffer stringBuffer76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder66.appendln(stringBuffer76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder66.replaceFirst(strMatcher78, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder62.appendFixedWidthPadLeft((java.lang.Object) strBuilder80, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder62.reverse();
        char[] charArray87 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, 'a');
        char[] charArray93 = strBuilder62.getChars(charArray87);
        int int94 = reader46.read(charArray93);
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray93);
        int int96 = strBuilder21.indexOf(strMatcher95);
        java.util.stream.IntStream intStream97 = strBuilder21.codePoints();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "!" + "'", str38, "!");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 9 + "'", int94 == 9);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(intStream97);
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int2 = strBuilder1.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.insert((int) ' ', (float) 122);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        boolean boolean31 = strTokenizer30.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.setDelimiterString("java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setQuoteMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.setIgnoredChar('.');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = strTokenizer33.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendFixedWidthPadRight(0, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert((int) (byte) 1, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.setCharAt(29, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 29");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        int int43 = strBuilder41.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln(stringBuffer62);
        char[] charArray66 = strBuilder61.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray67 = strBuilder26.getChars(charArray66);
        int int68 = reader24.read(charArray66);
        reader24.reset();
        reader24.close();
        reader24.mark(21);
        boolean boolean73 = reader24.ready();
        reader24.close();
        reader24.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[!, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[!, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 17 + "'", int68 == 17);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        java.util.stream.IntStream intStream32 = strBuilder1.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.appendSeparator(' ', ' ');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceAll("", "hi!");
        int int53 = strBuilder51.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder55.appendln(stringBuffer65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder55.replaceFirst(strMatcher67, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder51.appendFixedWidthPadLeft((java.lang.Object) strBuilder69, 1, ' ');
        char[] charArray73 = strBuilder72.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.appendln((double) 2);
        int int81 = strBuilder78.indexOf('4', 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceFirst(strMatcher84, "");
        java.util.stream.IntStream intStream87 = strBuilder86.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder86.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder78.appendFixedWidthPadLeft((java.lang.Object) strBuilder86, 33, 'a');
        java.io.Writer writer95 = writer36.append((java.lang.CharSequence) strBuilder86);
        java.io.Writer writer97 = writer95.append('v');
        writer97.write("!ih100.0100.0!\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(intStream87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(writer95);
        org.junit.Assert.assertNotNull(writer97);
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder26.deleteAll(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("hi!");
        boolean boolean44 = strBuilder18.equals(strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder18.append(1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder11.append((java.lang.CharSequence) strBuilder18);
        java.io.Writer writer48 = strBuilder47.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.replaceAll('f', 'a');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(writer48);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!hi!0.00");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[not tokenvized yet]h!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll('h');
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll('a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((java.lang.Object) strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.insert(8, (-1.0d));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher76);
        int int79 = strBuilder53.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer36.setDelimiterMatcher(strMatcher76);
        java.lang.String str81 = strTokenizer36.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer36, "sehi!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setIgnoredMatcher(strMatcher85);
        java.lang.Object obj87 = strTokenizer86.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer86.setDelimiterString("java.io.IOException: hi!-1.0");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        int int37 = strBuilder26.indexOf(strMatcher31, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder14.append((java.lang.CharSequence) "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll('f');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.close();
        writer24.write(12);
        java.io.Writer writer29 = writer24.append('a');
        java.io.Writer writer31 = writer29.append('a');
        java.io.Writer writer33 = writer31.append('a');
        writer31.write((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceAll("", "hi!");
        int int52 = strBuilder50.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean63 = strBuilder54.contains(strMatcher62);
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder54.appendln(stringBuffer64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder54.replaceFirst(strMatcher66, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder50.appendFixedWidthPadLeft((java.lang.Object) strBuilder68, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder50.reverse();
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, 'a');
        char[] charArray81 = strBuilder50.getChars(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, "hi!");
        writer31.write(charArray75);
        writer31.write("hi!97!!!!!!!!!!!!!!!!!");
        writer31.flush();
        writer31.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[!, 0, ., 0, 0, 1, h, i, !]");
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        char[] charArray3 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", strMatcher12, strMatcher14);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.set("java.io.IOException: hi!3");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        int int22 = strBuilder21.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.deleteFirst('4');
        char[] charArray25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append(charArray25, 92, 4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.insert(56, '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 56");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 9 + "'", int22 == 9);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendSeparator('h', 74);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        java.util.stream.IntStream intStream28 = strBuilder27.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.append(strBuilder32, 11, 9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoredChar(' ');
        int int40 = strTokenizer39.previousIndex();
        boolean boolean41 = strTokenizer39.hasNext();
        java.util.List<java.lang.String> strList42 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList42, "1hi!hi!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        java.lang.Class<?> wildcardClass46 = strBuilder22.getClass();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.replaceAll(strMatcher17, "hi!\n");
        java.lang.String str22 = strBuilder1.midString((int) (short) 10, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder24.replaceAll(strMatcher30, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder1.appendFixedWidthPadLeft((java.lang.Object) strBuilder50, (int) '1', '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.appendln("falsehi!!ih100.0", (int) (short) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0" + "'", str22, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(7, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        boolean boolean38 = strBuilder25.equalsIgnoreCase(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder25.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.append(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setLength(4);
        int int44 = strBuilder41.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        java.util.stream.IntStream intStream50 = strBuilder49.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int64 = strBuilder57.lastIndexOf(strMatcher62, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder41.appendln((java.lang.Object) strBuilder66);
        int int70 = strBuilder41.lastIndexOf("hi!!ih100.0");
        // The following exception was thrown during execution in test generation
        try {
            char char72 = strBuilder41.charAt((int) 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        java.lang.String str21 = strBuilder7.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList26 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll('i');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!ih");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        long long81 = reader53.skip((long) (short) 10);
        reader53.close();
        long long84 = reader53.skip((long) (byte) 1);
        reader53.reset();
        java.nio.CharBuffer charBuffer86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int87 = reader53.read(charBuffer86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        int int35 = strTokenizer32.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        java.util.stream.IntStream intStream14 = strBuilder13.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        boolean boolean19 = strBuilder8.equalsIgnoreCase(strBuilder13);
        int int22 = strBuilder8.indexOf('1', 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder8.replaceAll('v', 'v');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer5.reset("f0alsehi!1\n      10");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        int int40 = strBuilder29.indexOf(strMatcher34, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.append(1.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer45.setQuoteMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer45.getTrimmerMatcher();
        int int71 = strBuilder29.lastIndexOf(strMatcher69, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder16.deleteAll(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer11.setTrimmerMatcher(strMatcher69);
        boolean boolean74 = strTokenizer11.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(1, (float) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.append((java.lang.CharSequence) "StrTokenizer[!ih100.0]", 4, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.insert(0, (double) 13L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = strBuilder62.substring((int) ' ', 92);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder40.reverse();
        char[] charArray65 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a');
        char[] charArray71 = strBuilder40.getChars(charArray65);
        int int72 = reader24.read(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray71);
        java.lang.String str76 = strTokenizer75.nextToken();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 9 + "'", int72 == 9);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder15.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendPadding(52, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.delete(7, (int) 'a');
        int int40 = strBuilder15.indexOf("hi!!ih100.0#a\nfalse!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder15.deleteFirst("hi!3");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer24.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setDelimiterString("!ihfalsehi!sehi!!");
        int int83 = strTokenizer82.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer82.add("#afalsehi!0a\n10");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        java.lang.Object obj25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(obj25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.delete(11, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.append((long) 2);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray36 = strBuilder33.toCharArray(16, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strBuilder18.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setEmptyTokenAsNull(false);
        java.lang.String str25 = strTokenizer22.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer22.setDelimiterMatcher(strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setIgnoredChar('a');
        char[] charArray36 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer31.reset(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean72 = strBuilder63.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer51.setQuoteMatcher(strMatcher71);
        char[] charArray77 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer74.reset(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer31.reset(charArray77);
        char[] charArray83 = strBuilder3.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, ' ');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "!ih100.0" + "'", str25, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "hi!0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "hi!0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[h, i, !, 0]");
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!ihfalsehi!!");
        int int2 = strTokenizer1.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        char[] charArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            strBuilder1.getChars(14, 78, charArray15, 78);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 78");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setEmptyTokenAsNull(false);
        java.lang.String str49 = strTokenizer46.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        java.util.stream.IntStream intStream57 = strBuilder56.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.appendln((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.insert((int) (short) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.appendSeparator('.', '!');
        java.io.Writer writer66 = strBuilder65.asWriter();
        writer66.write("\n530.001hi!");
        writer66.flush();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "!ih100.0" + "'", str49, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(writer66);
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln('.');
        int int20 = strBuilder13.indexOf('0', 45);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) '4');
        int int17 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoredChar(' ');
        java.lang.String str22 = strTokenizer21.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer21.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setDelimiterString("StrTokenizer[!ih100.0]");
        int int27 = strTokenizer26.nextIndex();
        boolean boolean28 = strTokenizer26.isIgnoreEmptyTokens();
        java.lang.String str29 = strTokenizer26.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "java.io.IOException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder11.appendln("ih100.0StrTokenizer[ih100.0]StrTo", (-1), (int) '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!ih100.0" + "'", str16, "!ih100.0");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher49);
        int int52 = strBuilder26.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer10.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer6.setDelimiterMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer6.setQuoteChar(' ');
        int int57 = strTokenizer56.size();
        boolean boolean58 = strTokenizer56.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setDelimiterString("");
        java.lang.Object obj61 = strTokenizer56.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((double) (byte) 10);
        int int30 = strBuilder27.length();
        boolean boolean31 = strBuilder13.equalsIgnoreCase(strBuilder27);
        int int32 = strBuilder13.length();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean38 = strTokenizer37.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer37.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer37.setQuoteMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer37.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("ehi!0a\n", strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder13.appendln((java.lang.Object) strTokenizer44);
        java.lang.String str46 = strTokenizer44.toString();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 12 + "'", int30 == 12);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 12 + "'", int32 == 12);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder11.replaceFirst(strMatcher23, "hi!");
        int int28 = strBuilder25.lastIndexOf("", (int) (byte) 0);
        java.lang.String str31 = strBuilder25.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        int int48 = strBuilder46.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder25.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder9.append(stringBuffer57);
        int int60 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder9.appendSeparator("hi!3");
        int int63 = strBuilder62.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendSeparator('4', 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendSeparator("!ih100.0\n!ih100.0011.04444444444444444444444444444444444444444444444444432!ih100.0\n!ih100.00hi!\n", (int) '0');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h" + "'", str31, "h");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 35 + "'", int60 == 35);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 35 + "'", int63 == 35);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        boolean boolean54 = reader53.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        int int71 = strBuilder69.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher76, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean82 = strBuilder73.contains(strMatcher81);
        java.lang.StringBuffer stringBuffer83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder73.appendln(stringBuffer83);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder73.replaceFirst(strMatcher85, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder69.appendFixedWidthPadLeft((java.lang.Object) strBuilder87, 1, ' ');
        char[] charArray91 = strBuilder90.toCharArray();
        char[] charArray94 = strBuilder90.toCharArray(6, 11);
        int int95 = reader53.read(charArray94);
        java.nio.CharBuffer charBuffer96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int97 = reader53.read(charBuffer96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[!, i, h]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 3 + "'", int95 == 3);
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer24.append('h');
        writer24.write("hi!97!!!!!!!!!!!!!!!!!");
        writer24.write(0);
        // The following exception was thrown during execution in test generation
        try {
            writer24.write("zed yet]1", 0, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setIgnoredChar(' ');
        java.lang.String str8 = strTokenizer7.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher53);
        int int56 = strBuilder30.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer14.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer10.setDelimiterMatcher(strMatcher53);
        boolean boolean59 = strTokenizer58.isIgnoreEmptyTokens();
        java.lang.String str60 = strTokenizer58.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strBuilder72.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setEmptyTokenAsNull(false);
        java.lang.String str79 = strTokenizer76.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst(strMatcher82, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer76.setDelimiterMatcher(strMatcher82);
        boolean boolean86 = strTokenizer76.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer76.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer58.setTrimmerMatcher(strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer3.setTrimmerMatcher(strMatcher87);
        int int90 = strTokenizer89.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "!ih100.0" + "'", str79, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.insert(8, (double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding(0, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append('f');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert(102, (float) 18L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 102");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        int int19 = strBuilder18.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.replaceFirst(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendln((java.lang.Object) (short) 1);
        java.lang.String str63 = strBuilder61.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.insert((int) (byte) 1, (long) (short) 0);
        int int70 = strBuilder68.indexOf("sehi!!");
        boolean boolean72 = strBuilder68.contains("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder21.append(strBuilder68, (int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendln(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.replace(4, (-1), "########0.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(stringBuffer2);
        java.lang.String str5 = strBuilder3.rightString((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(strBuilder6, 30, 44);
        java.lang.String str10 = strBuilder9.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "!ih100.00\n" + "'", str5, "!ih100.00\n");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "!ih100.00\n" + "'", str10, "!ih100.00\n");
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("hi!");
        java.lang.String str27 = strBuilder24.midString((int) 'a', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.deleteFirst("ehi!0a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendSeparator("i!", 20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(17, (long) 23);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 17");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setIgnoredChar(' ');
        java.lang.String str29 = strTokenizer28.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean75 = strBuilder66.contains(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher74);
        int int77 = strBuilder51.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer35.setIgnoredMatcher(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer31.setDelimiterMatcher(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer31.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer85, "eh!0a\nStrT");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.deleteFirst(strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder87.append("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.appendSeparator('!', 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder94.appendSeparator("", "hai!hi!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((float) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (short) 10, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(0.0d);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        int int14 = strBuilder11.indexOf("hi!\n", 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append((float) 18L);
        java.util.stream.IntStream intStream17 = strBuilder11.codePoints();
        char[] charArray20 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.append(stringBuffer43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int46 = strBuilder44.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '4', 'h');
        char[] charArray53 = strBuilder11.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder11.deleteFirst("1hi!hi!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "hi!a18.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "hi!a18.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[h, i, !, a, 1, 8, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setEmptyTokenAsNull(false);
        java.lang.String str29 = strTokenizer26.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer26.setDelimiterMatcher(strMatcher32);
        boolean boolean36 = strTokenizer26.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList37 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder10.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList37, "hi!3");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterMatcher(strMatcher42);
        java.util.List<java.lang.String> strList44 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendAll((java.lang.Iterable<java.lang.String>) strList44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert(44, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 44");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "!ih100.0" + "'", str29, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int22 = strBuilder18.lastIndexOf(strMatcher20, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll('a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.appendln((double) 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.deleteFirst('1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", 'h');
        boolean boolean33 = strTokenizer32.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setDelimiterString("falsehi!!i!#hi!\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer36);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean4 = strTokenizer3.isEmptyTokenAsNull();
        boolean boolean5 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setIgnoredChar('.');
        boolean boolean8 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.reset("StrTokenizer[]");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.add("Tokenizer[!ih100.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean14 = strBuilder5.contains(strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer1.setDelimiterMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setIgnoredMatcher(strMatcher19);
        char[] charArray23 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append(stringBuffer46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int49 = strBuilder47.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean62 = strBuilder53.contains(strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher61, strMatcher63);
        char[] charArray67 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer64.reset(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer50.reset(charArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, "!i");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = strMatcher19.isMatch(charArray67, 23);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder14.append(stringBuffer22, 1, (int) (byte) 1);
        int int26 = strBuilder25.capacity();
        int int29 = strBuilder25.lastIndexOf('h', (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setCharAt((int) '0', '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 48");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 35 + "'", int26 == 35);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append(false);
        java.io.Writer writer34 = strBuilder33.asWriter();
        java.io.IOException iOException35 = new java.io.IOException();
        java.io.IOException iOException36 = new java.io.IOException();
        java.io.IOException iOException37 = new java.io.IOException();
        iOException36.addSuppressed((java.lang.Throwable) iOException37);
        iOException35.addSuppressed((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException();
        java.io.IOException iOException41 = new java.io.IOException();
        iOException40.addSuppressed((java.lang.Throwable) iOException41);
        iOException37.addSuppressed((java.lang.Throwable) iOException41);
        java.io.IOException iOException44 = new java.io.IOException();
        java.io.IOException iOException45 = new java.io.IOException();
        java.io.IOException iOException46 = new java.io.IOException();
        iOException45.addSuppressed((java.lang.Throwable) iOException46);
        iOException44.addSuppressed((java.lang.Throwable) iOException46);
        java.io.IOException iOException49 = new java.io.IOException();
        java.io.IOException iOException50 = new java.io.IOException();
        iOException49.addSuppressed((java.lang.Throwable) iOException50);
        iOException46.addSuppressed((java.lang.Throwable) iOException50);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException50);
        iOException37.addSuppressed((java.lang.Throwable) iOException50);
        java.io.IOException iOException55 = new java.io.IOException();
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) iOException55);
        iOException37.addSuppressed((java.lang.Throwable) iOException55);
        java.lang.Throwable[] throwableArray58 = iOException55.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder33.appendWithSeparators((java.lang.Object[]) throwableArray58, "hi!");
        int int62 = strBuilder33.indexOf('.');
        boolean boolean63 = strBuilder33.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int19 = strBuilder12.lastIndexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln((long) 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.deleteAll(strMatcher40);
        java.lang.String str44 = strBuilder30.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder30.appendSeparator('a', '#');
        char[] charArray50 = strBuilder47.toCharArray(0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder22.appendln(charArray50, 50, 24);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 24");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.lang.String str6 = strBuilder4.substring((int) (byte) 1);
        int int8 = strBuilder4.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.append(false);
        boolean boolean12 = strBuilder10.endsWith("!ih100.04\nStrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append((float) 100L);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.deleteAll(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder10.append(strBuilder34);
        int int37 = strBuilder35.lastIndexOf(" ih100.00");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "i!" + "'", str6, "i!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        writer24.write("hi!\n", (int) (byte) 0, 0);
        writer24.write("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        java.io.Writer writer87 = writer24.append(' ');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer87);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("StrTokenizer[!ih100.0]");
        int int9 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setQuoteChar('!');
        int int12 = strTokenizer11.size();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer11.add("rTokenizer[!ih100.0]\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        boolean boolean25 = strBuilder21.contains('#');
        char[] charArray26 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("falsehi!");
        boolean boolean34 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer31.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer27.setTrimmerMatcher(strMatcher35);
        boolean boolean37 = strTokenizer27.hasNext();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "falsehi!0a\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "falsehi!0a\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[f, a, l, s, e, h, i, !, 0, a, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendSeparator("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean31 = strBuilder22.contains(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.deleteAll(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder34, 16, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.replaceFirst('a', '!');
        char[] charArray45 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "java.io.IOException: 1hi!hi!");
        // The following exception was thrown during execution in test generation
        try {
            strBuilder40.getChars(52, 48, charArray45, 54);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 48");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendFixedWidthPadRight(0, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(false);
        boolean boolean43 = strTokenizer42.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder11.insert((int) (byte) 0, (java.lang.Object) boolean43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceAll('#', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendSeparator("001");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.insert(56, '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 56");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.ensureCapacity(8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setIgnoredChar(' ');
        java.lang.String str33 = strTokenizer32.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.replaceFirst(strMatcher34, "!ih100.010\n[!ih]####################");
        boolean boolean38 = strBuilder36.endsWith("StrTokenizer[4a]");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        int int31 = strBuilder11.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.setNewLineText("hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder11.deleteAll("4a");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder11.append((java.lang.CharSequence) "!ih100.0100.0!\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        java.util.List<java.lang.String> strList7 = strTokenizer6.getTokenList();
        java.lang.String str8 = strTokenizer6.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        writer24.close();
        writer24.write("sehi!!");
        java.io.Writer writer84 = writer24.append('a');
        // The following exception was thrown during execution in test generation
        try {
            writer84.write("ih100.0", (int) (short) 1, 44);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer84);
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder15.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendPadding(52, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.delete(7, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) 72);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.reverse();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence44 = strBuilder40.subSequence((int) 'h', 109);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 109");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((float) 8);
        java.lang.String str20 = strBuilder19.getNullText();
        int int22 = strBuilder19.lastIndexOf("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(78, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 78");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder14.appendln('h');
        int int44 = strBuilder43.capacity();
        int int46 = strBuilder43.lastIndexOf('a');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 35 + "'", int44 == 35);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        boolean boolean13 = strBuilder1.startsWith("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.appendln(0.0d);
        int int17 = strBuilder15.lastIndexOf("hi!\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendSeparator('i');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.setNewLineText("!");
        int int34 = strBuilder29.indexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln(stringBuffer46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.replaceFirst(strMatcher48, "hi!");
        int int53 = strBuilder50.lastIndexOf("", (int) (byte) 0);
        java.lang.String str56 = strBuilder50.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll("", "hi!");
        int int73 = strBuilder71.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer82 = strBuilder81.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder50.append(stringBuffer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder29.append(stringBuffer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder11.appendln(stringBuffer82);
        int int88 = strBuilder11.indexOf("11.0", 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder11.appendFixedWidthPadLeft((int) 'h', 8, 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.insert(44, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 44");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "h" + "'", str56, "h");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(stringBuffer82);
        org.junit.Assert.assertEquals(stringBuffer82.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        boolean boolean21 = strBuilder18.startsWith("java.io.IOException: !ih100.0");
        java.util.stream.IntStream intStream22 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(2, (java.lang.Object) "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder38.asTokenizer();
        java.lang.String str43 = strTokenizer42.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.delete(3, 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.reverse();
        int int52 = strBuilder49.lastIndexOf("hi!!ih100.0#a\nfalse!!!!!!!!!!!!!!!!", (int) (short) 10);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '1');
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        iOException0.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        iOException2.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        iOException9.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        iOException11.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException2.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        iOException20.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException25 = new java.io.IOException();
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        iOException22.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException();
        java.io.IOException iOException30 = new java.io.IOException();
        java.io.IOException iOException31 = new java.io.IOException();
        iOException30.addSuppressed((java.lang.Throwable) iOException31);
        iOException29.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        iOException31.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException35);
        iOException22.addSuppressed((java.lang.Throwable) iOException35);
        iOException2.addSuppressed((java.lang.Throwable) iOException35);
        java.lang.Throwable[] throwableArray41 = iOException2.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.String str45 = iOException2.toString();
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "java.io.IOException" + "'", str45, "java.io.IOException");
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst('!', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.trim();
        int int34 = strBuilder32.indexOf("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceFirst('h', 'f');
        java.util.stream.IntStream intStream38 = strBuilder32.chars();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        int int31 = strBuilder11.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.replaceAll('4', '!');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.insert((int) (byte) 0, (float) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strBuilder55.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder55.replaceFirst("StrTokenizer[!ih100.0]", "!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setIgnoredChar(' ');
        java.lang.String str69 = strTokenizer68.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer68.setDelimiterString("StrTokenizer[!ih100.0]");
        java.lang.Object obj74 = strTokenizer68.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer68.setIgnoredMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer68.getDelimiterMatcher();
        boolean boolean79 = strBuilder55.contains(strMatcher78);
        int int81 = strBuilder34.indexOf(strMatcher78, 112);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strBuilder14.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder28.deleteAll(strMatcher38);
        boolean boolean41 = strBuilder14.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer2.setQuoteMatcher(strMatcher38);
        boolean boolean43 = strTokenizer42.isIgnoreEmptyTokens();
        boolean boolean44 = strTokenizer42.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendNull();
        int int29 = strBuilder22.lastIndexOf("!ih", 10);
        boolean boolean31 = strBuilder22.contains("##########################################0.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder22.appendln(true);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray36 = strBuilder33.toCharArray(17, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceAll("", "hi!");
        int int49 = strBuilder47.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.setLength((int) '4');
        boolean boolean58 = strBuilder32.equalsIgnoreCase(strBuilder57);
        boolean boolean59 = strBuilder20.equalsIgnoreCase(strBuilder57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendln("java.io.IOException: java.io.IOException", (int) (short) 10, (int) '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendSeparator("i", (int) (short) -1);
        java.util.stream.IntStream intStream29 = strBuilder28.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.setNullText("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.appendFixedWidthPadRight((int) '#', 1, '4');
        int int48 = strBuilder46.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.deleteFirst(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setLength(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.deleteFirst("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.append((java.lang.CharSequence) strBuilder56, 244, (int) 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        java.lang.String str17 = strTokenizer16.next();
        boolean boolean18 = strTokenizer16.hasPrevious();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#a" + "'", str17, "#a");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.replaceAll(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.reverse();
        java.io.Writer writer19 = strBuilder18.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder21.append((int) (short) 0);
        java.io.Writer writer37 = writer19.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.appendln('a');
        boolean boolean41 = strBuilder39.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder1.append((java.lang.CharSequence) strBuilder39, 34, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder68.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setEmptyTokenAsNull(false);
        java.lang.String str75 = strTokenizer72.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder46.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        java.util.stream.IntStream intStream77 = strBuilder46.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder46.appendln((double) (-1.0f));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        boolean boolean83 = strTokenizer82.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer82.setDelimiterMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder46.replaceFirst(strMatcher85, "##########################################0.0\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder44.append((java.lang.CharSequence) strBuilder46, 115, (int) 'i');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "!ih100.0" + "'", str75, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(intStream77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        java.lang.String str29 = strBuilder24.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder33.replaceAll(strMatcher39, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean62 = strTokenizer61.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer61, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder24.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader66 = strBuilder65.asReader();
        boolean boolean67 = reader66.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder10.append((java.lang.Object) reader66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.clear();
        boolean boolean72 = strBuilder68.startsWith("01hi!\n");
        int int73 = strBuilder68.size();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "!" + "'", str29, "!");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("hi!");
        java.lang.String str27 = strBuilder24.midString((int) 'a', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.deleteFirst("ehi!0a\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.replaceAll(strMatcher40, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean63 = strTokenizer62.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder34.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer62, "!ih100.0");
        char[] charArray68 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder34.appendln(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        int int77 = strMatcher32.isMatch(charArray68, (int) (short) 0, (int) 'h', 212);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder29.appendln(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder29.insert((int) (byte) 1, '#');
        java.lang.Class<?> wildcardClass82 = strBuilder81.getClass();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        java.lang.Object obj19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(obj19);
        java.lang.String str22 = strBuilder20.leftString(14);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "!ih100.0\n" + "'", str22, "!ih100.0\n");
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int22 = strBuilder18.lastIndexOf(strMatcher20, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll('a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.appendln((double) 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.deleteFirst('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        java.lang.String str46 = strBuilder41.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean71 = strBuilder62.contains(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder50.replaceAll(strMatcher56, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean79 = strTokenizer78.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder50.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer78, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder41.appendln((java.lang.Object) "!ih100.0");
        int int84 = strBuilder41.indexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder41.replaceFirst('!', '#');
        java.lang.StringBuffer stringBuffer88 = strBuilder41.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder18.append(stringBuffer88, 54, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "!" + "'", str46, "!");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(stringBuffer88);
        org.junit.Assert.assertEquals(stringBuffer88.toString(), "#ih100.01.0!ih100.0\n");
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        java.io.IOException iOException1 = new java.io.IOException("\n530.001hi!");
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        reader24.close();
        reader24.reset();
        long long28 = reader24.skip((long) (byte) 0);
        reader24.reset();
        int int30 = reader24.read();
        reader24.reset();
        boolean boolean32 = reader24.markSupported();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 33 + "'", int30 == 33);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        java.lang.String str29 = strBuilder26.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.appendSeparator('h', '4');
        char[] charArray37 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder34.deleteFirst(strMatcher49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder1.replace(strMatcher49, "!hi!StrTokenizer[hi!]", 112, 115, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        java.lang.Object obj25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(obj25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        int int42 = strBuilder31.indexOf(strMatcher36, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder31.replaceAll("i!", "!ih100.0");
        boolean boolean46 = strBuilder24.equals(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.clear();
        int int50 = strBuilder47.lastIndexOf('f', 43);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0!", 'f');
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder18.deleteFirst(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.append('a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder18.append((java.lang.CharSequence) strBuilder80, 102, 74);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(7, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        boolean boolean38 = strBuilder25.equalsIgnoreCase(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder25.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.append(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replace((int) ' ', 27, "!i0.001hi!hi!30.001hi 1h100.0a#!4a");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\na0!iheslaf1\n", "1hi!hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll("", "hi!");
        int int19 = strBuilder17.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder17.appendFixedWidthPadLeft((java.lang.Object) strBuilder35, 1, ' ');
        char[] charArray39 = strBuilder38.toCharArray();
        char[] charArray42 = strBuilder38.toCharArray(6, 11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer2.reset(charArray42);
        boolean boolean44 = strTokenizer2.hasNext();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), ".0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), ".0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[., 0, !]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer20.setQuoteMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer20.getTrimmerMatcher();
        int int46 = strBuilder4.lastIndexOf(strMatcher44, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder4.appendln('a');
        boolean boolean50 = strBuilder48.contains("0.001hi!");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((long) (short) 1);
        java.lang.String str31 = strBuilder30.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(1, "");
        java.lang.String str36 = strBuilder34.leftString((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence39 = strBuilder34.subSequence(5, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\na0!iheslaf1\n" + "'", str36, "\na0!iheslaf1\n");
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.replaceAll('!', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.setCharAt(2, '4');
        char[] charArray50 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        char[] charArray60 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        java.util.stream.IntStream intStream66 = strBuilder65.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.deleteFirst(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer57.reset(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer55.reset(charArray60);
        char[] charArray75 = strBuilder44.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder44.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst('h', 'v');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.replaceFirst(strMatcher87, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder84.replaceAll(strMatcher87, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder84.reverse();
        java.io.Writer writer93 = strBuilder92.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder92.appendPadding(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder79.append(strBuilder96);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder79.append("ih100.010.0i!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(intStream66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#i4100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#i4100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, i, 4, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(writer93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendln((long) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder14.appendFixedWidthPadRight((java.lang.Object) strList42, 25, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder14.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder14.delete(33, 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("!ih100.0", "!ih100.0");
        int int62 = strBuilder56.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator(' ', '1');
        java.lang.Object obj72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.appendFixedWidthPadLeft(obj72, (int) (byte) 1, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.replaceFirst("0.00hi!0.00hi ", "1hi!hi!10.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder51.append(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.replaceAll('#', 'a');
        boolean boolean75 = strBuilder55.equals((java.lang.Object) strBuilder70);
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.append(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendSeparator('#', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.deleteAll('1');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.insert(0, charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        java.util.stream.IntStream intStream49 = strBuilder48.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder25.append((java.lang.CharSequence) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder25.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("!ih100.04\nStrTokenizer[not tokenized yet]", "!ih");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray65 = strBuilder62.toCharArray((int) (byte) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(intStream49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        int int45 = strBuilder18.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder18.appendPadding(1, '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder18.insert(109, 54);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 109");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        boolean boolean8 = strTokenizer7.hasNext();
        int int9 = strTokenizer7.nextIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        int int41 = strBuilder1.indexOf('4');
        java.lang.String str42 = strBuilder1.toString();
        int int43 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder1.appendFixedWidthPadRight((java.lang.Object) ' ', 33, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((float) (byte) 10);
        int int67 = strBuilder62.indexOf("!ih100.00\n", (int) 'i');
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!!ih100.0#a\n" + "'", str42, "hi!!ih100.0#a\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 14 + "'", int43 == 14);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        java.io.Reader reader42 = strBuilder14.asReader();
        boolean boolean43 = reader42.ready();
        long long45 = reader42.skip(1L);
        reader42.close();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((double) (byte) 10);
        int int33 = strBuilder30.length();
        java.util.stream.IntStream intStream34 = strBuilder30.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendln((float) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.appendln(stringBuffer50);
        java.lang.String str52 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceAll("", "hi!");
        int int69 = strBuilder67.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst(strMatcher80, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder77.replaceAll(strMatcher80, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean86 = strBuilder77.contains(strMatcher85);
        java.lang.StringBuffer stringBuffer87 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder77.appendln(stringBuffer87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder77.replaceFirst(strMatcher89, "hi!");
        int int92 = strBuilder74.indexOf(strMatcher89);
        int int94 = strBuilder67.indexOf(strMatcher89, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder40.replaceFirst(strMatcher89, "StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder38.deleteAll(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer18.setIgnoredMatcher(strMatcher89);
        int int99 = strTokenizer98.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 12 + "'", int33 == 12);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!\n" + "'", str52, "hi!\n");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        writer79.flush();
        writer79.flush();
        writer79.write("!ih100.010.0i!hi!97!!!\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        int int19 = strBuilder18.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.replaceFirst(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendln((java.lang.Object) (short) 1);
        java.lang.String str63 = strBuilder61.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.insert((int) (byte) 1, (long) (short) 0);
        int int70 = strBuilder68.indexOf("sehi!!");
        boolean boolean72 = strBuilder68.contains("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder21.append(strBuilder68, (int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendln(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.insert(56, 48);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 56");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: ih100.010.0i!");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        java.lang.String str19 = strBuilder16.leftString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.replaceAll("i!hi!97!!!", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        java.lang.String str26 = strBuilder23.midString((int) (byte) 100, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.insert(0, "!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.deleteAll("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteAll("!ih100.00\n");
        int int35 = strBuilder31.lastIndexOf('f');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.append(false);
        boolean boolean39 = strBuilder37.contains("0.00hi!0.00hi ");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!" + "'", str19, "!");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendPadding(9, 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.setNullText("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(false);
        java.lang.String str43 = strTokenizer40.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer40.setDelimiterMatcher(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setIgnoredChar('a');
        char[] charArray54 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer49.reset(charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setQuoteMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer69.getDelimiterMatcher();
        int int73 = strBuilder24.lastIndexOf(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "!ih100.0" + "'", str43, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 9 + "'", int73 == 9);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("h");
        char[] charArray47 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer42.setTrimmerMatcher(strMatcher56);
        java.lang.Object obj59 = strTokenizer58.clone();
        java.lang.Object obj60 = strTokenizer58.clone();
        boolean boolean61 = strTokenizer58.hasNext();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset("hi!97!!!!!!!!!!!!!!!!!");
        java.lang.String str4 = strTokenizer3.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!97!!!!!!!!!!!!!!!!!" + "'", str4, "hi!97!!!!!!!!!!!!!!!!!");
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("hi!");
        boolean boolean49 = strBuilder23.equals(strBuilder46);
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln("hi!97!!!!!!!!!!!!!!!!!");
        int int59 = strBuilder54.lastIndexOf('f', 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.appendln((float) 4L);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.replaceAll(' ', '.');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer24.append('h');
        writer24.write("hi!97!!!!!!!!!!!!!!!!!");
        writer24.write(0);
        writer24.write("StrTokenizer[hi!3]");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.replaceAll('#', 'a');
        boolean boolean35 = strBuilder15.equals((java.lang.Object) strBuilder30);
        java.lang.StringBuffer stringBuffer36 = strBuilder30.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        java.lang.String str54 = strBuilder49.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.append("");
        char[] charArray57 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder30.insert(57, charArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 57");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(stringBuffer36);
        org.junit.Assert.assertEquals(stringBuffer36.toString(), "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "!" + "'", str54, "!");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst('#', 'h');
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) '4');
        int int17 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoredChar(' ');
        java.lang.String str22 = strTokenizer21.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer21.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setDelimiterString("StrTokenizer[!ih100.0]");
        int int27 = strTokenizer26.nextIndex();
        boolean boolean28 = strTokenizer26.isIgnoreEmptyTokens();
        java.lang.String str29 = strTokenizer26.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "java.io.IOException: hi!");
        java.util.List<java.lang.String> strList32 = strTokenizer26.getTokenList();
        java.lang.Class<?> wildcardClass33 = strList32.getClass();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!ih100.0" + "'", str16, "!ih100.0");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('!');
        boolean boolean5 = strTokenizer1.isEmptyTokenAsNull();
        boolean boolean6 = strTokenizer1.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((float) 30);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder19.replaceAll(strMatcher25, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder45.replaceAll(strMatcher51, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder45.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer73, "!ih100.0");
        char[] charArray79 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder45.appendln(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ', ' ');
        char[] charArray88 = strBuilder19.getChars(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, "!ih100.00");
        // The following exception was thrown during execution in test generation
        try {
            strBuilder15.getChars((int) '4', 43, charArray88, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 43");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[h, i, !]");
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        char[] charArray19 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer28.setQuoteMatcher(strMatcher48);
        char[] charArray54 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer51.reset(charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher60);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder4.insert(115, charArray19, 8, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 115");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher60);
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendSeparator("i!");
        boolean boolean42 = strBuilder7.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.setLength(17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append("hi!!ih100.0#a\nhi!", 32, 112);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        int int28 = strBuilder17.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.append(1.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer33.setQuoteMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer33.getTrimmerMatcher();
        int int59 = strBuilder17.lastIndexOf(strMatcher57, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder4.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder4.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder4.trim();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        int int34 = strBuilder32.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        java.util.stream.IntStream intStream40 = strBuilder39.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder42.appendln(stringBuffer52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder42.replaceFirst(strMatcher54, "hi!");
        int int57 = strBuilder39.indexOf(strMatcher54);
        int int59 = strBuilder32.indexOf(strMatcher54, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder32.replaceAll('!', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder11.appendFixedWidthPadRight((java.lang.Object) strBuilder62, (int) '!', '.');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray68 = strBuilder65.toCharArray((int) '4', 72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        int int41 = strTokenizer40.previousIndex();
        boolean boolean42 = strTokenizer40.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer40.setEmptyTokenAsNull(true);
        java.lang.String str45 = strTokenizer44.next();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#a" + "'", str45, "#a");
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        java.lang.CharSequence charSequence36 = strBuilder33.subSequence(1, (int) (short) 1);
        boolean boolean38 = strBuilder33.endsWith("!ih100.0");
        char char40 = strBuilder33.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendln(stringBuffer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder45.replaceFirst(strMatcher57, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.append((java.lang.CharSequence) strBuilder59);
        char[] charArray63 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher68, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder60.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.replaceAll(strMatcher72, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder19.appendNewLine();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + '!' + "'", char40 == '!');
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder14.append(stringBuffer22, 1, (int) (byte) 1);
        char[] charArray26 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        java.util.stream.IntStream intStream33 = strBuilder32.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        boolean boolean50 = strBuilder32.contains(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.replaceAll(strMatcher75, "");
        int int81 = strBuilder70.indexOf(strMatcher75, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder65.append(strBuilder70, (int) (byte) 1, 0);
        int int85 = strBuilder84.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.appendFixedWidthPadLeft(10, 3, '!');
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        int int93 = strBuilder89.indexOf(strMatcher91, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("ih100.010.0i!", strMatcher45, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher45);
        boolean boolean96 = strTokenizer95.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 8 + "'", int85 == 8);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10 + "'", int93 == 10);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        int int10 = strBuilder4.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        int int28 = strBuilder26.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder30.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.replaceFirst(strMatcher42, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder26.appendFixedWidthPadLeft((java.lang.Object) strBuilder44, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder26.reverse();
        char[] charArray51 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, 'a');
        char[] charArray57 = strBuilder26.getChars(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '4', '0');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder4.insert(44, charArray51, 19, 212);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 44");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[!, 0, ., 0, 0, 1, h, i, !]");
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder4.appendln(strBuilder19, 9, 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.append('!');
        int int28 = strBuilder19.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.appendSeparator("!ih100.01");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.minimizeCapacity();
        boolean boolean65 = strBuilder63.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder45.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterMatcher(strMatcher73);
        java.util.List<java.lang.String> strList75 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendAll((java.lang.Iterable<java.lang.String>) strList75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.replaceAll(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strBuilder88.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer92.setDelimiterMatcher(strMatcher94);
        boolean boolean96 = strBuilder76.contains(strMatcher94);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder19.deleteAll(strMatcher94);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder97.appendln(strBuilder98);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 35 + "'", int28 == 35);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.lang.String str4 = strTokenizer3.next();
        int int5 = strTokenizer3.previousIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "!ih" + "'", str4, "!ih");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer30.setQuoteMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoredChar('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.minimizeCapacity();
        boolean boolean73 = strBuilder71.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.appendFixedWidthPadLeft((int) '4', 1, '#');
        char[] charArray81 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer90.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, strMatcher91);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher93);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder71.deleteFirst(strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer55.setQuoteMatcher(strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer24.setTrimmerMatcher(strMatcher93);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer97);
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.util.stream.IntStream intStream19 = strBuilder17.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendSeparator("#i4100.0", "01hi!\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.deleteAll(strMatcher46);
        boolean boolean49 = strBuilder22.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer10.setQuoteMatcher(strMatcher46);
        java.lang.String str51 = strTokenizer50.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer50.setTrimmerMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder70.replaceAll(strMatcher73, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean79 = strBuilder70.contains(strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder70.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder70.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder70.replaceAll(strMatcher86, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder68.replaceAll(strMatcher86, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer50.setDelimiterMatcher(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder4.deleteFirst(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder4.appendln((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder94.deleteAll("\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder96.deleteFirst('i');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.setLength(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        boolean boolean40 = strTokenizer39.hasPrevious();
        java.lang.String[] strArray41 = strTokenizer39.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.appendAll((java.lang.Object[]) strArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.delete((int) (short) 0, 17);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.delete(7, 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((long) 105);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendln(strBuilder69, 14, (int) (short) 0);
        java.lang.StringBuffer stringBuffer73 = strBuilder72.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder35.appendln(stringBuffer73, 100, 53);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(stringBuffer73);
        org.junit.Assert.assertEquals(stringBuffer73.toString(), "!ih100.false105\n\n");
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) iOException10, (int) '!', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean43 = strBuilder34.contains(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.replaceAll(strMatcher28, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder48.replaceAll(strMatcher54, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder48.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer76, "!ih100.0");
        char[] charArray82 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder48.appendln(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ', ' ');
        char[] charArray91 = strBuilder22.getChars(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray91, "!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray91);
        char[] charArray95 = strBuilder4.getChars(charArray91);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[h, i, !]");
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "              noitpecxEOI.oi.avaj#!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "              noitpecxEOI.oi.avaj#!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[ ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  , n, o, i, t, p, e, c, x, E, O, I, ., o, i, ., a, v, a, j, #, !, i, h]");
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        boolean boolean21 = strBuilder18.startsWith("java.io.IOException: !ih100.0");
        java.util.stream.IntStream intStream22 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(2, (java.lang.Object) "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((long) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setEmptyTokenAsNull(false);
        java.lang.String str59 = strTokenizer56.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer56);
        java.util.stream.IntStream intStream61 = strBuilder30.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder30.appendSeparator(' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "hi!3");
        boolean boolean68 = strBuilder26.contains(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "!ih100.0" + "'", str59, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        boolean boolean11 = strBuilder1.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        java.lang.String str28 = strBuilder23.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.replaceFirst(strMatcher32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder1.appendln(strBuilder23, 1, 0);
        char[] charArray40 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        char[] charArray50 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        java.util.stream.IntStream intStream56 = strBuilder55.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.deleteFirst(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer47.reset(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer45.reset(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        java.util.stream.IntStream intStream70 = strBuilder69.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.deleteFirst(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.appendSeparator("", "!ih");
        char[] charArray81 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer90.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder78.deleteAll(strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher91);
        boolean boolean95 = strBuilder37.contains(strMatcher91);
        char[] charArray98 = strBuilder37.toCharArray((int) (short) 1, 200);
        boolean boolean99 = strBuilder37.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "!" + "'", str28, "!");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(intStream70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(charArray98);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray98), "ih\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray98), "ih\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray98), "[i, h, \n]");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi", '#', 'h');
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        int int19 = strBuilder18.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.replaceFirst(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendln((java.lang.Object) (short) 1);
        java.lang.String str63 = strBuilder61.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.insert((int) (byte) 1, (long) (short) 0);
        int int70 = strBuilder68.indexOf("sehi!!");
        boolean boolean72 = strBuilder68.contains("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder21.append(strBuilder68, (int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder68.insert(7, (double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst(strMatcher82, "");
        java.util.stream.IntStream intStream85 = strBuilder84.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder84.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.deleteAll("i!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder68.appendln(strBuilder92, 78, 90);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(intStream85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.appendSeparator("ih100.0StrTokenizer[ih100.0]StrTo", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll("", "hi!");
        int int51 = strBuilder49.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder49.setLength((int) '4');
        java.lang.Object obj60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln(obj60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.delete(11, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder70.replaceAll(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst(strMatcher82, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.replaceAll(strMatcher82, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean88 = strBuilder79.contains(strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher73, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer67.setQuoteMatcher(strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer67.setEmptyTokenAsNull(true);
        java.lang.String str93 = strTokenizer92.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer92.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder59.append((java.lang.Object) strMatcher94);
        int int97 = strBuilder34.indexOf(strMatcher94, 54);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendSeparator("\n");
        java.lang.String str12 = strBuilder11.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.insert(200, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 200");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        int int36 = strBuilder25.indexOf(strMatcher30, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.deleteFirst(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteFirst("0.001hi !ih100.0\n\n");
        java.lang.String str46 = strBuilder41.leftString(7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder37.appendln(strBuilder41, 29, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        long long81 = reader53.skip((long) (short) 10);
        long long83 = reader53.skip((long) ' ');
        reader53.mark(212);
        reader53.mark(19);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8L + "'", long83 == 8L);
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        boolean boolean34 = strBuilder1.startsWith("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendFixedWidthPadRight((int) '#', 1, '4');
        int int51 = strBuilder49.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        int int71 = strBuilder69.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer80 = strBuilder79.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder54.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder1.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.insert(4, 40);
        int int88 = strBuilder85.indexOf("00.00.", 0);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 9 + "'", int88 == 9);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        boolean boolean3 = strTokenizer2.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("100.0100.0", strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('a', 'a');
        int int21 = strBuilder18.indexOf("hi!\n", 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append((float) 18L);
        java.util.stream.IntStream intStream24 = strBuilder18.codePoints();
        char[] charArray27 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.append(stringBuffer50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int53 = strBuilder51.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4', 'h');
        char[] charArray60 = strBuilder18.getChars(charArray27);
        int int62 = strMatcher6.isMatch(charArray60, 74);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "hi!a18.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "hi!a18.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[h, i, !, a, 1, 8, ., 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((float) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (short) 10, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        java.lang.CharSequence charSequence39 = strBuilder36.subSequence(1, (int) (short) 1);
        int int42 = strBuilder36.lastIndexOf("!", (int) (byte) 1);
        int int45 = strBuilder36.indexOf("hi!", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln(11);
        java.io.IOException iOException48 = new java.io.IOException();
        java.io.IOException iOException49 = new java.io.IOException();
        java.io.IOException iOException50 = new java.io.IOException();
        iOException49.addSuppressed((java.lang.Throwable) iOException50);
        iOException48.addSuppressed((java.lang.Throwable) iOException50);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        iOException50.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException57 = new java.io.IOException();
        java.io.IOException iOException58 = new java.io.IOException();
        java.io.IOException iOException59 = new java.io.IOException();
        iOException58.addSuppressed((java.lang.Throwable) iOException59);
        iOException57.addSuppressed((java.lang.Throwable) iOException59);
        java.io.IOException iOException62 = new java.io.IOException();
        java.io.IOException iOException63 = new java.io.IOException();
        iOException62.addSuppressed((java.lang.Throwable) iOException63);
        iOException59.addSuppressed((java.lang.Throwable) iOException63);
        java.io.IOException iOException66 = new java.io.IOException((java.lang.Throwable) iOException63);
        iOException50.addSuppressed((java.lang.Throwable) iOException63);
        java.lang.Throwable[] throwableArray68 = iOException50.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder36.appendWithSeparators((java.lang.Object[]) throwableArray68, "java.io.IOException: !ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder23.appendWithSeparators((java.lang.Object[]) throwableArray68, "##########################################0.0\n");
        java.lang.String str74 = strBuilder23.rightString(10);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "OException" + "'", str74, "OException");
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder40.reverse();
        char[] charArray65 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a');
        char[] charArray71 = strBuilder40.getChars(charArray65);
        int int72 = reader24.read(charArray71);
        long long74 = reader24.skip((long) 8);
        boolean boolean75 = reader24.markSupported();
        java.nio.CharBuffer charBuffer76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int77 = reader24.read(charBuffer76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 9 + "'", int72 == 9);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 8L + "'", long74 == 8L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.append(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher67);
        int int70 = strBuilder44.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer28.setIgnoredMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray21);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(7, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.setNullText("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.insert(72, (float) 200);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(".0");
        java.lang.String str3 = strBuilder1.leftString(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.deleteAll("4a");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendSeparator('i', 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean29 = strBuilder20.contains(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder18.deleteAll(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("hi!");
        boolean boolean36 = strBuilder10.equals(strBuilder33);
        char[] charArray37 = strBuilder33.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        boolean boolean40 = strTokenizer39.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoredChar(' ');
        java.lang.String str45 = strTokenizer44.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer44.setDelimiterString("StrTokenizer[!ih100.0]");
        int int50 = strTokenizer49.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer49.setDelimiterString("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer39.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder1.deleteFirst(strMatcher53);
        int int56 = strBuilder1.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder1.insert(112, "20.0falsei!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 112");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + ".0" + "'", str3, ".0");
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.replaceAll('#', 'a');
        boolean boolean35 = strBuilder15.equals((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.replaceFirst("#a", "!ih");
        java.lang.Object obj39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.append(obj39);
        char[] charArray43 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4');
        boolean boolean46 = strTokenizer45.hasNext();
        java.lang.Object obj47 = strTokenizer45.clone();
        char[] charArray50 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean78 = strBuilder69.contains(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder67.deleteAll(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln("hi!");
        boolean boolean85 = strBuilder59.equals(strBuilder82);
        char[] charArray86 = strBuilder82.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer57.reset(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer45.reset(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder40.append(charArray86, 0, 74);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 74");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.delete(7, 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.deleteAll(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer47.setQuoteMatcher(strMatcher67);
        char[] charArray73 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer70.reset(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder44.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer77, "!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setIgnoredChar('#');
        java.lang.String str82 = strTokenizer81.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer81.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder11.replace(strMatcher83, "hi!#java.io.IOException              ", 90, 34, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "#a" + "'", str82, "#a");
        org.junit.Assert.assertNotNull(strMatcher83);
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(stringBuffer37);
        char[] charArray41 = strBuilder36.toCharArray((int) (byte) 1, (int) '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer1.reset(charArray41);
        java.lang.String str43 = strTokenizer1.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[., 0, 0, 1, h, i,  , !, i, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ".001hi !ih100.0" + "'", str43, ".001hi !ih100.0");
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean12 = strBuilder3.contains(strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher11, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher11, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("i!");
        int int19 = strTokenizer16.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = strTokenizer16.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendSeparator("sehi!!");
        char[] charArray24 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.append(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("java.io.IOException: ih100.010.0i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.deleteAll("a.25io.IOException");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[!, i, h, 1, 0, 0, ., 0, 1, s, e, h, i, !, !]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(stringBuffer35);
        char[] charArray39 = strBuilder34.toCharArray((int) (byte) 1, (int) '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!!!!!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[., 0, 0, 1, h, i,  , !, i, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer50);
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int63 = strBuilder50.indexOf('#', 100);
        boolean boolean64 = strBuilder38.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher76, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher76, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder85.appendSeparator("!!!!!!!!!!!!!!!!", 29);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write("i!", (int) (short) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.deleteAll(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((int) (byte) 10);
        char[] charArray58 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        java.util.stream.IntStream intStream64 = strBuilder63.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.deleteFirst(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.insert(6, charArray58);
        writer24.write(charArray58);
        // The following exception was thrown during execution in test generation
        try {
            writer24.write("java.io.IOException: StrTokenizer[]", 112, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoredChar('1');
        java.lang.String str28 = strTokenizer27.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer27.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        boolean boolean17 = strBuilder15.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        int int26 = strBuilder15.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        java.lang.String str43 = strBuilder38.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder53.deleteAll(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder38.deleteFirst(strMatcher63);
        int int67 = strBuilder15.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder15.deleteFirst('h');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append("StrTokenizer[not tokenized yet]", 29, 206);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "!" + "'", str43, "!");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher31);
        boolean boolean33 = strTokenizer32.isIgnoreEmptyTokens();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((float) (byte) 100);
        java.lang.CharSequence charSequence51 = strBuilder48.subSequence(1, (int) (short) 1);
        int int54 = strBuilder48.lastIndexOf("!", (int) (byte) 1);
        int int57 = strBuilder48.indexOf("hi!", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder48.appendln(11);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendSeparator("#");
        java.lang.String str64 = strBuilder59.midString((int) '4', 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendNewLine();
        char[] charArray68 = strBuilder59.toCharArray(1, 5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer32.reset(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer69.setIgnoreEmptyTokens(false);
        boolean boolean74 = strTokenizer73.hasNext();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "ih10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "ih10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[i, h, 1, 0]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((float) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (short) 10, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.reverse();
        // The following exception was thrown during execution in test generation
        try {
            char char26 = strBuilder24.charAt(57);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 57");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.replaceFirst("StrTokenizer[!ih100.0]", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendSeparator("1hi!hi!");
        int int24 = strBuilder20.indexOf("eh!0a\nStrT");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.append(0);
        int int29 = strBuilder20.indexOf(' ');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.append((double) 11);
        java.lang.String str25 = strBuilder11.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder33.deleteAll(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("hi!");
        java.lang.String str53 = strBuilder50.midString((int) 'a', (int) (byte) 100);
        boolean boolean54 = strBuilder11.equalsIgnoreCase(strBuilder50);
        // The following exception was thrown during execution in test generation
        try {
            char char56 = strBuilder11.charAt(74);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 74");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "!ih100.0StrTokenizer[!ih100.0]11.0" + "'", str25, "!ih100.0StrTokenizer[!ih100.0]11.0");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getTrimmerMatcher();
        java.lang.String str19 = strTokenizer15.nextToken();
        int int20 = strTokenizer15.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer15.setDelimiterChar('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterChar('h');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("hi!");
        boolean boolean49 = strBuilder23.equals(strBuilder46);
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln("hi!97!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.append(10.0f);
        int int59 = strBuilder54.capacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 90 + "'", int59 == 90);
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        java.io.Reader reader19 = strBuilder4.asReader();
        boolean boolean20 = reader19.markSupported();
        int int21 = reader19.read();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 104 + "'", int21 == 104);
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterChar('!');
        java.lang.String str37 = strTokenizer36.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        boolean boolean14 = strTokenizer13.isIgnoreEmptyTokens();
        int int15 = strTokenizer13.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strMatcher16);
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        int int2 = strTokenizer1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        iOException1.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        iOException3.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException11 = new java.io.IOException("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", (java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        java.lang.String str19 = strBuilder16.leftString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.replaceAll("i!hi!97!!!", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(18L);
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.replaceAll(strMatcher34, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean57 = strTokenizer56.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer56, "!ih100.0");
        char[] charArray62 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder28.appendln(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.reset("!ih100.0\n4\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer67.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder25.replaceFirst(strMatcher70, "!i0.");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln((float) 53);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!" + "'", str19, "!");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        boolean boolean54 = reader53.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        int int71 = strBuilder69.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher76, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean82 = strBuilder73.contains(strMatcher81);
        java.lang.StringBuffer stringBuffer83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder73.appendln(stringBuffer83);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder73.replaceFirst(strMatcher85, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder69.appendFixedWidthPadLeft((java.lang.Object) strBuilder87, 1, ' ');
        char[] charArray91 = strBuilder90.toCharArray();
        char[] charArray94 = strBuilder90.toCharArray(6, 11);
        int int95 = reader53.read(charArray94);
        boolean boolean96 = reader53.ready();
        long long98 = reader53.skip(0L);
        reader53.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[!, i, h]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 3 + "'", int95 == 3);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 0L + "'", long98 == 0L);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.insert(1, (float) 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendFixedWidthPadRight((int) (byte) 10, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.setNullText("");
        boolean boolean54 = strBuilder34.equals((java.lang.Object) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteFirst("!ih100.04\nStrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln('4');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int2 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight((int) '.', 22, ' ');
        boolean boolean8 = strBuilder6.contains("hi!!ih100.0#a");
        java.io.Writer writer9 = strBuilder6.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.insert(115, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 115");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(writer9);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder4.appendln(charArray21);
        java.io.IOException iOException36 = new java.io.IOException();
        java.io.IOException iOException37 = new java.io.IOException();
        java.io.IOException iOException38 = new java.io.IOException();
        iOException37.addSuppressed((java.lang.Throwable) iOException38);
        iOException36.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException43 = new java.io.IOException();
        java.io.IOException iOException44 = new java.io.IOException();
        iOException43.addSuppressed((java.lang.Throwable) iOException44);
        java.lang.Throwable[] throwableArray46 = iOException44.getSuppressed();
        java.io.IOException iOException47 = new java.io.IOException();
        java.io.IOException iOException48 = new java.io.IOException();
        iOException47.addSuppressed((java.lang.Throwable) iOException48);
        iOException44.addSuppressed((java.lang.Throwable) iOException47);
        java.io.IOException iOException51 = new java.io.IOException();
        java.io.IOException iOException52 = new java.io.IOException();
        java.io.IOException iOException53 = new java.io.IOException();
        iOException52.addSuppressed((java.lang.Throwable) iOException53);
        iOException51.addSuppressed((java.lang.Throwable) iOException53);
        java.io.IOException iOException56 = new java.io.IOException();
        java.io.IOException iOException57 = new java.io.IOException();
        iOException56.addSuppressed((java.lang.Throwable) iOException57);
        iOException53.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException57);
        iOException47.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException62 = new java.io.IOException("h", (java.lang.Throwable) iOException57);
        iOException36.addSuppressed((java.lang.Throwable) iOException62);
        java.io.IOException iOException64 = new java.io.IOException((java.lang.Throwable) iOException62);
        java.io.IOException iOException65 = new java.io.IOException((java.lang.Throwable) iOException62);
        java.lang.Throwable[] throwableArray66 = iOException65.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder35.appendAll((java.lang.Object[]) throwableArray66);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.insert(212, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 212");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int63 = strBuilder50.indexOf('#', 100);
        boolean boolean64 = strBuilder38.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher76, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher76, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder38.appendSeparator("!ih100.04\nStrTokenizer[not tokenized yet]");
        boolean boolean89 = strBuilder38.endsWith("StrTokenizer[not tokenized yet]");
        int int91 = strBuilder38.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder38.appendln((double) 6);
        java.lang.Class<?> wildcardClass94 = strBuilder38.getClass();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException", ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.add("0.0hi!97!!!!!!!!!!!!!!!!!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("hi!");
        java.lang.String str27 = strBuilder24.midString((int) 'a', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.deleteFirst("ehi!0a\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.replaceAll(strMatcher40, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean63 = strTokenizer62.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder34.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer62, "!ih100.0");
        char[] charArray68 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder34.appendln(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        int int77 = strMatcher32.isMatch(charArray68, (int) (short) 0, (int) 'h', 212);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder29.appendln(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder29.insert((int) (byte) 1, '#');
        int int83 = strBuilder81.lastIndexOf('a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 15 + "'", int83 == 15);
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset("!ih100.0#a");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(76);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("100.0100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean13 = strBuilder4.contains(strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher12, strMatcher14);
        char[] charArray18 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer15.reset(charArray18);
        java.lang.Object obj23 = strTokenizer15.clone();
        boolean boolean24 = strBuilder1.equals((java.lang.Object) strTokenizer15);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.set("java.io.IOException: !ih100.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        long long55 = reader53.skip((long) (byte) 100);
        reader53.close();
        int int57 = reader53.read();
        reader53.close();
        java.nio.CharBuffer charBuffer59 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int60 = reader53.read(charBuffer59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 20L + "'", long55 == 20L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll("", "hi!");
        int int26 = strBuilder24.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(stringBuffer45);
        char[] charArray49 = strBuilder44.toCharArray((int) (byte) 1, (int) '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!!!!!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher55, strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder9.appendFixedWidthPadLeft((java.lang.Object) strMatcher57, 100, '.');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[., 0, 0, 1, h, i,  , !, i, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("hi!\n", "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendln("StrTokenizer[not tokenized yet]", 41, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        java.lang.String str41 = strBuilder39.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setLength((int) (byte) 0);
        boolean boolean47 = strBuilder43.startsWith("!ih100.01.0");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("hi!");
        boolean boolean49 = strBuilder23.equals(strBuilder46);
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer57.setTrimmerMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder51.replaceFirst(strMatcher62, "hi!-1.0");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = strBuilder51.substring((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder27.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setEmptyTokenAsNull(false);
        java.lang.String str34 = strTokenizer31.next();
        java.lang.String str35 = strTokenizer31.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer31.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean60 = strBuilder51.contains(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder39.replaceAll(strMatcher45, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer31.setTrimmerMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer31.setIgnoredChar(' ');
        java.lang.String[] strArray67 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder13.appendAll((java.lang.Object[]) strArray67);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.insert(43, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 43");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "!ih100.0" + "'", str34, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "!ih100.0" + "'", str35, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!ih100.0\n4\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        int int37 = strBuilder26.indexOf(strMatcher31, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder14.append((java.lang.CharSequence) "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.insert((int) (short) 1, true);
        int int47 = strBuilder44.indexOf('4', 7);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append('4');
        java.io.Reader reader38 = strBuilder37.asReader();
        boolean boolean39 = reader38.markSupported();
        reader38.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[not tokenized yet]");
        java.lang.String str2 = strTokenizer1.next();
        boolean boolean3 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str2, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("hi!");
        java.lang.String str27 = strBuilder24.midString((int) 'a', (int) (byte) 100);
        java.lang.String str28 = strBuilder24.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.insert(212, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 212");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        java.lang.String str19 = strBuilder16.leftString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.replaceAll("i!hi!97!!!", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        java.lang.String str26 = strBuilder23.midString((int) (byte) 100, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.insert(0, "!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.deleteAll("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst('a');
        java.lang.String str35 = strBuilder33.leftString(35);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!" + "'", str19, "!");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "!!ih100.0" + "'", str35, "!!ih100.0");
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append((double) (-1L));
        java.lang.String str40 = strBuilder32.midString((int) (short) 0, (int) '.');
        int int41 = strBuilder32.length();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!hi!-1.0" + "'", str40, "hi!hi!-1.0");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.Object obj53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendFixedWidthPadLeft(obj53, (int) (byte) 1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendSeparator('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceAll(' ', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln((long) 25);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.reverse();
        int int66 = strBuilder64.indexOf("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.insert(6, (double) 18L);
        java.util.stream.IntStream intStream70 = strBuilder64.chars();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.insert(21, "hi!3\000\000\000\000!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 21");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(intStream70);
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setEmptyTokenAsNull(false);
        java.lang.String str29 = strTokenizer26.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer26.setDelimiterMatcher(strMatcher32);
        boolean boolean36 = strTokenizer26.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList37 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder10.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList37, "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder10.appendFixedWidthPadLeft(32, (int) (short) 10, 'a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "!ih100.0" + "'", str29, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.replaceAll('#', 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        char[] charArray24 = strBuilder22.toCharArray();
        java.util.stream.IntStream intStream25 = strBuilder22.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll("", "hi!");
        java.lang.String str60 = strBuilder55.leftString((int) '4');
        boolean boolean61 = strBuilder43.equalsIgnoreCase(strBuilder55);
        java.lang.StringBuffer stringBuffer62 = strBuilder55.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder22.appendln(stringBuffer62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder22.appendNull();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "hi!35\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "hi!35\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[h, i, !, 3, 5, \n]");
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "!ih100.0" + "'", str60, "!ih100.0");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.append(strBuilder9, 11, 9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setIgnoredChar(' ');
        int int17 = strTokenizer16.previousIndex();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.appendAll((java.lang.Iterable<java.lang.String>) strList19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendPadding(16, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator('1', 'a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.appendln(stringBuffer50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.replaceFirst(strMatcher52, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.appendFixedWidthPadLeft((java.lang.Object) strBuilder54, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append('1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder17.append(strBuilder65, 21, 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendSeparator("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendFixedWidthPadRight(12, (int) ' ', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((long) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher54);
        int int57 = strBuilder31.indexOf(strMatcher54);
        java.lang.StringBuffer stringBuffer58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendln(stringBuffer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceAll("", "hi!");
        java.lang.String str76 = strBuilder71.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.append("");
        char[] charArray79 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '.', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder59.appendFixedWidthPadRight((java.lang.Object) strTokenizer82, (int) '#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.append((double) (byte) 1);
        boolean boolean89 = strBuilder87.endsWith("hi!a\nh");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder15.append((java.lang.CharSequence) "hi!a\nh", (int) (byte) 100, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!" + "'", str76, "!");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        boolean boolean25 = strTokenizer24.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer24.add("!#h100.0#falsehi!#hi!\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.appendln((float) (byte) 10);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        iOException17.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray25 = iOException21.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators((java.lang.Object[]) throwableArray25, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replaceAll(strMatcher59, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.replaceAll(strMatcher59, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder27.replace(strMatcher59, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0", (int) (short) 0, 0, 18);
        java.lang.String str69 = strBuilder68.getNullText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        java.lang.CharSequence charSequence36 = strBuilder33.subSequence(1, (int) (short) 1);
        boolean boolean38 = strBuilder33.endsWith("!ih100.0");
        char char40 = strBuilder33.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendln(stringBuffer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder45.replaceFirst(strMatcher57, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.append((java.lang.CharSequence) strBuilder59);
        char[] charArray63 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher68, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder60.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.replaceAll(strMatcher72, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder19.appendPadding(10, '1');
        char char82 = strBuilder80.charAt((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder80.appendln("StrTokenizer[hi!]", 90, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + '!' + "'", char40 == '!');
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + char82 + "' != '" + 'f' + "'", char82 == 'f');
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        java.lang.Object obj25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(obj25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendFixedWidthPadLeft(0, 52, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendSeparator("#i4100.0", 15);
        char[] charArray37 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.append(stringBuffer60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int63 = strBuilder61.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4', 'h');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder33.insert((int) '1', charArray37, 13, 115);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        java.io.IOException iOException1 = new java.io.IOException("ih100.0StrTokenizer[ih100.0]StrTo");
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        boolean boolean9 = strBuilder4.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.appendSeparator("!ih100.0\n!ih100.0#", 12);
        java.io.Reader reader13 = strBuilder12.asReader();
        int int14 = reader13.read();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 104 + "'", int14 == 104);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder15.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendSeparator(' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln(16);
        java.io.Writer writer38 = strBuilder37.asWriter();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(writer38);
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("001", "");
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(stringBuffer2);
        java.lang.String str5 = strBuilder3.rightString((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.setLength(18);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(stringBuffer19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder9.replaceFirst(strMatcher21, "hi!");
        int int26 = strBuilder23.lastIndexOf("", (int) (byte) 0);
        java.lang.String str29 = strBuilder23.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        int int33 = strBuilder23.lastIndexOf(strMatcher31, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder7.replaceAll(strMatcher31, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!4444444falsehi!0");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = strBuilder7.substring(28, 48);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "!ih100.00\n" + "'", str5, "!ih100.00\n");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "h" + "'", str29, "h");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        java.lang.String str23 = strBuilder7.substring(6);
        boolean boolean24 = strBuilder7.isEmpty();
        int int27 = strBuilder7.lastIndexOf("!ih100.0\n!ih100.0011.04444444444444444444444444444444444444444444444444432!ih100.0\n!ih100.00hi!\n", (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer30.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer30.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer30.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder7.replaceFirst(strMatcher37, "!ih100.0!");
        java.util.stream.IntStream intStream40 = strBuilder39.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" + "'", str23, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        java.io.IOException iOException1 = new java.io.IOException("ehi!0a\n");
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int12 = strBuilder6.lastIndexOf(strMatcher10, 2);
        boolean boolean14 = strBuilder6.contains('#');
        java.io.Reader reader15 = strBuilder6.asReader();
        reader15.mark((int) 'f');
        reader15.mark(105);
        reader15.mark(7);
        java.nio.CharBuffer charBuffer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int23 = reader15.read(charBuffer22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(reader15);
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append((double) (short) 10);
        int int43 = strBuilder41.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        java.lang.CharSequence charSequence58 = strBuilder55.subSequence(1, (int) (short) 1);
        boolean boolean60 = strBuilder55.endsWith("!ih100.0");
        char char62 = strBuilder55.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder55.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int68 = strBuilder55.indexOf('#', 100);
        boolean boolean69 = strBuilder41.equalsIgnoreCase(strBuilder55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder55.append("java.io.IOException:", (int) 'i', (int) 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + char62 + "' != '" + '!' + "'", char62 == '!');
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst(' ');
        boolean boolean17 = strBuilder15.contains("f0alsehi!1\n      10");
        java.lang.String str20 = strBuilder15.midString((int) 'h', 0);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength(3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.insert(92, '!');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 92");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        char[] charArray36 = strBuilder35.toCharArray();
        char[] charArray39 = strBuilder35.toCharArray(6, 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.deleteAll('a');
        char[] charArray44 = strBuilder35.toCharArray(1, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        boolean boolean62 = strBuilder49.equalsIgnoreCase(strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator("!");
        boolean boolean65 = strBuilder35.equals((java.lang.Object) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst(strMatcher78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder75.replaceAll(strMatcher78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder75.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strBuilder85.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer89.setDelimiterMatcher(strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder73.replace(strMatcher91, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder64.replaceAll(strMatcher91, "hi!hi!97!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), ".0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), ".0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "ih1");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "ih1");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[i, h, 1]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        char[] charArray19 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendPadding((int) '!', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.ensureCapacity(23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("hi!hi!0.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst("!ih100.0#a\nhi!!i", "sehi!!");
        int int34 = strBuilder31.indexOf("hi!97!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", 11);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.insert(3, (long) (short) -1);
        int int25 = strBuilder23.indexOf("01hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder40.setLength((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.append('1');
        java.lang.StringBuffer stringBuffer53 = strBuilder40.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder23.appendln(stringBuffer53, (int) (short) 100, (int) 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "0.001hi \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001");
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (byte) 0, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.deleteFirst('.');
        int int17 = strBuilder4.indexOf("java.io.IOException: hi!3", 113);
        int int18 = strBuilder4.length();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 6 + "'", int18 == 6);
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.append(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strBuilder0.substring((int) '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.replaceFirst("StrTokenizer[!ih100.0]", "!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoredChar(' ');
        java.lang.String str25 = strTokenizer24.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setDelimiterString("StrTokenizer[!ih100.0]");
        java.lang.Object obj30 = strTokenizer24.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer24.setIgnoredMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer24.getDelimiterMatcher();
        boolean boolean35 = strBuilder11.contains(strMatcher34);
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder11.append(charArray38);
        boolean boolean48 = strBuilder11.contains("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append('#');
        int int66 = strBuilder64.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder50.append((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder11.append((java.lang.CharSequence) strBuilder50, (int) (short) 100, 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder37.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setEmptyTokenAsNull(false);
        java.lang.String str44 = strTokenizer41.next();
        java.lang.String str45 = strTokenizer41.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer41.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean70 = strBuilder61.contains(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder49.replaceAll(strMatcher55, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer41.setTrimmerMatcher(strMatcher55);
        java.util.List<java.lang.String> strList75 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder25.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList75, "hi!#java.io.IOException              ");
        int int79 = strBuilder77.indexOf('0');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "!ih100.0" + "'", str44, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "!ih100.0" + "'", str45, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 4 + "'", int79 == 4);
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        int int80 = reader53.read();
        reader53.mark(35);
        boolean boolean83 = reader53.ready();
        boolean boolean84 = reader53.markSupported();
        reader53.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 104 + "'", int80 == 104);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendFixedWidthPadRight((int) (byte) 10, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("java.io.IOException: !ih100.0", "java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean36 = strBuilder27.contains(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.deleteAll(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder25.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendSeparator("i!");
        boolean boolean60 = strBuilder25.equals(strBuilder55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder14.append(strBuilder25, (-1), (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher49);
        int int52 = strBuilder26.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer10.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer6.setDelimiterMatcher(strMatcher49);
        boolean boolean55 = strTokenizer54.isIgnoreEmptyTokens();
        boolean boolean56 = strTokenizer54.hasNext();
        boolean boolean57 = strTokenizer54.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = strTokenizer54.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append('#');
        int int17 = strBuilder15.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.append((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setEmptyTokenAsNull(false);
        java.lang.String str37 = strTokenizer34.next();
        java.lang.String str38 = strTokenizer34.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer34.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer40.reset();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder18.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList42, "!");
        char[] charArray45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder18.append(charArray45, 45, (int) 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        java.lang.String str52 = strBuilder48.midString((int) (byte) 1, 23);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.appendPadding(44, 'i');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "!ih100.0" + "'", str37, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "!ih100.0" + "'", str38, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder(".0");
        java.lang.String str32 = strBuilder30.leftString(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.deleteAll("4a");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendSeparator('i', 'f');
        boolean boolean38 = strBuilder28.equalsIgnoreCase(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder40.replaceAll(strMatcher46, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean69 = strTokenizer68.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder40.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "!ih100.0");
        char[] charArray74 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder40.appendln(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getTrimmerMatcher();
        java.lang.String[] strArray84 = strTokenizer82.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder37.appendAll((java.lang.Object[]) strArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.append('!');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + ".0" + "'", str32, ".0");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        int int10 = strBuilder4.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator(' ', '1');
        java.lang.Object obj20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadLeft(obj20, (int) (byte) 1, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceFirst("0.00hi!0.00hi ", "1hi!hi!10.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.setCharAt(0, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 100);
        boolean boolean47 = strBuilder34.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder29.append(strBuilder49);
        java.lang.String str55 = strBuilder29.rightString(43);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "!." + "'", str55, "!.");
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendSeparator("h", "StrTokenizer[not tokenized yet]");
        boolean boolean20 = strBuilder13.contains(' ');
        java.lang.String str23 = strBuilder13.midString((int) (short) -1, 25);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        java.lang.CharSequence charSequence40 = strBuilder37.subSequence(1, (int) (short) 1);
        boolean boolean42 = strBuilder37.endsWith("!ih100.0");
        char char44 = strBuilder37.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder37.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        int int57 = strBuilder37.lastIndexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder37.replaceAll('4', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean71 = strBuilder62.contains(strMatcher70);
        java.lang.StringBuffer stringBuffer72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder62.appendln(stringBuffer72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder62.replaceFirst(strMatcher74, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder62.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder79.appendNull();
        java.lang.StringBuffer stringBuffer81 = strBuilder79.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append(stringBuffer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder25.appendln(stringBuffer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder13.append(stringBuffer81);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!a\nh" + "'", str23, "hi!a\nh");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + char44 + "' != '" + '!' + "'", char44 == '!');
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "hai!hi!");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strBuilder28.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setEmptyTokenAsNull(false);
        java.lang.String str35 = strTokenizer32.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer32.setDelimiterMatcher(strMatcher38);
        boolean boolean42 = strTokenizer32.hasPrevious();
        char[] charArray45 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer32.reset(charArray45);
        boolean boolean60 = strTokenizer59.isIgnoreEmptyTokens();
        java.lang.String str61 = strTokenizer59.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer59, "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((double) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln('#');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "!ih100.0" + "'", str35, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#a" + "'", str61, "#a");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: ih100.010.0i!");
        int int3 = strBuilder1.indexOf('f');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("hi!\n", "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.insert(7, (java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder16.replaceFirst(' ', 'a');
        char[] charArray45 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.append(stringBuffer68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int71 = strBuilder69.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher70);
        java.util.List<java.lang.String> strList73 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder16.appendAll((java.lang.Iterable<java.lang.String>) strList73);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charMatcher('h');
        int int78 = strBuilder16.lastIndexOf(strMatcher76, (int) '4');
        char[] charArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int81 = strMatcher76.isMatch(charArray79, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 22 + "'", int78 == 22);
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("StrTokenizer[not tokenized yet]");
        java.io.Writer writer42 = strBuilder41.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendPadding(3, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln((double) '!');
        java.io.Writer writer60 = writer42.append((java.lang.CharSequence) strBuilder59);
        char[] charArray63 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder70.replaceAll(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder70.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder80.append(stringBuffer86);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int89 = strBuilder87.indexOf(strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher88);
        writer60.write(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(writer60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        boolean boolean54 = reader53.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        int int71 = strBuilder69.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher76, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean82 = strBuilder73.contains(strMatcher81);
        java.lang.StringBuffer stringBuffer83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder73.appendln(stringBuffer83);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder73.replaceFirst(strMatcher85, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder69.appendFixedWidthPadLeft((java.lang.Object) strBuilder87, 1, ' ');
        char[] charArray91 = strBuilder90.toCharArray();
        char[] charArray94 = strBuilder90.toCharArray(6, 11);
        int int95 = reader53.read(charArray94);
        reader53.close();
        boolean boolean97 = reader53.markSupported();
        boolean boolean98 = reader53.ready();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[!, i, h]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 3 + "'", int95 == 3);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.append((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendFixedWidthPadLeft((int) ' ', (int) '4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.appendFixedWidthPadRight((int) '.', 54, '!');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("hi!\n", "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.insert(7, (java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder16.replaceFirst(' ', 'a');
        char[] charArray45 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.append(stringBuffer68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int71 = strBuilder69.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher70);
        java.util.List<java.lang.String> strList73 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder16.appendAll((java.lang.Iterable<java.lang.String>) strList73);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charMatcher('h');
        int int78 = strBuilder16.lastIndexOf(strMatcher76, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder16.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder16.appendln((long) (short) -1);
        boolean boolean84 = strBuilder82.endsWith("hi!0100");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 22 + "'", int78 == 22);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("!ih100.0#a");
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(strBuilder9);
        int int12 = strBuilder5.indexOf("!ih100.011\n#");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.deleteFirst("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean25 = strBuilder16.contains(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.deleteAll(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((int) (byte) 10);
        char[] charArray36 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.insert(0, charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        java.util.stream.IntStream intStream56 = strBuilder55.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder32.append((java.lang.CharSequence) "");
        char[] charArray65 = strBuilder64.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder3.append(charArray65, (int) (short) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#afalsehi!0a\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#afalsehi!0a\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a, f, a, l, s, e, h, i, !, 0, a, \n, 1, 0]");
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        java.lang.String str23 = strBuilder7.substring(6);
        boolean boolean24 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.delete(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.appendln("0.0!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" + "'", str23, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) iOException10, (int) '!', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendSeparator(' ', '1');
        boolean boolean24 = strBuilder22.startsWith("hi!#java.io.IOException              ");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int2 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        java.lang.String str5 = strBuilder4.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendSeparator('v');
        boolean boolean9 = strBuilder4.contains(' ');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('!');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append((double) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNewLineText("!ih100.04\nfalsehi!01111111111#hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln("hi!!ih100.0#a\nfalse!!!!!!!!!!!!!!!!", 45, 92);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setEmptyTokenAsNull(false);
        java.lang.String str46 = strTokenizer43.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer43.setDelimiterMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoredChar('a');
        char[] charArray57 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer52.reset(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setQuoteMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder27.replaceAll("ih100.011\n", "1hi!hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder27.replaceAll('h', 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder27.appendSeparator('0');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "!ih100.0" + "'", str46, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        java.lang.String str21 = strBuilder15.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.append(stringBuffer47);
        java.lang.String str51 = strBuilder48.midString(2, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln((int) '1');
        int int54 = strBuilder48.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.appendFixedWidthPadLeft(8, 6, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder60.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst(strMatcher83, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder80.replaceAll(strMatcher83, "");
        int int89 = strBuilder78.indexOf(strMatcher83, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder73.append(strBuilder78, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strBuilder73.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder73.deleteFirst('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder95.append((float) 52);
        java.lang.StringBuffer stringBuffer98 = strBuilder97.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder58.append(stringBuffer98);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "h" + "'", str21, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 35 + "'", int54 == 35);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(stringBuffer98);
        org.junit.Assert.assertEquals(stringBuffer98.toString(), "ih100.052.0");
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendPadding((int) 'a', '4');
        char[] charArray32 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder28.insert((int) (byte) 100, charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        java.lang.String str42 = strTokenizer41.next();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#a" + "'", str42, "#a");
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", "!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean25 = strBuilder16.contains(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder4.replaceAll(strMatcher10, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean33 = strTokenizer32.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder4.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer32, "!ih100.0");
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder4.appendln(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer2.setIgnoredMatcher(strMatcher44);
        boolean boolean46 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer2.reset("4a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer2.setEmptyTokenAsNull(false);
        java.lang.String str51 = strTokenizer2.next();
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4" + "'", str51, "4");
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.trim();
        java.lang.String str20 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strBuilder34.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setEmptyTokenAsNull(false);
        java.lang.String str41 = strTokenizer38.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer38.setDelimiterMatcher(strMatcher44);
        boolean boolean48 = strTokenizer38.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList49 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder15.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList49, "eslafhi!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "!ih100.0" + "'", str41, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((long) 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setEmptyTokenAsNull(false);
        java.lang.String str40 = strTokenizer37.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer37.setDelimiterMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setIgnoredChar('a');
        char[] charArray51 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer46.reset(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("h");
        char[] charArray69 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer76.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher74, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer64.setTrimmerMatcher(strMatcher78);
        java.lang.Object obj81 = strTokenizer80.clone();
        boolean boolean82 = strTokenizer80.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder21.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder21.setCharAt(35, 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "!ih100.0" + "'", str40, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[!ih100.0]");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setDelimiterChar('v');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[!ih100.0]" + "'", str2, "StrTokenizer[!ih100.0]");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.setLength((int) '4');
        java.lang.Object obj27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln(obj27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        int int44 = strBuilder33.indexOf(strMatcher38, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder33.replaceAll("i!", "!ih100.0");
        boolean boolean48 = strBuilder26.equals(strBuilder47);
        boolean boolean49 = strBuilder1.equalsIgnoreCase(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder1.append(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = strBuilder1.substring(54, 109);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ', ' ');
        int int44 = strTokenizer43.previousIndex();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        int int43 = strBuilder41.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln(stringBuffer62);
        char[] charArray66 = strBuilder61.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray67 = strBuilder26.getChars(charArray66);
        int int68 = reader24.read(charArray66);
        reader24.close();
        reader24.close();
        reader24.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[!, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[!, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 17 + "'", int68 == 17);
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(0, (java.lang.Object) (byte) 1);
        int int20 = strBuilder18.indexOf('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(0.0f);
        // The following exception was thrown during execution in test generation
        try {
            char char24 = strBuilder18.charAt((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(stringBuffer35);
        char[] charArray39 = strBuilder34.toCharArray((int) (byte) 1, (int) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.appendln((long) 30);
        java.lang.String str42 = strBuilder41.getNullText();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[., 0, 0, 1, h, i,  , !, i, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer11.setQuoteMatcher(strMatcher31);
        char[] charArray37 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer34.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray2);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher46);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln((double) 2);
        int int44 = strBuilder41.indexOf('4', 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        java.util.stream.IntStream intStream50 = strBuilder49.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder41.appendFixedWidthPadLeft((java.lang.Object) strBuilder49, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "!ih100.0");
        int int80 = strBuilder67.indexOf(strMatcher76, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder59.deleteFirst(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append(false);
        java.io.Writer writer34 = strBuilder33.asWriter();
        int int36 = strBuilder33.indexOf('.');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getDelimiterMatcher();
        int int6 = strTokenizer4.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer4.setDelimiterChar('!');
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setQuoteChar(' ');
        java.lang.Class<?> wildcardClass12 = strTokenizer8.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        java.io.Reader reader42 = strBuilder14.asReader();
        boolean boolean43 = reader42.ready();
        reader42.reset();
        long long46 = reader42.skip((long) 56);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 8L + "'", long46 == 8L);
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) ' ');
        java.lang.StringBuffer stringBuffer25 = strBuilder24.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.replaceFirst('4', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder30.replaceAll(strMatcher36, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean59 = strTokenizer58.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder30.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer58, "!ih100.0");
        int int62 = strBuilder30.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder30.appendNull();
        java.io.IOException iOException65 = new java.io.IOException();
        java.io.IOException iOException66 = new java.io.IOException();
        iOException65.addSuppressed((java.lang.Throwable) iOException66);
        java.lang.Throwable[] throwableArray68 = iOException66.getSuppressed();
        java.io.IOException iOException69 = new java.io.IOException();
        java.io.IOException iOException70 = new java.io.IOException();
        iOException69.addSuppressed((java.lang.Throwable) iOException70);
        iOException66.addSuppressed((java.lang.Throwable) iOException69);
        java.io.IOException iOException73 = new java.io.IOException("ih100.010.0i!", (java.lang.Throwable) iOException66);
        java.lang.Throwable[] throwableArray74 = iOException73.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder30.appendWithSeparators((java.lang.Object[]) throwableArray74, "hi!a\nh");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder24.appendWithSeparators((java.lang.Object[]) throwableArray74, "hi!1.0!ihfalsehi!aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder24.appendln((float) 105);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(stringBuffer25);
        org.junit.Assert.assertEquals(stringBuffer25.toString(), "!32\n");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 11 + "'", int62 == 11);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.setCharAt(9, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder12.setNewLineText("hi!hi!97!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll("", "hi!");
        java.lang.String str39 = strBuilder34.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        char[] charArray45 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceAll("", "hi!");
        int int62 = strBuilder60.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.replaceAll(strMatcher67, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean73 = strBuilder64.contains(strMatcher72);
        java.lang.StringBuffer stringBuffer74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.appendln(stringBuffer74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder64.replaceFirst(strMatcher76, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder60.appendFixedWidthPadLeft((java.lang.Object) strBuilder78, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.reverse();
        char[] charArray85 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, 'a');
        char[] charArray91 = strBuilder60.getChars(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '!', '4');
        char[] charArray98 = strBuilder44.getChars(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder22.append(charArray85);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "!" + "'", str39, "!");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(charArray98);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray98), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray98), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray98), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer7.add("100.0#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        iOException0.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        iOException2.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray10 = iOException6.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        iOException11.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException13.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        iOException20.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException25 = new java.io.IOException();
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        iOException22.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException26);
        iOException13.addSuppressed((java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray31 = iOException13.getSuppressed();
        iOException6.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray34 = iOException6.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.insert(1, (float) 52);
        java.util.stream.IntStream intStream35 = strBuilder34.codePoints();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.setCharAt(23, '!');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 23");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.setNullText("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendSeparator("1hi!hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher31);
        boolean boolean33 = strTokenizer32.isIgnoreEmptyTokens();
        char[] charArray34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.reset(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.insert(8, (double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding(0, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator("java.io.IOException: !ih100.0", (int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.setNewLineText("!ih100.00\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.insert(76, (double) 29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 76");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(7, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        boolean boolean38 = strBuilder25.equalsIgnoreCase(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder25.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.append(strBuilder40);
        int int43 = strBuilder41.lastIndexOf("!hi!10aaaaaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendFixedWidthPadRight(52, 44, '.');
        java.lang.String str48 = strBuilder47.getNullText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.lang.String str6 = strBuilder4.leftString(14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence9 = strBuilder4.subSequence(104, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 25");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.replaceAll(strMatcher34, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean57 = strTokenizer56.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer56, "!ih100.0");
        char[] charArray62 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder28.appendln(charArray62);
        int int68 = strMatcher26.isMatch(charArray62, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterChar('4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = strTokenizer72.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        java.lang.String str21 = strBuilder7.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList26 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(11, '4');
        java.io.Reader reader31 = strBuilder27.asReader();
        java.io.Reader reader32 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setEmptyTokenAsNull(false);
        java.lang.String str63 = strTokenizer60.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder34.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean83 = strBuilder74.contains(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder72.deleteAll(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder64.append(strBuilder72);
        java.lang.String str87 = strBuilder72.substring(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder72.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.deleteAll("1hi!hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder90.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder27.append((java.lang.Object) strBuilder91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder27.insert(53, (double) 56);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 53");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "!ih100.0" + "'", str63, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "falsehi!" + "'", str87, "falsehi!");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('.');
        java.lang.String str10 = strTokenizer7.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#" + "'", str10, "#");
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.appendNull();
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.append(stringBuffer52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int55 = strBuilder53.indexOf(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher67, strMatcher69);
        char[] charArray73 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer70.reset(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer56.reset(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, "hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder19.append(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder19.append((long) 20);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((float) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (short) 10, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.insert(0, '0');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("i!hi!97!!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str11 = strTokenizer10.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getQuoteMatcher();
        int int14 = strBuilder8.lastIndexOf(strMatcher12, (int) (byte) 100);
        int int16 = strBuilder8.indexOf("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        java.lang.String str17 = strBuilder8.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strBuilder29.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setEmptyTokenAsNull(false);
        java.lang.String str36 = strTokenizer33.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer33.setDelimiterMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoredChar('a');
        char[] charArray47 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer42.reset(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setQuoteMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer64.getDelimiterMatcher();
        int int69 = strBuilder8.indexOf(strMatcher67, 0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "!ih100.0" + "'", str36, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer5.reset("f0alsehi!1\n      10");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("hi!######truei!0\n");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        boolean boolean54 = reader53.ready();
        reader53.mark(105);
        reader53.mark(16);
        boolean boolean59 = reader53.markSupported();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoredChar('1');
        int int28 = strTokenizer25.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = strTokenizer25.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.append(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder15.appendPadding((int) (short) 1, '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setIgnoredChar(' ');
        java.lang.String str32 = strTokenizer31.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean78 = strBuilder69.contains(strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher77);
        int int80 = strBuilder54.indexOf(strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer38.setIgnoredMatcher(strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer34.setDelimiterMatcher(strMatcher77);
        boolean boolean83 = strTokenizer82.isIgnoreEmptyTokens();
        java.lang.String str84 = strTokenizer82.toString();
        java.util.List<java.lang.String> strList85 = strTokenizer82.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder27.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList85, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str84, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!#h100.0#falsehi!#hi!\n\n", ' ', 'a');
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        java.io.Reader reader42 = strBuilder14.asReader();
        boolean boolean43 = reader42.markSupported();
        int int44 = reader42.read();
        long long46 = reader42.skip((long) 92);
        char[] charArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int48 = reader42.read(charArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 33 + "'", int44 == 33);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 7L + "'", long46 == 7L);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        int int31 = strBuilder11.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        boolean boolean54 = strBuilder36.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln((long) 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder36.deleteFirst('v');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.appendln(strBuilder36, 2, 90);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!#i!!ih100.0", '!', 'h');
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.replaceAll('#', 'a');
        boolean boolean75 = strBuilder55.equals((java.lang.Object) strBuilder70);
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.append(stringBuffer76);
        java.util.stream.IntStream intStream78 = strBuilder77.chars();
        int int80 = strBuilder77.lastIndexOf("0.001hi!");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(stringBuffer37);
        char[] charArray41 = strBuilder36.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray42 = strBuilder1.getChars(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder50.deleteAll(strMatcher60);
        java.lang.String str64 = strBuilder50.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList69 = strTokenizer68.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder50.appendAll((java.lang.Iterable<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("kenizer");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74);
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder1.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList76, "!ih100.010.032");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.replaceAll(strMatcher33, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean56 = strTokenizer55.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer55, "!ih100.0");
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder27.appendln(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ', ' ');
        char[] charArray70 = strBuilder1.getChars(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ', '1');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer76.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, i, !]");
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoredChar(' ');
        java.lang.String str6 = strTokenizer5.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher51);
        int int54 = strBuilder28.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer12.setIgnoredMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer8.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        int int72 = strBuilder61.indexOf(strMatcher66, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder61.replaceAll("i!", "!ih100.0");
        char[] charArray78 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher88);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder61.appendln(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer56.reset(charArray78);
        int int97 = strMatcher1.isMatch(charArray78, (int) (byte) 1, 23, 23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
        org.junit.Assert.assertNotNull(strTokenizer98);
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder40.reverse();
        char[] charArray65 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a');
        char[] charArray71 = strBuilder40.getChars(charArray65);
        int int72 = reader24.read(charArray71);
        reader24.reset();
        reader24.mark((int) (short) 1);
        char[] charArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int77 = reader24.read(charArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 9 + "'", int72 == 9);
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) iOException10, (int) '!', ' ');
        java.lang.String str20 = strBuilder4.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        java.lang.String str37 = strBuilder32.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean58 = strBuilder49.contains(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder32.deleteFirst(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst(strMatcher78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder75.replaceAll(strMatcher78, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean84 = strBuilder75.contains(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer63.setQuoteMatcher(strMatcher83);
        char[] charArray89 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer86.reset(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, ' ');
        int int97 = strMatcher57.isMatch(charArray89, 0);
        int int98 = strBuilder4.indexOf(strMatcher57);
        java.io.Writer writer99 = strBuilder4.asWriter();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!#java.io.IOException              " + "'", str20, "hi!#java.io.IOException              ");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "!" + "'", str37, "!");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 23 + "'", int98 == 23);
        org.junit.Assert.assertNotNull(writer99);
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("", "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar('!');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getTrimmerMatcher();
        int int11 = strBuilder3.indexOf(strMatcher9, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.replaceFirst("!hi!10aaaaaaaaaaaaaa", "");
        boolean boolean16 = strBuilder14.endsWith("!ih100.010.0-18.0");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("Tokenizer[!ih100.0]");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder18.insert((int) (short) 1, 'a');
        java.io.Writer writer36 = strBuilder35.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.append((java.lang.CharSequence) strBuilder35, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        int int10 = strBuilder4.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator(' ', '1');
        java.lang.Object obj20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadLeft(obj20, (int) (byte) 1, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceFirst("0.00hi!0.00hi ", "1hi!hi!10.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        char[] charArray31 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4');
        int int35 = strMatcher28.isMatch(charArray31, 33);
        char[] charArray36 = strBuilder19.getChars(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("!ih100.0", "!ih100.0");
        int int47 = strBuilder41.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        char[] charArray53 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder19.appendln(charArray53, 43, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "1.");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "1.");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[1, .]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "1.");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "1.");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[1, .]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[h, i, !, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        boolean boolean11 = strBuilder1.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder13.appendln(stringBuffer23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.replaceFirst(strMatcher25, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder13.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        java.lang.StringBuffer stringBuffer32 = strBuilder30.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder1.appendln(stringBuffer32);
        java.io.Reader reader34 = strBuilder1.asReader();
        int int35 = reader34.read();
        long long37 = reader34.skip(8L);
        reader34.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(stringBuffer32);
        org.junit.Assert.assertEquals(stringBuffer32.toString(), "hai!hi!");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 33 + "'", int35 == 33);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 8L + "'", long37 == 8L);
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((double) 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('f', 52);
        java.lang.String str27 = strBuilder22.substring(3);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "se18.0f" + "'", str27, "se18.0f");
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int63 = strBuilder50.indexOf('#', 100);
        boolean boolean64 = strBuilder38.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher76, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher76, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.appendSeparator('a', '#');
        java.lang.Object[] objArray89 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendAll(objArray89);
        boolean boolean92 = strBuilder90.contains('#');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.deleteAll("");
        java.lang.String str22 = strBuilder9.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.append((int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        java.util.stream.IntStream intStream31 = strBuilder30.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.appendln((float) (byte) 10);
        java.io.IOException iOException41 = new java.io.IOException();
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException();
        iOException42.addSuppressed((java.lang.Throwable) iOException43);
        iOException41.addSuppressed((java.lang.Throwable) iOException43);
        java.io.IOException iOException46 = new java.io.IOException();
        java.io.IOException iOException47 = new java.io.IOException();
        iOException46.addSuppressed((java.lang.Throwable) iOException47);
        iOException43.addSuppressed((java.lang.Throwable) iOException47);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.lang.Throwable[] throwableArray51 = iOException47.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.appendAll((java.lang.Object[]) throwableArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("StrTokenizer[!ih100.0]", "1hi!hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln((long) 'h');
        java.lang.Object[] objArray58 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder25.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendFixedWidthPadLeft(0, (int) 'a', 'f');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder60.appendln("hai!hi!", 54, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.insert(0, charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder45.replaceAll(strMatcher51, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder45.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer73, "!ih100.0");
        char[] charArray79 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder45.appendln(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.reset("!ih100.0\n4\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer84.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder25.replaceFirst(strMatcher87, "java.io.IOException: hi!3");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray92 = strBuilder89.toCharArray((int) (byte) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("hi!", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(20, 0.0f);
        int int29 = strBuilder24.indexOf("1hi!hi!");
        char[] charArray33 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        java.lang.String str48 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setQuoteChar('.');
        int int51 = strTokenizer47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.insert(25, (java.lang.Object) strTokenizer47);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder24.deleteCharAt(72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.replaceAll(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher76, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean82 = strBuilder73.contains(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher81);
        int int84 = strBuilder58.indexOf(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer42.setIgnoredMatcher(strMatcher81);
        java.util.List<java.lang.String> strList86 = strTokenizer85.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder38.appendAll((java.lang.Iterable<java.lang.String>) strList86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.setNewLineText("!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder89.minimizeCapacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        java.lang.String str34 = strBuilder31.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strBuilder31.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        boolean boolean37 = strBuilder16.contains(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder16.clear();
        int int40 = strBuilder38.indexOf("hi!-1.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.insert(24, (float) 43);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 24");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        int int21 = strBuilder7.lastIndexOf('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.deleteFirst("00.00.");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((java.lang.Object) strMatcher29);
        char[] charArray31 = null;
        char[] charArray32 = strBuilder30.getChars(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray32);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[f, a, l, s, e, h, i, !, o, r, g, ., a, p, a, c, h, e, ., c, o, m, m, o, n, s, ., l, a, n, g, 3, ., t, e, x, t, ., S, t, r, M, a, t, c, h, e, r, $, T, r, i, m, M, a, t, c, h, e, r, @, 5, f, 7, 8, d, e, 2, 2, \n]");
        org.junit.Assert.assertNotNull(strTokenizer35);
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        char[] charArray39 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        char[] charArray45 = strBuilder14.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setIgnoredChar('1');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer51.set("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0!ih\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        boolean boolean37 = strBuilder35.contains(' ');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        boolean boolean69 = strBuilder52.equals(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.append("!ih100.0\n!ih100.0#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strBuilder83.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer87.setEmptyTokenAsNull(false);
        java.lang.String str90 = strTokenizer87.next();
        java.lang.String str91 = strTokenizer87.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer87.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer93.reset();
        java.util.List<java.lang.String> strList95 = strTokenizer93.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder52.appendAll((java.lang.Iterable<java.lang.String>) strList95);
        char[] charArray97 = strBuilder96.toCharArray();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "!ih100.0" + "'", str90, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "!ih100.0" + "'", str91, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray97), "!ih100.01.0!ih100.0\n!ih100.0\n!ih100.0#!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray97), "!ih100.01.0!ih100.0\n!ih100.0\n!ih100.0#!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray97), "[!, i, h, 1, 0, 0, ., 0, 1, ., 0, !, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0, #, !, i, h, 1, 0, 0, ., 0]");
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', '1');
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        java.lang.String str24 = strBuilder3.midString(1, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        boolean boolean40 = strBuilder3.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder3.deleteFirst("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll('!', 'i');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer49.setTrimmerMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("4a", strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder45.replace(strMatcher52, "ue", 0, 41, (int) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "i!hi!97!!!" + "'", str24, "i!hi!97!!!");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        java.lang.CharSequence charSequence16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append(charSequence16, 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendNull();
        boolean boolean22 = strBuilder20.endsWith("!ih100.0StrTokenizer[!ih100.0]11.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        boolean boolean24 = strBuilder20.contains(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strBuilder35.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setDelimiterMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.replace(strMatcher41, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer49.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder23.deleteFirst(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder13.replaceFirst(strMatcher51, "falsehi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        java.util.stream.IntStream intStream60 = strBuilder59.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder13.append(strBuilder59);
        int int66 = strBuilder64.lastIndexOf("!ih100.00\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append(false);
        java.util.stream.IntStream intStream69 = strBuilder64.chars();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        java.io.IOException iOException1 = new java.io.IOException("false18.01");
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[!ih100.0]1.0");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        java.io.Reader reader42 = strBuilder14.asReader();
        boolean boolean43 = reader42.markSupported();
        int int44 = reader42.read();
        boolean boolean45 = reader42.markSupported();
        reader42.reset();
        boolean boolean47 = reader42.markSupported();
        reader42.mark(212);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        java.lang.CharSequence charSequence64 = strBuilder61.subSequence(1, (int) (short) 1);
        int int67 = strBuilder61.lastIndexOf("!", (int) (byte) 1);
        int int70 = strBuilder61.indexOf("hi!", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.appendln(11);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendSeparator("#");
        java.lang.String str77 = strBuilder72.midString((int) '4', 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.appendNewLine();
        char[] charArray81 = strBuilder72.toCharArray(1, 5);
        int int82 = reader42.read(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setIgnoredChar('0');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 33 + "'", int44 == 33);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "!ih1");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "!ih1");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[!, i, h, 1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder7.replace(strMatcher25, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder7.deleteFirst(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.appendln(strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder41.setNullText("h1.0i!######true10.0\n!13ih100.0\n");
        java.lang.String str54 = strBuilder41.substring(16);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.append((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("100.0100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln('a');
        java.io.Writer writer56 = strBuilder53.asWriter();
        writer56.close();
        writer56.write(12);
        java.io.Writer writer61 = writer56.append('a');
        java.io.Writer writer63 = writer61.append('a');
        java.io.Writer writer65 = writer63.append('a');
        char[] charArray68 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        java.util.stream.IntStream intStream74 = strBuilder73.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.deleteFirst(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        writer65.write(charArray68);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder29.getChars(13, 13, charArray68, 90);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(writer65);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(intStream74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strTokenizer82);
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("hi!", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.replaceAll('#', 'a');
        boolean boolean60 = strBuilder40.equals((java.lang.Object) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder40.replaceFirst("hi!\n", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder21.appendln(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append('a');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendSeparator('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        int int35 = strBuilder32.lastIndexOf("", (int) (byte) 0);
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder32.deleteFirst(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder32.appendPadding(52, '!');
        java.util.stream.IntStream intStream53 = strBuilder52.chars();
        java.lang.StringBuffer stringBuffer54 = strBuilder52.toStringBuffer();
        java.util.stream.IntStream intStream55 = stringBuffer54.chars();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder16.appendln(stringBuffer54, 78, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(intStream53);
        org.junit.Assert.assertNotNull(stringBuffer54);
        org.junit.Assert.assertEquals(stringBuffer54.toString(), "i!hi!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(intStream55);
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!ih", "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("!ih100.0#a", "hi!97!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding(0, '!');
        char[] charArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            strBuilder22.getChars(244, 72, charArray28, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("zed yet]1", (java.lang.Throwable) iOException4);
        java.lang.String str7 = iOException4.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str7, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        java.lang.String str14 = strBuilder1.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendFixedWidthPadRight(10, 7, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.setNullText("ih100.011\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: ih100.010.0i!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder1.replace(strMatcher24, "false", 13, 0, 102);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher24);
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        java.util.stream.IntStream intStream33 = strBuilder32.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendSeparator('h', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((float) (byte) 100);
        java.lang.CharSequence charSequence51 = strBuilder48.subSequence(1, (int) (short) 1);
        int int54 = strBuilder48.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.appendSeparator("sehi!!");
        char[] charArray61 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.append(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln("java.io.IOException: ih100.010.0i!");
        java.lang.StringBuffer stringBuffer66 = strBuilder63.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder36.append(stringBuffer66, 37, 45);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[!, i, h, 1, 0, 0, ., 0, 1, s, e, h, i, !, !]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(stringBuffer66);
        org.junit.Assert.assertEquals(stringBuffer66.toString(), "!ih100.01sehi!!13java.io.IOException: ih100.010.0i!\n");
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean46 = strBuilder37.contains(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher45);
        int int48 = strBuilder22.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer6.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer1.setQuoteMatcher(strMatcher45);
        boolean boolean51 = strTokenizer1.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        long long55 = reader53.skip((long) (byte) 100);
        reader53.mark(10);
        boolean boolean58 = reader53.markSupported();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 20L + "'", long55 == 20L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.replaceFirst(strMatcher4, "i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.replaceFirst('.', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadLeft(12, (int) 'h', ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = strBuilder11.substring(290);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendln("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.trim();
        java.lang.String str23 = strBuilder11.midString((int) '0', 244);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        int int13 = strBuilder11.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("", "hi!");
        int int30 = strBuilder28.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder32.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.replaceFirst(strMatcher44, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.appendln(strBuilder28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher65, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer53.setDelimiterMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.appendln((java.lang.Object) strTokenizer53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder51.insert(115, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 115");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        iOException4.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        iOException11.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException13.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException17);
        iOException4.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException23 = new java.io.IOException("StrTokenizer[]");
        iOException4.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException("hi!!ih100.0#a", (java.lang.Throwable) iOException4);
        java.io.IOException iOException26 = new java.io.IOException("hi!!ih100.0#a\n", (java.lang.Throwable) iOException4);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.String str28 = iOException4.toString();
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "java.io.IOException" + "'", str28, "java.io.IOException");
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, " ih100.00");
        java.lang.String str43 = strTokenizer42.next();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#a" + "'", str43, "#a");
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceAll('f', 'a');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        int int33 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder1.appendSeparator('v');
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 11 + "'", int33 == 11);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer17.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "!ih100.0");
        int int20 = strBuilder7.indexOf(strMatcher16, (int) ' ');
        java.io.IOException iOException22 = new java.io.IOException();
        java.io.IOException iOException23 = new java.io.IOException();
        iOException22.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException23.getSuppressed();
        java.io.IOException iOException26 = new java.io.IOException();
        java.io.IOException iOException27 = new java.io.IOException();
        iOException26.addSuppressed((java.lang.Throwable) iOException27);
        iOException23.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException("ih100.010.0i!", (java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray31 = iOException30.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder7.appendAll((java.lang.Object[]) throwableArray31);
        boolean boolean34 = strBuilder7.endsWith("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder7.appendln("hi!\000\000\000\000\000\000\000\000\000hi!97!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("falsehi!0a\n4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("h");
        char[] charArray47 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer42.setTrimmerMatcher(strMatcher56);
        java.lang.Object obj59 = strTokenizer58.clone();
        java.lang.Object obj60 = strTokenizer58.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer58.getDelimiterMatcher();
        java.lang.String str62 = strTokenizer58.toString();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str62, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        java.lang.String str17 = strBuilder16.toString();
        int int20 = strBuilder16.lastIndexOf('a', (int) (short) 1);
        boolean boolean22 = strBuilder16.endsWith("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.0StrTokenizer[!ih100.0]11.0");
        boolean boolean25 = strBuilder16.contains(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        java.lang.String str43 = strBuilder38.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.append("");
        char[] charArray46 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder38.deleteCharAt((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder16.append(strBuilder38);
        java.lang.String str50 = strBuilder38.toString();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "!ih100.00" + "'", str17, "!ih100.00");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "!" + "'", str43, "!");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ih100.0" + "'", str50, "ih100.0");
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.lang.String str6 = strBuilder4.substring((int) (byte) 1);
        int int8 = strBuilder4.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.append(false);
        boolean boolean12 = strBuilder10.endsWith("!ih100.04\nStrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append((float) 100L);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.deleteAll(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder10.append(strBuilder34);
        java.util.stream.IntStream intStream36 = strBuilder34.chars();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "i!" + "'", str6, "i!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder40.reverse();
        char[] charArray65 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a');
        char[] charArray71 = strBuilder40.getChars(charArray65);
        int int72 = reader24.read(charArray71);
        long long74 = reader24.skip((long) 8);
        boolean boolean75 = reader24.markSupported();
        reader24.mark((int) (byte) 100);
        java.nio.CharBuffer charBuffer78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int79 = reader24.read(charBuffer78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 9 + "'", int72 == 9);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 8L + "'", long74 == 8L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int24 = strBuilder11.indexOf('#', 100);
        java.util.stream.IntStream intStream25 = strBuilder11.codePoints();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intStream25);
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset("ehi!0a\n");
        int int4 = strTokenizer1.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder18.deleteFirst(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendSeparator('4', 'a');
        java.lang.StringBuffer stringBuffer70 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.replaceAll(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strBuilder82.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setEmptyTokenAsNull(false);
        java.lang.String str89 = strTokenizer86.next();
        java.lang.String str90 = strTokenizer86.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer86.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer92.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getTrimmerMatcher();
        int int96 = strBuilder69.lastIndexOf(strMatcher94, 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder69.append(0L);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(stringBuffer70);
        org.junit.Assert.assertEquals(stringBuffer70.toString(), "!ih100.044");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "!ih100.0" + "'", str89, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "!ih100.0" + "'", str90, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.Object obj53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendFixedWidthPadLeft(obj53, (int) (byte) 1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceAll("hi!\n", "h");
        java.lang.String str61 = strBuilder59.rightString(105);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteAll('1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.append("fals", (int) (short) 1, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "!ihfalsehi!!" + "'", str61, "!ihfalsehi!!");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        int int14 = strBuilder1.indexOf('h', 6);
        int int16 = strBuilder1.indexOf("!ihfalsehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean36 = strBuilder27.contains(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.deleteAll(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln('a');
        java.lang.String str42 = strBuilder41.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder17.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendln(20);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((java.lang.Object) strMatcher29);
        char[] charArray31 = null;
        char[] charArray32 = strBuilder30.getChars(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterChar('!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("", "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoredChar('!');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer38.setTrimmerMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[!ih100.0]", strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("i!1", strMatcher44, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.replaceFirst(strMatcher44, "!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln("h");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence57 = strBuilder54.subSequence(244, 48);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -196");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray32);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[f, a, l, s, e, h, i, !, o, r, g, ., a, p, a, c, h, e, ., c, o, m, m, o, n, s, ., l, a, n, g, 3, ., t, e, x, t, ., S, t, r, M, a, t, c, h, e, r, $, T, r, i, m, M, a, t, c, h, e, r, @, 5, f, 7, 8, d, e, 2, 2, \n]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.insert(0, charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        java.util.stream.IntStream intStream49 = strBuilder48.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder25.append((java.lang.CharSequence) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendPadding(74, 'h');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(intStream49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((float) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        java.lang.String str33 = strBuilder21.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceAll("", "hi!");
        int int50 = strBuilder48.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        java.util.stream.IntStream intStream56 = strBuilder55.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean67 = strBuilder58.contains(strMatcher66);
        java.lang.StringBuffer stringBuffer68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder58.appendln(stringBuffer68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder58.replaceFirst(strMatcher70, "hi!");
        int int73 = strBuilder55.indexOf(strMatcher70);
        int int75 = strBuilder48.indexOf(strMatcher70, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder21.replaceFirst(strMatcher70, "StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder19.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.replaceFirst(strMatcher86, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder83.replaceAll(strMatcher86, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer81.setTrimmerMatcher(strMatcher86);
        boolean boolean92 = strBuilder19.contains(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!\n" + "'", str33, "hi!\n");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException("0.001hi !ih100.0\n\n", (java.lang.Throwable) iOException5);
        java.lang.String str7 = iOException6.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.io.IOException: 0.001hi !ih100.0\n\n" + "'", str7, "java.io.IOException: 0.001hi !ih100.0\n\n");
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.replaceAll('!', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.setCharAt(2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.deleteFirst("java.io.IOException");
        java.io.IOException iOException50 = new java.io.IOException();
        java.io.IOException iOException51 = new java.io.IOException();
        iOException50.addSuppressed((java.lang.Throwable) iOException51);
        java.lang.Throwable[] throwableArray53 = iOException51.getSuppressed();
        java.io.IOException iOException54 = new java.io.IOException();
        java.io.IOException iOException55 = new java.io.IOException();
        iOException54.addSuppressed((java.lang.Throwable) iOException55);
        iOException51.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException58 = new java.io.IOException();
        java.io.IOException iOException59 = new java.io.IOException();
        iOException58.addSuppressed((java.lang.Throwable) iOException59);
        java.lang.Throwable[] throwableArray61 = iOException59.getSuppressed();
        java.io.IOException iOException62 = new java.io.IOException();
        java.io.IOException iOException63 = new java.io.IOException();
        iOException62.addSuppressed((java.lang.Throwable) iOException63);
        iOException59.addSuppressed((java.lang.Throwable) iOException62);
        iOException54.addSuppressed((java.lang.Throwable) iOException59);
        java.lang.Throwable[] throwableArray67 = iOException59.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder44.appendWithSeparators((java.lang.Object[]) throwableArray67, "ih100.010.0i!");
        int int70 = strBuilder44.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst("!ih100.0", "!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strBuilder75.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("4a");
        boolean boolean83 = strBuilder75.contains(strMatcher82);
        boolean boolean84 = strBuilder44.contains(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 27 + "'", int70 == 27);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean56 = strBuilder1.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher67, strMatcher69);
        boolean boolean71 = strBuilder1.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendSeparator(' ', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.ensureCapacity(34);
        int int79 = strBuilder77.lastIndexOf('f');
        java.lang.String str80 = strBuilder77.getNullText();
        java.lang.Object obj81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder77.appendFixedWidthPadRight(obj81, 48, 'h');
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.setLength(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder40.replaceAll(strMatcher46, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean69 = strTokenizer68.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder40.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "!ih100.0");
        char[] charArray74 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder40.appendln(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '4');
        char[] charArray83 = strBuilder36.getChars(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray83);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "hi!\000\000\000\000\000\000\000\000\000a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "hi!\000\000\000\000\000\000\000\000\000a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[h, i, !, \000, \000, \000, \000, \000, \000, \000, \000, \000, a]");
        org.junit.Assert.assertNotNull(strMatcher84);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append('#');
        int int17 = strBuilder15.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.append((java.lang.Object) "");
        java.lang.String str19 = strBuilder1.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll("StrTokenizer[!ih100.0]", "i!");
        int int39 = strBuilder36.lastIndexOf("!ih100.0", 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setEmptyTokenAsNull(false);
        java.lang.String str58 = strTokenizer55.next();
        java.lang.String str59 = strTokenizer55.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer55.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst(strMatcher78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder75.replaceAll(strMatcher78, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean84 = strBuilder75.contains(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder63.replaceAll(strMatcher69, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer55.setTrimmerMatcher(strMatcher69);
        java.lang.String[] strArray89 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder36.appendWithSeparators((java.lang.Object[]) strArray89, "ih100.010.0i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder1.appendAll((java.lang.Object[]) strArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.replaceFirst(' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder92.appendSeparator('0', '4');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "falsehi!" + "'", str19, "falsehi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "!ih100.0" + "'", str58, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "!ih100.0" + "'", str59, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(stringBuffer37);
        char[] charArray41 = strBuilder36.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray42 = strBuilder1.getChars(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder1.deleteAll("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder1.delete((int) '#', 8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        int int31 = strBuilder11.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.replaceFirst('!', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder11.append(false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append((float) (byte) 100);
        java.lang.CharSequence charSequence15 = strBuilder12.subSequence(1, (int) (short) 1);
        int int18 = strBuilder12.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendSeparator("sehi!!");
        char[] charArray25 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.append(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.insert((int) (byte) 10, 4);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("kenizer");
        int int34 = strBuilder12.indexOf(strMatcher32, 206);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.014\n", strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[!, i, h, 1, 0, 0, ., 0, 1, s, e, h, i, !, !]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(0, (java.lang.Object) (byte) 1);
        int int20 = strBuilder18.indexOf('1');
        boolean boolean22 = strBuilder18.endsWith("#a");
        java.lang.String str23 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("hi!");
        java.lang.String str27 = strBuilder24.midString((int) 'a', (int) (byte) 100);
        java.lang.String str28 = strBuilder24.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            char char30 = strBuilder24.charAt(212);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 212");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.close();
        writer24.write(12);
        java.io.Writer writer29 = writer24.append('a');
        java.io.Writer writer31 = writer29.append('a');
        // The following exception was thrown during execution in test generation
        try {
            writer29.write("!ih100.0097\n16\n", (int) (byte) 0, (int) 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(writer31);
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("ue");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        java.util.stream.IntStream intStream7 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.insert(7, (java.lang.Object) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.appendFixedWidthPadLeft(8, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((double) (byte) 10);
        int int52 = strBuilder49.length();
        boolean boolean53 = strBuilder35.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.appendln("11.0");
        char[] charArray58 = strBuilder35.toCharArray(3, 109);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder13.appendln(charArray58);
        int int61 = strMatcher1.isMatch(charArray58, 78);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 12 + "'", int52 == 12);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "100.010.011.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "100.010.011.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[1, 0, 0, ., 0, 1, 0, ., 0, 1, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException54.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) iOException54, 0, '4');
        java.io.IOException iOException60 = new java.io.IOException();
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException60);
        iOException54.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException64 = new java.io.IOException();
        java.io.IOException iOException65 = new java.io.IOException();
        iOException64.addSuppressed((java.lang.Throwable) iOException65);
        java.lang.Throwable[] throwableArray67 = iOException65.getSuppressed();
        java.io.IOException iOException68 = new java.io.IOException();
        java.io.IOException iOException69 = new java.io.IOException();
        iOException68.addSuppressed((java.lang.Throwable) iOException69);
        iOException65.addSuppressed((java.lang.Throwable) iOException68);
        java.io.IOException iOException72 = new java.io.IOException();
        java.io.IOException iOException73 = new java.io.IOException();
        java.io.IOException iOException74 = new java.io.IOException();
        iOException73.addSuppressed((java.lang.Throwable) iOException74);
        iOException72.addSuppressed((java.lang.Throwable) iOException74);
        java.io.IOException iOException77 = new java.io.IOException();
        java.io.IOException iOException78 = new java.io.IOException();
        iOException77.addSuppressed((java.lang.Throwable) iOException78);
        iOException74.addSuppressed((java.lang.Throwable) iOException78);
        java.io.IOException iOException81 = new java.io.IOException((java.lang.Throwable) iOException78);
        iOException68.addSuppressed((java.lang.Throwable) iOException78);
        java.io.IOException iOException83 = new java.io.IOException((java.lang.Throwable) iOException78);
        java.io.IOException iOException84 = new java.io.IOException((java.lang.Throwable) iOException78);
        java.io.IOException iOException85 = new java.io.IOException("!ih100.01", (java.lang.Throwable) iOException84);
        iOException54.addSuppressed((java.lang.Throwable) iOException85);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        int int34 = strBuilder33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendFixedWidthPadLeft(10, 3, '!');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        int int42 = strBuilder38.indexOf(strMatcher40, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.insert(29, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 29");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder18.replace(strMatcher44, "falsehi!", 28, 115, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: hi!3");
        boolean boolean2 = strTokenizer1.hasNext();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.insert(8, (double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding(0, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer29.setQuoteMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer29.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer29.setDelimiterString("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setEmptyTokenAsNull(true);
        java.lang.Object obj59 = strTokenizer58.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer58.reset("1hi!hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder25.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer62, "hi!hi!97!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder25.appendln(strBuilder65, 48, 1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        int int34 = strBuilder33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendNull();
        boolean boolean37 = strBuilder35.contains("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        java.util.stream.IntStream intStream43 = strBuilder42.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendln(stringBuffer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder45.replaceFirst(strMatcher57, "hi!");
        int int60 = strBuilder42.indexOf(strMatcher57);
        int int61 = strBuilder35.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder35.replaceFirst('4', 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder35.delete(112, 122);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!");
        char[] charArray4 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4');
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strMatcher1.isMatch(charArray4, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[#, a]");
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setIgnoredChar('#');
        boolean boolean8 = strTokenizer7.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        java.lang.Object obj11 = strTokenizer10.clone();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.add("Tokenizer[!ih100.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert((int) '4', 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendFixedWidthPadRight((int) (byte) 10, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("!ih100.0", "!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strBuilder21.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer28.setQuoteMatcher(strMatcher48);
        char[] charArray54 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer51.reset(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer25.reset(charArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder16.append(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher67);
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        boolean boolean4 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.reset();
        boolean boolean6 = strTokenizer5.hasNext();
        java.lang.String str7 = strTokenizer5.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[hi!]" + "'", str7, "StrTokenizer[hi!]");
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoredChar(' ');
        java.lang.String str23 = strTokenizer22.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        int int71 = strBuilder45.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer29.setIgnoredMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer25.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer15.setQuoteMatcher(strMatcher68);
        java.lang.String[] strArray75 = strTokenizer74.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setDelimiterChar('!');
        boolean boolean78 = strTokenizer77.hasNext();
        boolean boolean79 = strTokenizer77.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        int int10 = strBuilder4.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator(' ', '1');
        java.lang.Iterable<java.lang.String> strIterable20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendWithSeparators(strIterable20, "i!");
        int int25 = strBuilder22.lastIndexOf("!ihfalsehi!!h20.0\n", 44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = strBuilder22.substring(41, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("1hi!hi!");
        boolean boolean2 = strTokenizer1.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.set("100.0100.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.append(' ');
        java.lang.String str28 = strBuilder27.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        int int44 = strBuilder33.indexOf(strMatcher38, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder27.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 100, '.');
        java.io.Writer writer50 = strBuilder49.asWriter();
        writer50.write((int) (short) -1);
        writer50.close();
        java.lang.CharSequence charSequence54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer57 = writer50.append(charSequence54, 16, 50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("hi!");
        boolean boolean29 = strBuilder3.equals(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.appendln(stringBuffer41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder31.replaceFirst(strMatcher43, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder31.insert((int) (short) 1, 'a');
        boolean boolean49 = strBuilder26.equals(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        java.lang.String str64 = strBuilder61.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder26.replaceFirst(strMatcher66, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!a\nh", strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0", strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset("hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterChar('!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setDelimiterChar('i');
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.setNewLineText("!");
        int int39 = strBuilder34.indexOf('a', (int) ' ');
        java.io.IOException iOException40 = new java.io.IOException();
        java.io.IOException iOException41 = new java.io.IOException();
        iOException40.addSuppressed((java.lang.Throwable) iOException41);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.lang.Throwable[] throwableArray44 = iOException43.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder34.appendAll((java.lang.Object[]) throwableArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder20.appendWithSeparators((java.lang.Object[]) throwableArray44, "");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(stringBuffer35);
        char[] charArray39 = strBuilder34.toCharArray((int) (byte) 1, (int) '!');
        boolean boolean41 = strBuilder34.contains("hi!#java.io.IOException              ");
        boolean boolean43 = strBuilder34.endsWith("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder34.append((float) 7);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[., 0, 0, 1, h, i,  , !, i, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("eslafhi!");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0StrTokenizer[!i!######truei!4", 'i');
        int int3 = strTokenizer2.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.Object obj53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendFixedWidthPadLeft(obj53, (int) (byte) 1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendSeparator('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "!ih100.0");
        int int79 = strBuilder66.indexOf(strMatcher75, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder56.replaceAll(strMatcher75, "hi!3");
        java.io.Writer writer82 = strBuilder56.asWriter();
        writer82.flush();
        // The following exception was thrown during execution in test generation
        try {
            writer82.write("hi!46                    1", (int) (short) 10, 54);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(writer82);
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        int int10 = strBuilder4.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.setLength(102);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        int int33 = strBuilder31.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean56 = strBuilder47.contains(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher55);
        int int58 = strBuilder35.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder35.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.replaceAll(strMatcher75, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean81 = strBuilder72.contains(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder35.deleteFirst(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n", strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer84);
        java.lang.Object obj86 = strTokenizer84.clone();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.deleteCharAt(9);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((int) 'a');
        int int22 = strBuilder18.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.minimizeCapacity();
        boolean boolean57 = strBuilder55.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder37.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        int int65 = strBuilder37.indexOf(strMatcher63, (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.replaceFirst(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        java.util.stream.IntStream intStream74 = strBuilder73.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append('#');
        java.io.IOException iOException77 = new java.io.IOException();
        java.io.IOException iOException78 = new java.io.IOException();
        java.io.IOException iOException79 = new java.io.IOException();
        iOException78.addSuppressed((java.lang.Throwable) iOException79);
        iOException77.addSuppressed((java.lang.Throwable) iOException79);
        java.io.IOException iOException82 = new java.io.IOException();
        java.io.IOException iOException83 = new java.io.IOException();
        iOException82.addSuppressed((java.lang.Throwable) iOException83);
        iOException79.addSuppressed((java.lang.Throwable) iOException83);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder73.appendFixedWidthPadRight((java.lang.Object) iOException79, (int) '!', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder73.appendSeparator(' ', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.replaceFirst('h', 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder37.append((java.lang.CharSequence) strBuilder94);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder18.appendln(strBuilder94);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder94.appendln("01hi!\n");
        java.lang.String str99 = strBuilder94.getNewLineText();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(intStream74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((long) 18);
        int int24 = strBuilder19.lastIndexOf('4', 78);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        java.lang.String str21 = strBuilder15.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.append(stringBuffer47);
        java.lang.String str51 = strBuilder48.midString(2, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((float) (byte) 100);
        java.lang.String str66 = strBuilder63.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder63.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("!ihfalsehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder48.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer69, "!#h100.0#falsehi!#hi!\n\n");
        boolean boolean74 = strTokenizer69.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer69.reset("1hi!hi!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "h" + "'", str21, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher14);
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.add("hi!8a");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        boolean boolean69 = strBuilder52.equals(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.append("!ih100.0\n!ih100.0#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder52.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder52.setCharAt(212, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 212");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        java.lang.String str10 = strBuilder8.leftString((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.minimizeCapacity();
        boolean boolean45 = strBuilder43.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder25.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer54, "!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder68.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setEmptyTokenAsNull(false);
        java.lang.String str75 = strTokenizer72.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst(strMatcher78, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer72.setDelimiterMatcher(strMatcher78);
        boolean boolean82 = strTokenizer72.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer72.getQuoteMatcher();
        int int84 = strBuilder56.indexOf(strMatcher83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder8.replaceFirst(strMatcher83, "java.io.IOException: StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.append(100.0d);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "h" + "'", str10, "h");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "!ih100.0" + "'", str75, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.append(7L);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder38.deleteAll(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((int) (byte) 10);
        char[] charArray60 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        java.util.stream.IntStream intStream66 = strBuilder65.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.deleteFirst(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder54.insert(6, charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln("0.001hi!hi!30.001hi 1");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.append('.');
        boolean boolean78 = strBuilder30.equals(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = strBuilder80.substring(50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(intStream66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        java.lang.String str21 = strBuilder15.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.append(stringBuffer47);
        java.io.Reader reader49 = strBuilder48.asReader();
        int int50 = reader49.read();
        int int51 = reader49.read();
        reader49.reset();
        java.nio.CharBuffer charBuffer53 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int54 = reader49.read(charBuffer53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "h" + "'", str21, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 104 + "'", int50 == 104);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 105 + "'", int51 == 105);
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean11 = strBuilder2.contains(strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher10, strMatcher12);
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.reset(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getDelimiterMatcher();
        java.lang.String str22 = strTokenizer20.next();
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#a" + "'", str22, "#a");
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.appendln("");
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder4.replaceFirst(strMatcher33, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence41 = strBuilder37.subSequence((int) 'v', 2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        iOException0.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException0);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException();
        iOException11.addSuppressed((java.lang.Throwable) iOException12);
        iOException8.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        iOException17.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException11.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException("h", (java.lang.Throwable) iOException21);
        iOException0.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.lang.String str30 = iOException26.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "java.io.IOException: h" + "'", str30, "java.io.IOException: h");
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setIgnoredChar('#');
        java.lang.String str8 = strTokenizer3.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.replaceAll(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strBuilder20.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setEmptyTokenAsNull(false);
        java.lang.String str27 = strTokenizer24.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer24.setDelimiterMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setIgnoredChar('a');
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer33.reset(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setQuoteMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer3.setIgnoredMatcher(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "!ih100.0" + "'", str27, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        java.util.stream.IntStream intStream5 = strBuilder4.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.insert(0, (long) '!');
        int int11 = strBuilder8.indexOf('#', (int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendSeparator('#', (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll('a', '1');
        java.io.Reader reader18 = strBuilder14.asReader();
        reader18.close();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader18);
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("hi!");
        java.lang.String str27 = strBuilder24.midString((int) 'a', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.deleteFirst("ehi!0a\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.replaceAll(strMatcher40, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean63 = strTokenizer62.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder34.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer62, "!ih100.0");
        char[] charArray68 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder34.appendln(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        int int77 = strMatcher32.isMatch(charArray68, (int) (short) 0, (int) 'h', 212);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder29.appendln(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder29.insert((int) (byte) 1, '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder29.insert(122, (float) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 122");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("hi!", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.replaceAll('#', 'a');
        boolean boolean60 = strBuilder40.equals((java.lang.Object) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder40.replaceFirst("hi!\n", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder21.appendln(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder40.reverse();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = strBuilder40.substring(13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean12 = strBuilder3.contains(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendFixedWidthPadRight((int) '#', 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.append((-1));
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher30);
        int int33 = strBuilder18.indexOf(strMatcher26, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        int int34 = strBuilder33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendFixedWidthPadLeft(10, 3, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator("0.001hi !ih100.0\n\n", "\000\000\000");
        int int44 = strBuilder41.lastIndexOf(' ', 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln("java.io.IOException: !ih100.0#a");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 18 + "'", int44 == 18);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('!', 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        java.lang.String str54 = strBuilder49.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder70.replaceAll(strMatcher73, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean79 = strBuilder70.contains(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder58.replaceAll(strMatcher64, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean87 = strTokenizer86.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder58.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer86, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder49.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader91 = strBuilder90.asReader();
        boolean boolean92 = reader91.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder35.append((java.lang.Object) reader91);
        char[] charArray96 = strBuilder93.toCharArray(8, (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = new org.apache.commons.lang3.text.StrTokenizer(charArray96, strMatcher97);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder19.appendln(charArray96);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "!" + "'", str54, "!");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(reader91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "fa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "fa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[f, a]");
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.replaceAll(strMatcher29, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer15.setTrimmerMatcher(strMatcher29);
        java.lang.String str49 = strTokenizer48.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll("", "hi!");
        java.lang.String str66 = strBuilder61.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.replaceFirst(strMatcher70, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.replaceAll(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder78.deleteAll("");
        java.lang.String str91 = strBuilder78.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder78.append(0L);
        char[] charArray94 = strBuilder93.toCharArray();
        char[] charArray95 = strBuilder76.getChars(charArray94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer48.reset(charArray94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray94);
        int int98 = strTokenizer97.previousIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[!ih100.0]" + "'", str49, "StrTokenizer[!ih100.0]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "!" + "'", str66, "!");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "!ih0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "!ih0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[!, i, h, 0]");
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "!ih100.0a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "!ih100.0a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[!, i, h, 1, 0, 0, ., 0, a]");
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "!ih100.0");
        int int20 = strBuilder7.indexOf(strMatcher16, (int) ' ');
        java.io.IOException iOException22 = new java.io.IOException();
        java.io.IOException iOException23 = new java.io.IOException();
        iOException22.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException23.getSuppressed();
        java.io.IOException iOException26 = new java.io.IOException();
        java.io.IOException iOException27 = new java.io.IOException();
        iOException26.addSuppressed((java.lang.Throwable) iOException27);
        iOException23.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException("ih100.010.0i!", (java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray31 = iOException30.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder7.appendAll((java.lang.Object[]) throwableArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder7.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((double) 'v');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((float) 2);
        int int40 = strBuilder36.lastIndexOf('h');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        boolean boolean9 = strBuilder4.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.appendSeparator("!ih100.0\n!ih100.0#", 12);
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(115);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher54);
        int int57 = strBuilder31.indexOf(strMatcher54);
        java.lang.StringBuffer stringBuffer58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendln(stringBuffer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceAll("", "hi!");
        int int76 = strBuilder74.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder31.append(strBuilder74);
        boolean boolean83 = strBuilder15.equalsIgnoreCase(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        reader24.close();
        reader24.reset();
        long long28 = reader24.skip((long) (byte) 0);
        reader24.reset();
        reader24.close();
        reader24.reset();
        boolean boolean32 = reader24.ready();
        boolean boolean33 = reader24.markSupported();
        reader24.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer24.append('#');
        writer24.close();
        writer24.write((-1));
        writer24.flush();
        writer24.write("kenizer");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.replaceAll(strMatcher17, "hi!\n");
        java.lang.String str22 = strBuilder1.midString((int) (short) 10, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder1.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer26.setQuoteMatcher(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer26.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer26.setDelimiterString("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer26.getDelimiterMatcher();
        int int55 = strTokenizer26.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, ".0");
        boolean boolean58 = strTokenizer26.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0" + "'", str22, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.setDelimiterChar('!');
        java.util.List<java.lang.String> strList14 = strTokenizer13.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("", "hi!");
        int int31 = strBuilder29.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        java.lang.StringBuffer stringBuffer49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder39.appendln(stringBuffer49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder39.replaceFirst(strMatcher51, "hi!");
        int int54 = strBuilder36.indexOf(strMatcher51);
        int int56 = strBuilder29.indexOf(strMatcher51, (int) '4');
        java.io.Reader reader57 = strBuilder29.asReader();
        char[] charArray60 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        int int75 = reader57.read(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer13.reset(charArray60);
        int int78 = strTokenizer13.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[!, i]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        boolean boolean5 = strTokenizer4.hasNext();
        java.lang.String str6 = strTokenizer4.nextToken();
        java.util.List<java.lang.String> strList7 = strTokenizer4.getTokenList();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "#a" + "'", str6, "#a");
        org.junit.Assert.assertNotNull(strList7);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.replaceAll(strMatcher34, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean57 = strTokenizer56.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer56, "!ih100.0");
        char[] charArray62 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder28.appendln(charArray62);
        int int68 = strMatcher26.isMatch(charArray62, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        char[] charArray72 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer69.setDelimiterMatcher(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer1.getQuoteMatcher();
        char[] charArray8 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.append(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int34 = strBuilder32.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher46, strMatcher48);
        char[] charArray52 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer49.reset(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer35.reset(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, "!i");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = strMatcher5.isMatch(charArray52, (int) 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!!ih100.0#a\n", '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar('h');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setQuoteChar('#');
        int int7 = strTokenizer2.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll("!i", "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        int int37 = strBuilder35.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder20.appendln(strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "!ih100.0");
        int int67 = strBuilder54.indexOf(strMatcher63, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder43.deleteAll(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder43.appendln((double) 13L);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('0', 14);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder18.deleteFirst(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder18.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.reset("hi!falsefalse\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer69.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        java.io.IOException iOException1 = new java.io.IOException("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        java.io.IOException iOException4 = new java.io.IOException("!ih100.0");
        java.io.IOException iOException5 = new java.io.IOException("!ih", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        iOException5.addSuppressed((java.lang.Throwable) iOException7);
        iOException1.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.String str10 = iOException5.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException: !ih" + "'", str10, "java.io.IOException: !ih");
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder13.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setEmptyTokenAsNull(false);
        java.lang.String str20 = strTokenizer17.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer17.setDelimiterMatcher(strMatcher23);
        boolean boolean27 = strTokenizer17.hasPrevious();
        char[] charArray30 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer17.reset(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder1.replaceFirst("java.io.IOException: hi!3", "fals");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll("", "hi!");
        int int66 = strBuilder64.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        java.lang.StringBuffer stringBuffer78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder68.appendln(stringBuffer78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder68.replaceFirst(strMatcher80, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder64.appendFixedWidthPadLeft((java.lang.Object) strBuilder82, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder64.reverse();
        char[] charArray89 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, 'a');
        char[] charArray95 = strBuilder64.getChars(charArray89);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder1.insert((int) (short) 10, charArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "!ih100.0" + "'", str20, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[!, 0, ., 0, 0, 1, h, i, !]");
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendSeparator("i!");
        boolean boolean42 = strBuilder7.equals(strBuilder37);
        // The following exception was thrown during execution in test generation
        try {
            char char44 = strBuilder7.charAt(25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 25");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getDelimiterMatcher();
        int int6 = strTokenizer4.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer4.setDelimiterChar('!');
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strList9);
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceAll("", "hi!");
        int int55 = strBuilder53.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        java.util.stream.IntStream intStream61 = strBuilder60.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean72 = strBuilder63.contains(strMatcher71);
        java.lang.StringBuffer stringBuffer73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder63.appendln(stringBuffer73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder63.replaceFirst(strMatcher75, "hi!");
        int int78 = strBuilder60.indexOf(strMatcher75);
        int int80 = strBuilder53.indexOf(strMatcher75, (int) '4');
        java.io.Reader reader81 = strBuilder53.asReader();
        java.io.IOException iOException82 = new java.io.IOException();
        java.io.IOException iOException83 = new java.io.IOException();
        iOException82.addSuppressed((java.lang.Throwable) iOException83);
        java.io.IOException iOException85 = new java.io.IOException((java.lang.Throwable) iOException83);
        java.lang.Throwable[] throwableArray86 = iOException85.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder53.appendWithSeparators((java.lang.Object[]) throwableArray86, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder38.appendAll((java.lang.Object[]) throwableArray86);
        int int91 = strBuilder38.indexOf("");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(reader81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#################################################", "falsehi!sehi!!4");
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.appendln(stringBuffer48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.replaceFirst(strMatcher50, "hi!");
        int int55 = strBuilder52.lastIndexOf("", (int) (byte) 0);
        java.lang.String str58 = strBuilder52.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder60.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceAll("", "hi!");
        int int75 = strBuilder73.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer84 = strBuilder83.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder52.append(stringBuffer84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder36.append(stringBuffer84);
        int int87 = strBuilder36.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder36.appendSeparator("hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder89.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.deleteFirst("#");
        char[] charArray93 = strBuilder90.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray93, 'v', '4');
        writer24.write(charArray93);
        writer24.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "h" + "'", str58, "h");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(stringBuffer84);
        org.junit.Assert.assertEquals(stringBuffer84.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 35 + "'", int87 == 35);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "3!ih1 ih100.0hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "3!ih1 ih100.0hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[3, !, i, h, 1,  , i, h, 1, 0, 0, ., 0, h, i, !]");
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.append(stringBuffer25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int28 = strBuilder26.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher40, strMatcher42);
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer43.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer29.reset(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        int int56 = strTokenizer55.nextIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.util.stream.IntStream intStream19 = strBuilder17.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        int int36 = strBuilder35.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((long) '1');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        int int40 = strBuilder38.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder17.deleteFirst(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder17.deleteFirst('v');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll("", "hi!");
        int int60 = strBuilder58.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder58.setLength((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder58.append('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder58.appendln(7);
        java.lang.StringBuffer stringBuffer73 = strBuilder58.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder17.append(stringBuffer73, (int) '#', 37);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(stringBuffer73);
        org.junit.Assert.assertEquals(stringBuffer73.toString(), "0.001hi \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\00017\n");
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert(7, "i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("hi!\n10", "1hi!hi!");
        int int30 = strBuilder24.indexOf('4', 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((float) (byte) 100);
        java.lang.String str45 = strBuilder42.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendSeparator('h', '4');
        char[] charArray53 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder50.deleteFirst(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder24.deleteFirst(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append('4');
        java.lang.String str72 = strBuilder68.rightString((int) '#');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "falsehii!hi!97!!!!04" + "'", str72, "falsehii!hi!97!!!!04");
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!ih", "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("!ih100.0#a", "hi!97!!!!!!!!!!!!!!!!!");
        java.lang.String str23 = strBuilder19.getNewLineText();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(7, (double) 1.0f);
        char[] charArray24 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", strMatcher33, strMatcher35);
        int int37 = strBuilder20.lastIndexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('a', 'a');
        int int52 = strBuilder49.indexOf("hi!\n", 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append((float) 18L);
        java.util.stream.IntStream intStream55 = strBuilder49.codePoints();
        char[] charArray58 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.replaceAll(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder75.append(stringBuffer81);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int84 = strBuilder82.indexOf(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, '4', 'h');
        char[] charArray91 = strBuilder49.getChars(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, '!');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder20.append(charArray58, 32, 105);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 105");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(intStream55);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "hi!a18.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "hi!a18.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[h, i, !, a, 1, 8, ., 0]");
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder15.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendSeparator(' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln(16);
        java.util.stream.IntStream intStream38 = strBuilder35.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendSeparator("ehi!0a\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setEmptyTokenAsNull(false);
        java.lang.String str49 = strTokenizer46.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        java.util.stream.IntStream intStream57 = strBuilder56.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.appendln((java.lang.Object) strBuilder58);
        char[] charArray62 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.append(stringBuffer85);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int88 = strBuilder86.indexOf(strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher87);
        char[] charArray90 = strBuilder59.getChars(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, '4');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "!ih100.0" + "'", str49, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "hai!hi!hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "hai!hi!hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[h, a, i, !, h, i, !, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendSeparator('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strBuilder18.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendSeparator("", 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.replaceAll("#i4100.0", "0.001hi 1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.replace(33, 10, "!ih100.0.h");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        java.io.Reader reader42 = strBuilder14.asReader();
        boolean boolean43 = reader42.markSupported();
        boolean boolean44 = reader42.ready();
        int int45 = reader42.read();
        char[] charArray46 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int49 = reader42.read(charArray46, 102, 33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 33 + "'", int45 == 33);
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        boolean boolean34 = strBuilder32.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder14.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "!");
        java.lang.String str46 = strTokenizer43.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer43.add("hi!!ih100.0#a\nfalse!!!!!!!!!!!!!!!!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.setLength(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.appendNull();
        boolean boolean31 = strBuilder28.contains('v');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setIgnoredChar(' ');
        java.lang.String str29 = strTokenizer28.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean75 = strBuilder66.contains(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher74);
        int int77 = strBuilder51.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer35.setIgnoredMatcher(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer31.setDelimiterMatcher(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer31.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer85, "eh!0a\nStrT");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer85.setQuoteChar('#');
        boolean boolean90 = strTokenizer85.hasNext();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        int int34 = strBuilder32.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder32.setLength((int) '4');
        java.lang.Object obj43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(obj43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        int int60 = strBuilder49.indexOf(strMatcher54, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder49.replaceAll("i!", "!ih100.0");
        boolean boolean64 = strBuilder42.equals(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceFirst('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder4.appendln((java.lang.Object) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteCharAt(1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.setNewLineText("#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNull();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        java.io.Writer writer12 = writer10.append('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(false);
        java.lang.String str43 = strTokenizer40.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean63 = strBuilder54.contains(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder52.deleteAll(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder44.append(strBuilder52);
        java.io.Writer writer66 = writer10.append((java.lang.CharSequence) strBuilder52);
        boolean boolean67 = strBuilder52.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder52.append((float) 16);
        java.lang.String str72 = strBuilder52.midString(40, 0);
        java.lang.String str75 = strBuilder52.substring(0, 41);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "!ih100.0" + "'", str43, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(writer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "falsehi!16.0" + "'", str75, "falsehi!16.0");
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.append(stringBuffer25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int28 = strBuilder26.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher40, strMatcher42);
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer43.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer29.reset(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, 'f', '#');
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer68.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher66, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", strMatcher70, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, 'h', 'i');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher74);
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((float) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        java.lang.String str33 = strBuilder21.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceAll("", "hi!");
        int int50 = strBuilder48.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        java.util.stream.IntStream intStream56 = strBuilder55.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean67 = strBuilder58.contains(strMatcher66);
        java.lang.StringBuffer stringBuffer68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder58.appendln(stringBuffer68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder58.replaceFirst(strMatcher70, "hi!");
        int int73 = strBuilder55.indexOf(strMatcher70);
        int int75 = strBuilder48.indexOf(strMatcher70, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder21.replaceFirst(strMatcher70, "StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder19.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln(true);
        boolean boolean82 = strBuilder78.contains("java.io.IOException: ");
        int int85 = strBuilder78.indexOf('.', 22);
        java.lang.String str87 = strBuilder78.rightString(35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = strBuilder78.substring((int) 'v', 8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!\n" + "'", str33, "hi!\n");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "!ih100.010.0-18.0true\n" + "'", str87, "!ih100.010.0-18.0true\n");
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(" ih100.0", 'a', '.');
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        boolean boolean11 = strBuilder1.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        java.lang.String str28 = strBuilder23.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.replaceFirst(strMatcher32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder1.appendln(strBuilder23, 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        java.lang.String str54 = strBuilder49.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder49.deleteFirst("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder37.appendln(strBuilder49);
        int int62 = strBuilder61.size();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "!" + "'", str28, "!");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "!" + "'", str54, "!");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 16 + "'", int62 == 16);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        boolean boolean17 = strBuilder15.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        int int26 = strBuilder15.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        java.lang.String str43 = strBuilder38.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder53.deleteAll(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder38.deleteFirst(strMatcher63);
        int int67 = strBuilder15.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder15.deleteFirst('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder15.appendln((long) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.replace(25, 8, "!ih100.01");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "!" + "'", str43, "!");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        reader24.close();
        reader24.reset();
        long long28 = reader24.skip((long) (byte) 0);
        reader24.reset();
        reader24.close();
        reader24.reset();
        boolean boolean32 = reader24.ready();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.0StrTokenizer[!ih100.0]11.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!hi!", strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder44.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean67 = strBuilder58.contains(strMatcher66);
        java.lang.StringBuffer stringBuffer68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder58.appendln(stringBuffer68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder58.replaceFirst(strMatcher70, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder58.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder56.appendln((java.lang.Object) (short) 1);
        java.lang.String str78 = strBuilder76.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.deleteAll("StrTokenizer[!ih100.0]");
        int int81 = strBuilder80.size();
        char[] charArray82 = null;
        char[] charArray83 = strBuilder80.getChars(charArray82);
        int int87 = strMatcher35.isMatch(charArray83, (int) (byte) -1, 0, (int) (short) 10);
        int int88 = reader24.read(charArray83);
        java.nio.CharBuffer charBuffer89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int90 = reader24.read(charBuffer89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "!ih100.0\n!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "!ih100.0\n!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[!, i, h, 1, 0, 0, ., 0, \n, !]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.insert(30, (long) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 30");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.lang.String str6 = strBuilder4.substring((int) (byte) 1);
        int int8 = strBuilder4.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.replaceAll(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.replaceAll("StrTokenizer[!ih100.0]", "i!");
        boolean boolean26 = strBuilder4.equalsIgnoreCase(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder4.setLength((int) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((int) '!');
        java.util.Iterator<java.lang.String> strItor35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendWithSeparators(strItor35, "!ih100.02");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "i!" + "'", str6, "i!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.0hi!97!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar('4');
        boolean boolean4 = strTokenizer3.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("hi!");
        boolean boolean29 = strBuilder3.equals(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.appendln(stringBuffer41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder31.replaceFirst(strMatcher43, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder31.insert((int) (short) 1, 'a');
        boolean boolean49 = strBuilder26.equals(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        java.lang.String str64 = strBuilder61.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder26.replaceFirst(strMatcher66, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!a\nh", strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0", strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset("hi!!ih100.0#a\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer72.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.append(stringBuffer25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int28 = strBuilder26.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher40, strMatcher42);
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer43.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer29.reset(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray46);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("\n530.001hi!", strMatcher2);
        java.lang.Class<?> wildcardClass4 = strMatcher2.getClass();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendSeparator('!', 1);
        char[] charArray31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(charArray31);
        java.io.Writer writer33 = strBuilder30.asWriter();
        writer33.write("hi!hi!97!!");
        writer33.close();
        writer33.write("100.00\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(writer33);
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        int int22 = strBuilder21.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.deleteFirst('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(false);
        java.lang.String str43 = strTokenizer40.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer40.setDelimiterMatcher(strMatcher46);
        boolean boolean50 = strTokenizer40.hasPrevious();
        char[] charArray53 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer40.reset(charArray53);
        boolean boolean68 = strTokenizer67.isIgnoreEmptyTokens();
        java.lang.String str69 = strTokenizer67.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer67.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder24.deleteFirst(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.appendNewLine();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 9 + "'", int22 == 9);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "!ih100.0" + "'", str43, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "#a" + "'", str69, "#a");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder40.reverse();
        char[] charArray65 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a');
        char[] charArray71 = strBuilder40.getChars(charArray65);
        int int72 = reader24.read(charArray71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray71);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher74);
        boolean boolean76 = strTokenizer75.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 9 + "'", int72 == 9);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert(7, (long) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendSeparator("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", "eh!0a\nStrT");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer29.setQuoteMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer29.setEmptyTokenAsNull(true);
        java.lang.String str55 = strTokenizer54.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer54.getDelimiterMatcher();
        java.lang.String str57 = strTokenizer54.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setDelimiterChar('!');
        java.util.List<java.lang.String> strList60 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder21.appendAll((java.lang.Iterable<java.lang.String>) strList60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendFixedWidthPadRight((int) (short) -1, 4, '0');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(212);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 212");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(stringBuffer35);
        char[] charArray39 = strBuilder34.toCharArray((int) (byte) 1, (int) '!');
        boolean boolean41 = strBuilder34.contains("hi!#java.io.IOException              ");
        boolean boolean43 = strBuilder34.endsWith("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder34.setNullText("java.io.IOException:");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder34.appendln("ih100.0", 30, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[., 0, 0, 1, h, i,  , !, i, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(290);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.replaceAll(strMatcher33, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean56 = strTokenizer55.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer55, "!ih100.0");
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder27.appendln(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ', ' ');
        char[] charArray70 = strBuilder1.getChars(charArray61);
        java.lang.StringBuffer stringBuffer71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder1.append(stringBuffer71, (int) (byte) -1, (int) '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", '1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer78, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder1.insert(9, (double) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.insert(0, (double) 23);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder87.append("falsehii!hi!97!!!!04", 100, (int) 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, i, !]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("\na0!iheslaf1\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('i');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.set("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder14.append(stringBuffer22, 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendFixedWidthPadLeft(72, 54, 'f');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('#', '#');
        char[] charArray33 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.append(charArray33);
        int int38 = strBuilder36.lastIndexOf("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendFixedWidthPadLeft((int) 'h', (int) (short) 1, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendln((float) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[!ih100.0]", strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.deleteFirst(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("kenizer");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: ", strMatcher48, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder9.deleteFirst(strMatcher52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder9.insert((int) '#', 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean56 = strBuilder1.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher67, strMatcher69);
        boolean boolean71 = strBuilder1.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst(strMatcher79, "");
        java.util.stream.IntStream intStream82 = strBuilder81.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln(false);
        char[] charArray88 = strBuilder87.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray88);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder75.insert((int) 'h', charArray88, 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(intStream82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "hi!falsefalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "hi!falsefalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[h, i, !, f, a, l, s, e, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher89);
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) iOException10, (int) '!', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(strBuilder21);
        java.util.stream.IntStream intStream23 = strBuilder20.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.setNewLineText("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        java.lang.String str28 = strBuilder25.midString(27, 4);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "i.av" + "'", str28, "i.av");
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.append('1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(" ih100.00", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder37.deleteAll(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((int) (byte) 10);
        char[] charArray59 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder55.insert(0, charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "");
        java.util.stream.IntStream intStream79 = strBuilder78.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder55.append((java.lang.CharSequence) "");
        char[] charArray88 = strBuilder87.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer29.reset(charArray88);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder26.append(charArray88, (int) 'a', 105);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 105");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(intStream79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#afalsehi!0a\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#afalsehi!0a\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, a, f, a, l, s, e, h, i, !, 0, a, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append("i!");
        int int15 = strBuilder13.lastIndexOf("java.io.IOException: java.io.IOException");
        java.lang.String str16 = strBuilder13.toString();
        int int19 = strBuilder13.indexOf("java.io.IOException: 1hi!hi!", 33);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!ihi!" + "'", str16, "!ihi!");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("!ih100.00\n", "");
        boolean boolean27 = strBuilder25.startsWith("i!");
        int int30 = strBuilder25.lastIndexOf('.', 17);
        int int32 = strBuilder25.indexOf('.');
        int int35 = strBuilder25.lastIndexOf("org.apach", 57);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hai!hi!");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.replaceAll(strMatcher29, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer15.setTrimmerMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder79.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.replaceAll('#', 'a');
        boolean boolean84 = strBuilder64.equals((java.lang.Object) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder64.replaceFirst("hi!\n", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.deleteAll('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.deleteAll(strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer48.setTrimmerMatcher(strMatcher90);
        boolean boolean93 = strTokenizer92.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder31.deleteAll("falsehi!0a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setEmptyTokenAsNull(false);
        java.lang.String str73 = strTokenizer70.next();
        java.lang.String str74 = strTokenizer70.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer70.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setDelimiterString("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setDelimiterString("i");
        java.util.List<java.lang.String> strList81 = strTokenizer78.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder54.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList81, "#a");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "!ih100.0" + "'", str73, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "!ih100.0" + "'", str74, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("hi!");
        boolean boolean49 = strBuilder23.equals(strBuilder46);
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteAll(' ');
        char[] charArray57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.append(charArray57, (int) (byte) -1, 33);
        boolean boolean62 = strBuilder54.startsWith("java.io.IOException: StrTokenizer[]");
        int int63 = strBuilder54.capacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 35 + "'", int63 == 35);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendSeparator('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strBuilder18.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNullText("ih100.0StrTokenizer[ih100.0]StrTo");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\000\000\000\000\000\000\000\000\000", "org.apach");
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("i!hi!97!!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str11 = strTokenizer10.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getQuoteMatcher();
        int int14 = strBuilder8.lastIndexOf(strMatcher12, (int) (byte) 100);
        int int16 = strBuilder8.indexOf("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean35 = strBuilder26.contains(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.deleteAll(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.append(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.appendSeparator("falsehi!!i!#hi!\n", (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.deleteFirst("001hi 1");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder36.append(0.0f);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = strBuilder36.substring(30, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.replaceAll('!', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.setCharAt(2, '4');
        char[] charArray50 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        char[] charArray60 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        java.util.stream.IntStream intStream66 = strBuilder65.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.deleteFirst(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer57.reset(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer55.reset(charArray60);
        char[] charArray75 = strBuilder44.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder44.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.insert(6, true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(intStream66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#i4100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#i4100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, i, 4, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strBuilder15.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setEmptyTokenAsNull(false);
        java.lang.String str22 = strTokenizer19.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setIgnoredChar('a');
        char[] charArray33 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer28.reset(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer48.setQuoteMatcher(strMatcher68);
        char[] charArray74 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer71.reset(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer28.reset(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer3.reset(charArray74);
        java.lang.String str81 = strTokenizer3.getContent();
        java.util.List<java.lang.String> strList82 = strTokenizer3.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "!ih100.0" + "'", str22, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "#a" + "'", str81, "#a");
        org.junit.Assert.assertNotNull(strList82);
    }
}
